// $ANTLR 3.4 /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g 2012-10-18 19:54:56

// AUTOGENERATED BY ANTLR!!! DO NOT MODIFY!!!

package com.gerixsoft.objc2xml.antlr;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.tree.*;


/**
* ObjectiveC version 2
* based on an LL ansic grammars and
* and ObjectiveC grammar found in Learning Object C
*
* It's a Work in progress, most of the .h file can be parsed
* June 2008 Cedric Cuche
**/
@SuppressWarnings({"all", "warnings", "unchecked"})
public class ObjectiveCParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "CHARACTER_LITERAL", "COMMENT", "DECIMAL_LITERAL", "EscapeSequence", "Exponent", "FLOATING_POINT_LITERAL", "FloatTypeSuffix", "HEX_LITERAL", "HexDigit", "IDENTIFIER", "IntegerTypeSuffix", "LETTER", "LINE_COMMAND", "LINE_COMMENT", "OCTAL_LITERAL", "OctalEscape", "STRING_LITERAL", "UnicodeEscape", "WS", "XML_ATTRIBUTE", "XML_ELEMENT", "'!'", "'!='", "'\"'", "'%'", "'%='", "'&&'", "'&'", "'&='", "'('", "')'", "'*'", "'*='", "'+'", "'++'", "'+='", "','", "'-'", "'--'", "'-='", "'->'", "'.'", "'...'", "'/'", "'/='", "':'", "';'", "'<'", "'<<'", "'<<='", "'<='", "'='", "'=='", "'>'", "'>='", "'>>'", "'>>='", "'?'", "'@catch'", "'@class'", "'@encode'", "'@end'", "'@finally'", "'@implementation'", "'@interface'", "'@package'", "'@private'", "'@protected'", "'@protocol'", "'@public'", "'@selector'", "'@synchronized'", "'@throw'", "'@trystatement'", "'['", "'\\\\'", "']'", "'^'", "'^='", "'auto'", "'break'", "'bycopy'", "'byref'", "'case'", "'char'", "'const'", "'continue'", "'default'", "'do'", "'double'", "'else'", "'enum'", "'extern'", "'float'", "'for'", "'goto'", "'id'", "'if'", "'in'", "'inout'", "'int'", "'long'", "'oneway'", "'out'", "'register'", "'return'", "'self'", "'short'", "'signed'", "'sizeof'", "'static'", "'struct'", "'super'", "'switch'", "'typedef'", "'union'", "'unsigned'", "'void'", "'volatile'", "'while'", "'{'", "'|'", "'|='", "'||'", "'}'", "'~'"
    };

    public static final int EOF=-1;
    public static final int T__25=25;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__59=59;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__90=90;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__99=99;
    public static final int T__100=100;
    public static final int T__101=101;
    public static final int T__102=102;
    public static final int T__103=103;
    public static final int T__104=104;
    public static final int T__105=105;
    public static final int T__106=106;
    public static final int T__107=107;
    public static final int T__108=108;
    public static final int T__109=109;
    public static final int T__110=110;
    public static final int T__111=111;
    public static final int T__112=112;
    public static final int T__113=113;
    public static final int T__114=114;
    public static final int T__115=115;
    public static final int T__116=116;
    public static final int T__117=117;
    public static final int T__118=118;
    public static final int T__119=119;
    public static final int T__120=120;
    public static final int T__121=121;
    public static final int T__122=122;
    public static final int T__123=123;
    public static final int T__124=124;
    public static final int T__125=125;
    public static final int T__126=126;
    public static final int T__127=127;
    public static final int T__128=128;
    public static final int T__129=129;
    public static final int CHARACTER_LITERAL=4;
    public static final int COMMENT=5;
    public static final int DECIMAL_LITERAL=6;
    public static final int EscapeSequence=7;
    public static final int Exponent=8;
    public static final int FLOATING_POINT_LITERAL=9;
    public static final int FloatTypeSuffix=10;
    public static final int HEX_LITERAL=11;
    public static final int HexDigit=12;
    public static final int IDENTIFIER=13;
    public static final int IntegerTypeSuffix=14;
    public static final int LETTER=15;
    public static final int LINE_COMMAND=16;
    public static final int LINE_COMMENT=17;
    public static final int OCTAL_LITERAL=18;
    public static final int OctalEscape=19;
    public static final int STRING_LITERAL=20;
    public static final int UnicodeEscape=21;
    public static final int WS=22;
    public static final int XML_ATTRIBUTE=23;
    public static final int XML_ELEMENT=24;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public ObjectiveCParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public ObjectiveCParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
    }

protected TreeAdaptor adaptor = new CommonTreeAdaptor();

public void setTreeAdaptor(TreeAdaptor adaptor) {
    this.adaptor = adaptor;
}
public TreeAdaptor getTreeAdaptor() {
    return adaptor;
}
    public String[] getTokenNames() { return ObjectiveCParser.tokenNames; }
    public String getGrammarFileName() { return "/home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g"; }


    public static class translation_unit_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "translation_unit"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:37:1: translation_unit : ( external_declaration )+ -> ^( XML_ELEMENT[\"objective-c\"] ( external_declaration )+ ) ;
    public final ObjectiveCParser.translation_unit_return translation_unit() throws RecognitionException {
        ObjectiveCParser.translation_unit_return retval = new ObjectiveCParser.translation_unit_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.external_declaration_return external_declaration1 =null;


        RewriteRuleSubtreeStream stream_external_declaration=new RewriteRuleSubtreeStream(adaptor,"rule external_declaration");
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:37:17: ( ( external_declaration )+ -> ^( XML_ELEMENT[\"objective-c\"] ( external_declaration )+ ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:37:19: ( external_declaration )+
            {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:37:19: ( external_declaration )+
            int cnt1=0;
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==IDENTIFIER||LA1_0==63||(LA1_0 >= 67 && LA1_0 <= 68)||LA1_0==72||LA1_0==83||(LA1_0 >= 85 && LA1_0 <= 86)||(LA1_0 >= 88 && LA1_0 <= 89)||LA1_0==93||(LA1_0 >= 95 && LA1_0 <= 97)||LA1_0==100||(LA1_0 >= 102 && LA1_0 <= 108)||(LA1_0 >= 111 && LA1_0 <= 112)||(LA1_0 >= 114 && LA1_0 <= 115)||(LA1_0 >= 118 && LA1_0 <= 122)) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:37:19: external_declaration
            	    {
            	    pushFollow(FOLLOW_external_declaration_in_translation_unit64);
            	    external_declaration1=external_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) stream_external_declaration.add(external_declaration1.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt1 >= 1 ) break loop1;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(1, input);
                        throw eee;
                }
                cnt1++;
            } while (true);


            // AST REWRITE
            // elements: external_declaration
            // token labels: 
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            // wildcard labels: 
            if ( state.backtracking==0 ) {

            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.tree:null);

            root_0 = (Object)adaptor.nil();
            // 38:2: -> ^( XML_ELEMENT[\"objective-c\"] ( external_declaration )+ )
            {
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:38:5: ^( XML_ELEMENT[\"objective-c\"] ( external_declaration )+ )
                {
                Object root_1 = (Object)adaptor.nil();
                root_1 = (Object)adaptor.becomeRoot(
                (Object)adaptor.create(XML_ELEMENT, "objective-c")
                , root_1);

                if ( !(stream_external_declaration.hasNext()) ) {
                    throw new RewriteEarlyExitException();
                }
                while ( stream_external_declaration.hasNext() ) {
                    adaptor.addChild(root_1, stream_external_declaration.nextTree());

                }
                stream_external_declaration.reset();

                adaptor.addChild(root_0, root_1);
                }

            }


            retval.tree = root_0;
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "translation_unit"


    public static class external_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "external_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:40:1: external_declaration : ( function_definition | declaration | class_interface | class_implementation | category_interface | category_implementation | protocol_declaration | protocol_declaration_list | class_declaration_list );
    public final ObjectiveCParser.external_declaration_return external_declaration() throws RecognitionException {
        ObjectiveCParser.external_declaration_return retval = new ObjectiveCParser.external_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.function_definition_return function_definition2 =null;

        ObjectiveCParser.declaration_return declaration3 =null;

        ObjectiveCParser.class_interface_return class_interface4 =null;

        ObjectiveCParser.class_implementation_return class_implementation5 =null;

        ObjectiveCParser.category_interface_return category_interface6 =null;

        ObjectiveCParser.category_implementation_return category_implementation7 =null;

        ObjectiveCParser.protocol_declaration_return protocol_declaration8 =null;

        ObjectiveCParser.protocol_declaration_list_return protocol_declaration_list9 =null;

        ObjectiveCParser.class_declaration_list_return class_declaration_list10 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:40:21: ( function_definition | declaration | class_interface | class_implementation | category_interface | category_implementation | protocol_declaration | protocol_declaration_list | class_declaration_list )
            int alt2=9;
            switch ( input.LA(1) ) {
            case 83:
            case 96:
            case 108:
            case 114:
            case 118:
                {
                int LA2_1 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 1, input);

                    throw nvae;

                }
                }
                break;
            case 121:
                {
                int LA2_2 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 2, input);

                    throw nvae;

                }
                }
                break;
            case 88:
                {
                int LA2_3 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 3, input);

                    throw nvae;

                }
                }
                break;
            case 111:
                {
                int LA2_4 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 4, input);

                    throw nvae;

                }
                }
                break;
            case 104:
                {
                int LA2_5 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 5, input);

                    throw nvae;

                }
                }
                break;
            case 105:
                {
                int LA2_6 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 6, input);

                    throw nvae;

                }
                }
                break;
            case 97:
                {
                int LA2_7 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 7, input);

                    throw nvae;

                }
                }
                break;
            case 93:
                {
                int LA2_8 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 8, input);

                    throw nvae;

                }
                }
                break;
            case 112:
                {
                int LA2_9 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 9, input);

                    throw nvae;

                }
                }
                break;
            case 120:
                {
                int LA2_10 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 10, input);

                    throw nvae;

                }
                }
                break;
            case 100:
                {
                int LA2_11 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 11, input);

                    throw nvae;

                }
                }
                break;
            case IDENTIFIER:
                {
                int LA2_12 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 12, input);

                    throw nvae;

                }
                }
                break;
            case 115:
            case 119:
                {
                int LA2_13 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 13, input);

                    throw nvae;

                }
                }
                break;
            case 95:
                {
                int LA2_14 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 14, input);

                    throw nvae;

                }
                }
                break;
            case 89:
                {
                int LA2_15 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 15, input);

                    throw nvae;

                }
                }
                break;
            case 122:
                {
                int LA2_16 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 16, input);

                    throw nvae;

                }
                }
                break;
            case 85:
            case 86:
            case 102:
            case 103:
            case 106:
            case 107:
                {
                int LA2_17 = input.LA(2);

                if ( (synpred2_ObjectiveC()) ) {
                    alt2=1;
                }
                else if ( (synpred3_ObjectiveC()) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 17, input);

                    throw nvae;

                }
                }
                break;
            case 68:
                {
                int LA2_18 = input.LA(2);

                if ( (synpred4_ObjectiveC()) ) {
                    alt2=3;
                }
                else if ( (synpred6_ObjectiveC()) ) {
                    alt2=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 18, input);

                    throw nvae;

                }
                }
                break;
            case 67:
                {
                int LA2_19 = input.LA(2);

                if ( (synpred5_ObjectiveC()) ) {
                    alt2=4;
                }
                else if ( (synpred7_ObjectiveC()) ) {
                    alt2=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 19, input);

                    throw nvae;

                }
                }
                break;
            case 72:
                {
                int LA2_20 = input.LA(2);

                if ( (synpred8_ObjectiveC()) ) {
                    alt2=7;
                }
                else if ( (synpred9_ObjectiveC()) ) {
                    alt2=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 20, input);

                    throw nvae;

                }
                }
                break;
            case 63:
                {
                alt2=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;

            }

            switch (alt2) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:42:5: function_definition
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_function_definition_in_external_declaration84);
                    function_definition2=function_definition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, function_definition2.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:43:3: declaration
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_declaration_in_external_declaration88);
                    declaration3=declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration3.getTree());

                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:44:3: class_interface
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_class_interface_in_external_declaration93);
                    class_interface4=class_interface();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_interface4.getTree());

                    }
                    break;
                case 4 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:45:3: class_implementation
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_class_implementation_in_external_declaration97);
                    class_implementation5=class_implementation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_implementation5.getTree());

                    }
                    break;
                case 5 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:46:3: category_interface
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_category_interface_in_external_declaration101);
                    category_interface6=category_interface();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, category_interface6.getTree());

                    }
                    break;
                case 6 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:47:3: category_implementation
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_category_implementation_in_external_declaration105);
                    category_implementation7=category_implementation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, category_implementation7.getTree());

                    }
                    break;
                case 7 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:48:3: protocol_declaration
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_protocol_declaration_in_external_declaration109);
                    protocol_declaration8=protocol_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_declaration8.getTree());

                    }
                    break;
                case 8 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:49:3: protocol_declaration_list
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_protocol_declaration_list_in_external_declaration113);
                    protocol_declaration_list9=protocol_declaration_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_declaration_list9.getTree());

                    }
                    break;
                case 9 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:50:3: class_declaration_list
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_class_declaration_list_in_external_declaration117);
                    class_declaration_list10=class_declaration_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration_list10.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "external_declaration"


    public static class file_specification_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "file_specification"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:62:1: file_specification : ( '<' | '\"' ) ( IDENTIFIER ( '/' | '\\\\' | '.' )? )+ ( '>' | '\"' ) ;
    public final ObjectiveCParser.file_specification_return file_specification() throws RecognitionException {
        ObjectiveCParser.file_specification_return retval = new ObjectiveCParser.file_specification_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set11=null;
        Token IDENTIFIER12=null;
        Token set13=null;
        Token set14=null;

        Object set11_tree=null;
        Object IDENTIFIER12_tree=null;
        Object set13_tree=null;
        Object set14_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:62:19: ( ( '<' | '\"' ) ( IDENTIFIER ( '/' | '\\\\' | '.' )? )+ ( '>' | '\"' ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:62:21: ( '<' | '\"' ) ( IDENTIFIER ( '/' | '\\\\' | '.' )? )+ ( '>' | '\"' )
            {
            root_0 = (Object)adaptor.nil();


            set11=(Token)input.LT(1);

            if ( input.LA(1)==27||input.LA(1)==51 ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set11)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:62:30: ( IDENTIFIER ( '/' | '\\\\' | '.' )? )+
            int cnt4=0;
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==IDENTIFIER) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:62:31: IDENTIFIER ( '/' | '\\\\' | '.' )?
            	    {
            	    IDENTIFIER12=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_file_specification131); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    IDENTIFIER12_tree = 
            	    (Object)adaptor.create(IDENTIFIER12)
            	    ;
            	    adaptor.addChild(root_0, IDENTIFIER12_tree);
            	    }

            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:62:42: ( '/' | '\\\\' | '.' )?
            	    int alt3=2;
            	    int LA3_0 = input.LA(1);

            	    if ( (LA3_0==45||LA3_0==47||LA3_0==79) ) {
            	        alt3=1;
            	    }
            	    switch (alt3) {
            	        case 1 :
            	            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:
            	            {
            	            set13=(Token)input.LT(1);

            	            if ( input.LA(1)==45||input.LA(1)==47||input.LA(1)==79 ) {
            	                input.consume();
            	                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
            	                (Object)adaptor.create(set13)
            	                );
            	                state.errorRecovery=false;
            	                state.failed=false;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return retval;}
            	                MismatchedSetException mse = new MismatchedSetException(null,input);
            	                throw mse;
            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt4 >= 1 ) break loop4;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(4, input);
                        throw eee;
                }
                cnt4++;
            } while (true);


            set14=(Token)input.LT(1);

            if ( input.LA(1)==27||input.LA(1)==57 ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set14)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "file_specification"


    public static class macro_specification_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "macro_specification"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:64:1: macro_specification : IDENTIFIER ;
    public final ObjectiveCParser.macro_specification_return macro_specification() throws RecognitionException {
        ObjectiveCParser.macro_specification_return retval = new ObjectiveCParser.macro_specification_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER15=null;

        Object IDENTIFIER15_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:64:20: ( IDENTIFIER )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:64:22: IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER15=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_macro_specification161); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER15_tree = 
            (Object)adaptor.create(IDENTIFIER15)
            ;
            adaptor.addChild(root_0, IDENTIFIER15_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "macro_specification"


    public static class class_interface_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_interface"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:66:1: class_interface : '@interface' (class_name= IDENTIFIER ( ':' superclass_name= IDENTIFIER )? ) '@end' -> ^( XML_ELEMENT[\"class\"] ^( XML_ATTRIBUTE[\"name\"] $class_name) ) ;
    public final ObjectiveCParser.class_interface_return class_interface() throws RecognitionException {
        ObjectiveCParser.class_interface_return retval = new ObjectiveCParser.class_interface_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token class_name=null;
        Token superclass_name=null;
        Token string_literal16=null;
        Token char_literal17=null;
        Token string_literal18=null;

        Object class_name_tree=null;
        Object superclass_name_tree=null;
        Object string_literal16_tree=null;
        Object char_literal17_tree=null;
        Object string_literal18_tree=null;
        RewriteRuleTokenStream stream_49=new RewriteRuleTokenStream(adaptor,"token 49");
        RewriteRuleTokenStream stream_68=new RewriteRuleTokenStream(adaptor,"token 68");
        RewriteRuleTokenStream stream_65=new RewriteRuleTokenStream(adaptor,"token 65");
        RewriteRuleTokenStream stream_IDENTIFIER=new RewriteRuleTokenStream(adaptor,"token IDENTIFIER");

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:66:16: ( '@interface' (class_name= IDENTIFIER ( ':' superclass_name= IDENTIFIER )? ) '@end' -> ^( XML_ELEMENT[\"class\"] ^( XML_ATTRIBUTE[\"name\"] $class_name) ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:67:2: '@interface' (class_name= IDENTIFIER ( ':' superclass_name= IDENTIFIER )? ) '@end'
            {
            string_literal16=(Token)match(input,68,FOLLOW_68_in_class_interface169); if (state.failed) return retval; 
            if ( state.backtracking==0 ) stream_68.add(string_literal16);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:68:2: (class_name= IDENTIFIER ( ':' superclass_name= IDENTIFIER )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:69:2: class_name= IDENTIFIER ( ':' superclass_name= IDENTIFIER )?
            {
            class_name=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_class_interface177); if (state.failed) return retval; 
            if ( state.backtracking==0 ) stream_IDENTIFIER.add(class_name);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:69:24: ( ':' superclass_name= IDENTIFIER )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==49) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:69:25: ':' superclass_name= IDENTIFIER
                    {
                    char_literal17=(Token)match(input,49,FOLLOW_49_in_class_interface180); if (state.failed) return retval; 
                    if ( state.backtracking==0 ) stream_49.add(char_literal17);


                    superclass_name=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_class_interface184); if (state.failed) return retval; 
                    if ( state.backtracking==0 ) stream_IDENTIFIER.add(superclass_name);


                    }
                    break;

            }


            }


            string_literal18=(Token)match(input,65,FOLLOW_65_in_class_interface198); if (state.failed) return retval; 
            if ( state.backtracking==0 ) stream_65.add(string_literal18);


            // AST REWRITE
            // elements: class_name
            // token labels: class_name
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            // wildcard labels: 
            if ( state.backtracking==0 ) {

            retval.tree = root_0;
            RewriteRuleTokenStream stream_class_name=new RewriteRuleTokenStream(adaptor,"token class_name",class_name);
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.tree:null);

            root_0 = (Object)adaptor.nil();
            // 75:2: -> ^( XML_ELEMENT[\"class\"] ^( XML_ATTRIBUTE[\"name\"] $class_name) )
            {
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:75:5: ^( XML_ELEMENT[\"class\"] ^( XML_ATTRIBUTE[\"name\"] $class_name) )
                {
                Object root_1 = (Object)adaptor.nil();
                root_1 = (Object)adaptor.becomeRoot(
                (Object)adaptor.create(XML_ELEMENT, "class")
                , root_1);

                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:75:28: ^( XML_ATTRIBUTE[\"name\"] $class_name)
                {
                Object root_2 = (Object)adaptor.nil();
                root_2 = (Object)adaptor.becomeRoot(
                (Object)adaptor.create(XML_ATTRIBUTE, "name")
                , root_2);

                adaptor.addChild(root_2, stream_class_name.nextNode());

                adaptor.addChild(root_1, root_2);
                }

                adaptor.addChild(root_0, root_1);
                }

            }


            retval.tree = root_0;
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_interface"


    public static class category_interface_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "category_interface"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:77:1: category_interface : '@interface' (class_name= IDENTIFIER '(' category_name ')' ( protocol_reference_list )? ( interface_declaration_list )? ) '@end' ;
    public final ObjectiveCParser.category_interface_return category_interface() throws RecognitionException {
        ObjectiveCParser.category_interface_return retval = new ObjectiveCParser.category_interface_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token class_name=null;
        Token string_literal19=null;
        Token char_literal20=null;
        Token char_literal22=null;
        Token string_literal25=null;
        ObjectiveCParser.category_name_return category_name21 =null;

        ObjectiveCParser.protocol_reference_list_return protocol_reference_list23 =null;

        ObjectiveCParser.interface_declaration_list_return interface_declaration_list24 =null;


        Object class_name_tree=null;
        Object string_literal19_tree=null;
        Object char_literal20_tree=null;
        Object char_literal22_tree=null;
        Object string_literal25_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:77:19: ( '@interface' (class_name= IDENTIFIER '(' category_name ')' ( protocol_reference_list )? ( interface_declaration_list )? ) '@end' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:78:2: '@interface' (class_name= IDENTIFIER '(' category_name ')' ( protocol_reference_list )? ( interface_declaration_list )? ) '@end'
            {
            root_0 = (Object)adaptor.nil();


            string_literal19=(Token)match(input,68,FOLLOW_68_in_category_interface222); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal19_tree = 
            (Object)adaptor.create(string_literal19)
            ;
            adaptor.addChild(root_0, string_literal19_tree);
            }

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:79:2: (class_name= IDENTIFIER '(' category_name ')' ( protocol_reference_list )? ( interface_declaration_list )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:80:2: class_name= IDENTIFIER '(' category_name ')' ( protocol_reference_list )? ( interface_declaration_list )?
            {
            class_name=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_category_interface230); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            class_name_tree = 
            (Object)adaptor.create(class_name)
            ;
            adaptor.addChild(root_0, class_name_tree);
            }

            char_literal20=(Token)match(input,33,FOLLOW_33_in_category_interface232); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal20_tree = 
            (Object)adaptor.create(char_literal20)
            ;
            adaptor.addChild(root_0, char_literal20_tree);
            }

            pushFollow(FOLLOW_category_name_in_category_interface234);
            category_name21=category_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, category_name21.getTree());

            char_literal22=(Token)match(input,34,FOLLOW_34_in_category_interface236); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal22_tree = 
            (Object)adaptor.create(char_literal22)
            ;
            adaptor.addChild(root_0, char_literal22_tree);
            }

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:81:2: ( protocol_reference_list )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==51) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:81:4: protocol_reference_list
                    {
                    pushFollow(FOLLOW_protocol_reference_list_in_category_interface241);
                    protocol_reference_list23=protocol_reference_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_reference_list23.getTree());

                    }
                    break;

            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:82:2: ( interface_declaration_list )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==IDENTIFIER||LA7_0==37||LA7_0==41||LA7_0==83||(LA7_0 >= 85 && LA7_0 <= 86)||(LA7_0 >= 88 && LA7_0 <= 89)||LA7_0==93||(LA7_0 >= 95 && LA7_0 <= 97)||LA7_0==100||(LA7_0 >= 102 && LA7_0 <= 108)||(LA7_0 >= 111 && LA7_0 <= 112)||(LA7_0 >= 114 && LA7_0 <= 115)||(LA7_0 >= 118 && LA7_0 <= 122)) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:82:4: interface_declaration_list
                    {
                    pushFollow(FOLLOW_interface_declaration_list_in_category_interface249);
                    interface_declaration_list24=interface_declaration_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration_list24.getTree());

                    }
                    break;

            }


            }


            string_literal25=(Token)match(input,65,FOLLOW_65_in_category_interface258); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal25_tree = 
            (Object)adaptor.create(string_literal25)
            ;
            adaptor.addChild(root_0, string_literal25_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "category_interface"


    public static class class_implementation_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_implementation"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:86:1: class_implementation : '@implementation' (class_name= IDENTIFIER ( ':' superclass_name= IDENTIFIER )? ( implementation_definition_list )? ) '@end' ;
    public final ObjectiveCParser.class_implementation_return class_implementation() throws RecognitionException {
        ObjectiveCParser.class_implementation_return retval = new ObjectiveCParser.class_implementation_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token class_name=null;
        Token superclass_name=null;
        Token string_literal26=null;
        Token char_literal27=null;
        Token string_literal29=null;
        ObjectiveCParser.implementation_definition_list_return implementation_definition_list28 =null;


        Object class_name_tree=null;
        Object superclass_name_tree=null;
        Object string_literal26_tree=null;
        Object char_literal27_tree=null;
        Object string_literal29_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:86:21: ( '@implementation' (class_name= IDENTIFIER ( ':' superclass_name= IDENTIFIER )? ( implementation_definition_list )? ) '@end' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:87:2: '@implementation' (class_name= IDENTIFIER ( ':' superclass_name= IDENTIFIER )? ( implementation_definition_list )? ) '@end'
            {
            root_0 = (Object)adaptor.nil();


            string_literal26=(Token)match(input,67,FOLLOW_67_in_class_implementation266); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal26_tree = 
            (Object)adaptor.create(string_literal26)
            ;
            adaptor.addChild(root_0, string_literal26_tree);
            }

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:88:2: (class_name= IDENTIFIER ( ':' superclass_name= IDENTIFIER )? ( implementation_definition_list )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:89:2: class_name= IDENTIFIER ( ':' superclass_name= IDENTIFIER )? ( implementation_definition_list )?
            {
            class_name=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_class_implementation274); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            class_name_tree = 
            (Object)adaptor.create(class_name)
            ;
            adaptor.addChild(root_0, class_name_tree);
            }

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:89:24: ( ':' superclass_name= IDENTIFIER )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==49) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:89:26: ':' superclass_name= IDENTIFIER
                    {
                    char_literal27=(Token)match(input,49,FOLLOW_49_in_class_implementation278); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal27_tree = 
                    (Object)adaptor.create(char_literal27)
                    ;
                    adaptor.addChild(root_0, char_literal27_tree);
                    }

                    superclass_name=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_class_implementation282); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    superclass_name_tree = 
                    (Object)adaptor.create(superclass_name)
                    ;
                    adaptor.addChild(root_0, superclass_name_tree);
                    }

                    }
                    break;

            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:90:2: ( implementation_definition_list )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==IDENTIFIER||LA9_0==37||LA9_0==41||LA9_0==83||(LA9_0 >= 85 && LA9_0 <= 86)||(LA9_0 >= 88 && LA9_0 <= 89)||LA9_0==93||(LA9_0 >= 95 && LA9_0 <= 97)||LA9_0==100||(LA9_0 >= 102 && LA9_0 <= 108)||(LA9_0 >= 111 && LA9_0 <= 112)||(LA9_0 >= 114 && LA9_0 <= 115)||(LA9_0 >= 118 && LA9_0 <= 122)) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:90:4: implementation_definition_list
                    {
                    pushFollow(FOLLOW_implementation_definition_list_in_class_implementation290);
                    implementation_definition_list28=implementation_definition_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, implementation_definition_list28.getTree());

                    }
                    break;

            }


            }


            string_literal29=(Token)match(input,65,FOLLOW_65_in_class_implementation299); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal29_tree = 
            (Object)adaptor.create(string_literal29)
            ;
            adaptor.addChild(root_0, string_literal29_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_implementation"


    public static class category_implementation_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "category_implementation"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:94:1: category_implementation : '@implementation' (class_name= IDENTIFIER '(' category_name ')' ( implementation_definition_list )? ) '@end' ;
    public final ObjectiveCParser.category_implementation_return category_implementation() throws RecognitionException {
        ObjectiveCParser.category_implementation_return retval = new ObjectiveCParser.category_implementation_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token class_name=null;
        Token string_literal30=null;
        Token char_literal31=null;
        Token char_literal33=null;
        Token string_literal35=null;
        ObjectiveCParser.category_name_return category_name32 =null;

        ObjectiveCParser.implementation_definition_list_return implementation_definition_list34 =null;


        Object class_name_tree=null;
        Object string_literal30_tree=null;
        Object char_literal31_tree=null;
        Object char_literal33_tree=null;
        Object string_literal35_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:94:24: ( '@implementation' (class_name= IDENTIFIER '(' category_name ')' ( implementation_definition_list )? ) '@end' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:95:2: '@implementation' (class_name= IDENTIFIER '(' category_name ')' ( implementation_definition_list )? ) '@end'
            {
            root_0 = (Object)adaptor.nil();


            string_literal30=(Token)match(input,67,FOLLOW_67_in_category_implementation307); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal30_tree = 
            (Object)adaptor.create(string_literal30)
            ;
            adaptor.addChild(root_0, string_literal30_tree);
            }

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:95:19: (class_name= IDENTIFIER '(' category_name ')' ( implementation_definition_list )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:96:2: class_name= IDENTIFIER '(' category_name ')' ( implementation_definition_list )?
            {
            class_name=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_category_implementation313); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            class_name_tree = 
            (Object)adaptor.create(class_name)
            ;
            adaptor.addChild(root_0, class_name_tree);
            }

            char_literal31=(Token)match(input,33,FOLLOW_33_in_category_implementation315); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal31_tree = 
            (Object)adaptor.create(char_literal31)
            ;
            adaptor.addChild(root_0, char_literal31_tree);
            }

            pushFollow(FOLLOW_category_name_in_category_implementation317);
            category_name32=category_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, category_name32.getTree());

            char_literal33=(Token)match(input,34,FOLLOW_34_in_category_implementation319); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal33_tree = 
            (Object)adaptor.create(char_literal33)
            ;
            adaptor.addChild(root_0, char_literal33_tree);
            }

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:97:2: ( implementation_definition_list )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==IDENTIFIER||LA10_0==37||LA10_0==41||LA10_0==83||(LA10_0 >= 85 && LA10_0 <= 86)||(LA10_0 >= 88 && LA10_0 <= 89)||LA10_0==93||(LA10_0 >= 95 && LA10_0 <= 97)||LA10_0==100||(LA10_0 >= 102 && LA10_0 <= 108)||(LA10_0 >= 111 && LA10_0 <= 112)||(LA10_0 >= 114 && LA10_0 <= 115)||(LA10_0 >= 118 && LA10_0 <= 122)) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:97:4: implementation_definition_list
                    {
                    pushFollow(FOLLOW_implementation_definition_list_in_category_implementation324);
                    implementation_definition_list34=implementation_definition_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, implementation_definition_list34.getTree());

                    }
                    break;

            }


            }


            string_literal35=(Token)match(input,65,FOLLOW_65_in_category_implementation331); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal35_tree = 
            (Object)adaptor.create(string_literal35)
            ;
            adaptor.addChild(root_0, string_literal35_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "category_implementation"


    public static class protocol_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "protocol_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:100:1: protocol_declaration : '@protocol' ( protocol_name ( protocol_reference_list )? ( interface_declaration_list )? ) '@end' ;
    public final ObjectiveCParser.protocol_declaration_return protocol_declaration() throws RecognitionException {
        ObjectiveCParser.protocol_declaration_return retval = new ObjectiveCParser.protocol_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal36=null;
        Token string_literal40=null;
        ObjectiveCParser.protocol_name_return protocol_name37 =null;

        ObjectiveCParser.protocol_reference_list_return protocol_reference_list38 =null;

        ObjectiveCParser.interface_declaration_list_return interface_declaration_list39 =null;


        Object string_literal36_tree=null;
        Object string_literal40_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:100:21: ( '@protocol' ( protocol_name ( protocol_reference_list )? ( interface_declaration_list )? ) '@end' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:101:2: '@protocol' ( protocol_name ( protocol_reference_list )? ( interface_declaration_list )? ) '@end'
            {
            root_0 = (Object)adaptor.nil();


            string_literal36=(Token)match(input,72,FOLLOW_72_in_protocol_declaration339); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal36_tree = 
            (Object)adaptor.create(string_literal36)
            ;
            adaptor.addChild(root_0, string_literal36_tree);
            }

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:101:13: ( protocol_name ( protocol_reference_list )? ( interface_declaration_list )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:102:2: protocol_name ( protocol_reference_list )? ( interface_declaration_list )?
            {
            pushFollow(FOLLOW_protocol_name_in_protocol_declaration343);
            protocol_name37=protocol_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_name37.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:102:16: ( protocol_reference_list )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==51) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:102:18: protocol_reference_list
                    {
                    pushFollow(FOLLOW_protocol_reference_list_in_protocol_declaration347);
                    protocol_reference_list38=protocol_reference_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_reference_list38.getTree());

                    }
                    break;

            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:103:2: ( interface_declaration_list )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==IDENTIFIER||LA12_0==37||LA12_0==41||LA12_0==83||(LA12_0 >= 85 && LA12_0 <= 86)||(LA12_0 >= 88 && LA12_0 <= 89)||LA12_0==93||(LA12_0 >= 95 && LA12_0 <= 97)||LA12_0==100||(LA12_0 >= 102 && LA12_0 <= 108)||(LA12_0 >= 111 && LA12_0 <= 112)||(LA12_0 >= 114 && LA12_0 <= 115)||(LA12_0 >= 118 && LA12_0 <= 122)) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:103:4: interface_declaration_list
                    {
                    pushFollow(FOLLOW_interface_declaration_list_in_protocol_declaration355);
                    interface_declaration_list39=interface_declaration_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration_list39.getTree());

                    }
                    break;

            }


            }


            string_literal40=(Token)match(input,65,FOLLOW_65_in_protocol_declaration362); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal40_tree = 
            (Object)adaptor.create(string_literal40)
            ;
            adaptor.addChild(root_0, string_literal40_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "protocol_declaration"


    public static class protocol_declaration_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "protocol_declaration_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:106:1: protocol_declaration_list : ( '@protocol' protocol_list ';' ) ;
    public final ObjectiveCParser.protocol_declaration_list_return protocol_declaration_list() throws RecognitionException {
        ObjectiveCParser.protocol_declaration_list_return retval = new ObjectiveCParser.protocol_declaration_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal41=null;
        Token char_literal43=null;
        ObjectiveCParser.protocol_list_return protocol_list42 =null;


        Object string_literal41_tree=null;
        Object char_literal43_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:106:26: ( ( '@protocol' protocol_list ';' ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:107:2: ( '@protocol' protocol_list ';' )
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:107:2: ( '@protocol' protocol_list ';' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:107:3: '@protocol' protocol_list ';'
            {
            string_literal41=(Token)match(input,72,FOLLOW_72_in_protocol_declaration_list371); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal41_tree = 
            (Object)adaptor.create(string_literal41)
            ;
            adaptor.addChild(root_0, string_literal41_tree);
            }

            pushFollow(FOLLOW_protocol_list_in_protocol_declaration_list373);
            protocol_list42=protocol_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_list42.getTree());

            char_literal43=(Token)match(input,50,FOLLOW_50_in_protocol_declaration_list374); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal43_tree = 
            (Object)adaptor.create(char_literal43)
            ;
            adaptor.addChild(root_0, char_literal43_tree);
            }

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "protocol_declaration_list"


    public static class class_declaration_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_declaration_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:110:1: class_declaration_list : ( '@class' class_list ';' ) ;
    public final ObjectiveCParser.class_declaration_list_return class_declaration_list() throws RecognitionException {
        ObjectiveCParser.class_declaration_list_return retval = new ObjectiveCParser.class_declaration_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal44=null;
        Token char_literal46=null;
        ObjectiveCParser.class_list_return class_list45 =null;


        Object string_literal44_tree=null;
        Object char_literal46_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:110:23: ( ( '@class' class_list ';' ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:111:2: ( '@class' class_list ';' )
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:111:2: ( '@class' class_list ';' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:111:3: '@class' class_list ';'
            {
            string_literal44=(Token)match(input,63,FOLLOW_63_in_class_declaration_list386); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal44_tree = 
            (Object)adaptor.create(string_literal44)
            ;
            adaptor.addChild(root_0, string_literal44_tree);
            }

            pushFollow(FOLLOW_class_list_in_class_declaration_list388);
            class_list45=class_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, class_list45.getTree());

            char_literal46=(Token)match(input,50,FOLLOW_50_in_class_declaration_list389); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal46_tree = 
            (Object)adaptor.create(char_literal46)
            ;
            adaptor.addChild(root_0, char_literal46_tree);
            }

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_declaration_list"


    public static class class_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:114:1: class_list : class_name= IDENTIFIER ( ',' class_name= IDENTIFIER )* ;
    public final ObjectiveCParser.class_list_return class_list() throws RecognitionException {
        ObjectiveCParser.class_list_return retval = new ObjectiveCParser.class_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token class_name=null;
        Token char_literal47=null;

        Object class_name_tree=null;
        Object char_literal47_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:114:11: (class_name= IDENTIFIER ( ',' class_name= IDENTIFIER )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:115:2: class_name= IDENTIFIER ( ',' class_name= IDENTIFIER )*
            {
            root_0 = (Object)adaptor.nil();


            class_name=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_class_list402); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            class_name_tree = 
            (Object)adaptor.create(class_name)
            ;
            adaptor.addChild(root_0, class_name_tree);
            }

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:115:24: ( ',' class_name= IDENTIFIER )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==40) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:115:25: ',' class_name= IDENTIFIER
            	    {
            	    char_literal47=(Token)match(input,40,FOLLOW_40_in_class_list405); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal47_tree = 
            	    (Object)adaptor.create(char_literal47)
            	    ;
            	    adaptor.addChild(root_0, char_literal47_tree);
            	    }

            	    class_name=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_class_list409); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    class_name_tree = 
            	    (Object)adaptor.create(class_name)
            	    ;
            	    adaptor.addChild(root_0, class_name_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_list"


    public static class protocol_reference_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "protocol_reference_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:117:1: protocol_reference_list : ( '<' protocol_list '>' ) ;
    public final ObjectiveCParser.protocol_reference_list_return protocol_reference_list() throws RecognitionException {
        ObjectiveCParser.protocol_reference_list_return retval = new ObjectiveCParser.protocol_reference_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal48=null;
        Token char_literal50=null;
        ObjectiveCParser.protocol_list_return protocol_list49 =null;


        Object char_literal48_tree=null;
        Object char_literal50_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:117:24: ( ( '<' protocol_list '>' ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:118:2: ( '<' protocol_list '>' )
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:118:2: ( '<' protocol_list '>' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:118:3: '<' protocol_list '>'
            {
            char_literal48=(Token)match(input,51,FOLLOW_51_in_protocol_reference_list420); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal48_tree = 
            (Object)adaptor.create(char_literal48)
            ;
            adaptor.addChild(root_0, char_literal48_tree);
            }

            pushFollow(FOLLOW_protocol_list_in_protocol_reference_list422);
            protocol_list49=protocol_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_list49.getTree());

            char_literal50=(Token)match(input,57,FOLLOW_57_in_protocol_reference_list424); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal50_tree = 
            (Object)adaptor.create(char_literal50)
            ;
            adaptor.addChild(root_0, char_literal50_tree);
            }

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "protocol_reference_list"


    public static class protocol_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "protocol_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:120:1: protocol_list : protocol_name ( ',' protocol_name )* ;
    public final ObjectiveCParser.protocol_list_return protocol_list() throws RecognitionException {
        ObjectiveCParser.protocol_list_return retval = new ObjectiveCParser.protocol_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal52=null;
        ObjectiveCParser.protocol_name_return protocol_name51 =null;

        ObjectiveCParser.protocol_name_return protocol_name53 =null;


        Object char_literal52_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:120:14: ( protocol_name ( ',' protocol_name )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:121:2: protocol_name ( ',' protocol_name )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_protocol_name_in_protocol_list433);
            protocol_name51=protocol_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_name51.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:121:16: ( ',' protocol_name )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==40) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:121:17: ',' protocol_name
            	    {
            	    char_literal52=(Token)match(input,40,FOLLOW_40_in_protocol_list436); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal52_tree = 
            	    (Object)adaptor.create(char_literal52)
            	    ;
            	    adaptor.addChild(root_0, char_literal52_tree);
            	    }

            	    pushFollow(FOLLOW_protocol_name_in_protocol_list438);
            	    protocol_name53=protocol_name();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_name53.getTree());

            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "protocol_list"


    public static class category_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "category_name"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:123:1: category_name : IDENTIFIER ;
    public final ObjectiveCParser.category_name_return category_name() throws RecognitionException {
        ObjectiveCParser.category_name_return retval = new ObjectiveCParser.category_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER54=null;

        Object IDENTIFIER54_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:123:14: ( IDENTIFIER )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:124:2: IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER54=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_category_name448); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER54_tree = 
            (Object)adaptor.create(IDENTIFIER54)
            ;
            adaptor.addChild(root_0, IDENTIFIER54_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "category_name"


    public static class protocol_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "protocol_name"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:126:1: protocol_name : IDENTIFIER ;
    public final ObjectiveCParser.protocol_name_return protocol_name() throws RecognitionException {
        ObjectiveCParser.protocol_name_return retval = new ObjectiveCParser.protocol_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER55=null;

        Object IDENTIFIER55_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:126:14: ( IDENTIFIER )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:127:2: IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER55=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_protocol_name456); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER55_tree = 
            (Object)adaptor.create(IDENTIFIER55)
            ;
            adaptor.addChild(root_0, IDENTIFIER55_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "protocol_name"


    public static class instance_variables_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "instance_variables"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:129:1: instance_variables : '{' instance_variable_declaration '}' ;
    public final ObjectiveCParser.instance_variables_return instance_variables() throws RecognitionException {
        ObjectiveCParser.instance_variables_return retval = new ObjectiveCParser.instance_variables_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal56=null;
        Token char_literal58=null;
        ObjectiveCParser.instance_variable_declaration_return instance_variable_declaration57 =null;


        Object char_literal56_tree=null;
        Object char_literal58_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:129:19: ( '{' instance_variable_declaration '}' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:130:2: '{' instance_variable_declaration '}'
            {
            root_0 = (Object)adaptor.nil();


            char_literal56=(Token)match(input,124,FOLLOW_124_in_instance_variables464); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal56_tree = 
            (Object)adaptor.create(char_literal56)
            ;
            adaptor.addChild(root_0, char_literal56_tree);
            }

            pushFollow(FOLLOW_instance_variable_declaration_in_instance_variables466);
            instance_variable_declaration57=instance_variable_declaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, instance_variable_declaration57.getTree());

            char_literal58=(Token)match(input,128,FOLLOW_128_in_instance_variables468); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal58_tree = 
            (Object)adaptor.create(char_literal58)
            ;
            adaptor.addChild(root_0, char_literal58_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "instance_variables"


    public static class instance_variable_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "instance_variable_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:132:1: instance_variable_declaration : ( visibility_specification | struct_declarator_list instance_variables )+ ;
    public final ObjectiveCParser.instance_variable_declaration_return instance_variable_declaration() throws RecognitionException {
        ObjectiveCParser.instance_variable_declaration_return retval = new ObjectiveCParser.instance_variable_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.visibility_specification_return visibility_specification59 =null;

        ObjectiveCParser.struct_declarator_list_return struct_declarator_list60 =null;

        ObjectiveCParser.instance_variables_return instance_variables61 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:132:30: ( ( visibility_specification | struct_declarator_list instance_variables )+ )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:133:2: ( visibility_specification | struct_declarator_list instance_variables )+
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:133:2: ( visibility_specification | struct_declarator_list instance_variables )+
            int cnt15=0;
            loop15:
            do {
                int alt15=3;
                int LA15_0 = input.LA(1);

                if ( ((LA15_0 >= 69 && LA15_0 <= 71)||LA15_0==73) ) {
                    alt15=1;
                }
                else if ( (LA15_0==IDENTIFIER||LA15_0==33||LA15_0==35||LA15_0==49) ) {
                    alt15=2;
                }


                switch (alt15) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:133:3: visibility_specification
            	    {
            	    pushFollow(FOLLOW_visibility_specification_in_instance_variable_declaration478);
            	    visibility_specification59=visibility_specification();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, visibility_specification59.getTree());

            	    }
            	    break;
            	case 2 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:133:30: struct_declarator_list instance_variables
            	    {
            	    pushFollow(FOLLOW_struct_declarator_list_in_instance_variable_declaration482);
            	    struct_declarator_list60=struct_declarator_list();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declarator_list60.getTree());

            	    pushFollow(FOLLOW_instance_variables_in_instance_variable_declaration484);
            	    instance_variables61=instance_variables();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, instance_variables61.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt15 >= 1 ) break loop15;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(15, input);
                        throw eee;
                }
                cnt15++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "instance_variable_declaration"


    public static class visibility_specification_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "visibility_specification"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:136:1: visibility_specification : ( '@private' | '@protected' | '@package' | '@public' );
    public final ObjectiveCParser.visibility_specification_return visibility_specification() throws RecognitionException {
        ObjectiveCParser.visibility_specification_return retval = new ObjectiveCParser.visibility_specification_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set62=null;

        Object set62_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:136:25: ( '@private' | '@protected' | '@package' | '@public' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:
            {
            root_0 = (Object)adaptor.nil();


            set62=(Token)input.LT(1);

            if ( (input.LA(1) >= 69 && input.LA(1) <= 71)||input.LA(1)==73 ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set62)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "visibility_specification"


    public static class interface_declaration_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_declaration_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:142:1: interface_declaration_list : ( declaration | class_method_declaration | instance_method_declaration )+ ;
    public final ObjectiveCParser.interface_declaration_list_return interface_declaration_list() throws RecognitionException {
        ObjectiveCParser.interface_declaration_list_return retval = new ObjectiveCParser.interface_declaration_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.declaration_return declaration63 =null;

        ObjectiveCParser.class_method_declaration_return class_method_declaration64 =null;

        ObjectiveCParser.instance_method_declaration_return instance_method_declaration65 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:142:27: ( ( declaration | class_method_declaration | instance_method_declaration )+ )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:143:2: ( declaration | class_method_declaration | instance_method_declaration )+
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:143:2: ( declaration | class_method_declaration | instance_method_declaration )+
            int cnt16=0;
            loop16:
            do {
                int alt16=4;
                switch ( input.LA(1) ) {
                case IDENTIFIER:
                case 83:
                case 85:
                case 86:
                case 88:
                case 89:
                case 93:
                case 95:
                case 96:
                case 97:
                case 100:
                case 102:
                case 103:
                case 104:
                case 105:
                case 106:
                case 107:
                case 108:
                case 111:
                case 112:
                case 114:
                case 115:
                case 118:
                case 119:
                case 120:
                case 121:
                case 122:
                    {
                    alt16=1;
                    }
                    break;
                case 37:
                    {
                    alt16=2;
                    }
                    break;
                case 41:
                    {
                    alt16=3;
                    }
                    break;

                }

                switch (alt16) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:143:3: declaration
            	    {
            	    pushFollow(FOLLOW_declaration_in_interface_declaration_list521);
            	    declaration63=declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration63.getTree());

            	    }
            	    break;
            	case 2 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:143:17: class_method_declaration
            	    {
            	    pushFollow(FOLLOW_class_method_declaration_in_interface_declaration_list525);
            	    class_method_declaration64=class_method_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_method_declaration64.getTree());

            	    }
            	    break;
            	case 3 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:143:44: instance_method_declaration
            	    {
            	    pushFollow(FOLLOW_instance_method_declaration_in_interface_declaration_list529);
            	    instance_method_declaration65=instance_method_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, instance_method_declaration65.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt16 >= 1 ) break loop16;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(16, input);
                        throw eee;
                }
                cnt16++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_declaration_list"


    public static class class_method_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_method_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:146:1: class_method_declaration : ( '+' method_declaration ) ;
    public final ObjectiveCParser.class_method_declaration_return class_method_declaration() throws RecognitionException {
        ObjectiveCParser.class_method_declaration_return retval = new ObjectiveCParser.class_method_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal66=null;
        ObjectiveCParser.method_declaration_return method_declaration67 =null;


        Object char_literal66_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:146:25: ( ( '+' method_declaration ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:147:2: ( '+' method_declaration )
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:147:2: ( '+' method_declaration )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:147:3: '+' method_declaration
            {
            char_literal66=(Token)match(input,37,FOLLOW_37_in_class_method_declaration542); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal66_tree = 
            (Object)adaptor.create(char_literal66)
            ;
            adaptor.addChild(root_0, char_literal66_tree);
            }

            pushFollow(FOLLOW_method_declaration_in_class_method_declaration544);
            method_declaration67=method_declaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration67.getTree());

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_method_declaration"


    public static class instance_method_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "instance_method_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:150:1: instance_method_declaration : ( '-' method_declaration ) -> ^( XML_ELEMENT[\"message\"] method_declaration ) ;
    public final ObjectiveCParser.instance_method_declaration_return instance_method_declaration() throws RecognitionException {
        ObjectiveCParser.instance_method_declaration_return retval = new ObjectiveCParser.instance_method_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal68=null;
        ObjectiveCParser.method_declaration_return method_declaration69 =null;


        Object char_literal68_tree=null;
        RewriteRuleTokenStream stream_41=new RewriteRuleTokenStream(adaptor,"token 41");
        RewriteRuleSubtreeStream stream_method_declaration=new RewriteRuleSubtreeStream(adaptor,"rule method_declaration");
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:150:28: ( ( '-' method_declaration ) -> ^( XML_ELEMENT[\"message\"] method_declaration ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:151:2: ( '-' method_declaration )
            {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:151:2: ( '-' method_declaration )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:151:3: '-' method_declaration
            {
            char_literal68=(Token)match(input,41,FOLLOW_41_in_instance_method_declaration556); if (state.failed) return retval; 
            if ( state.backtracking==0 ) stream_41.add(char_literal68);


            pushFollow(FOLLOW_method_declaration_in_instance_method_declaration558);
            method_declaration69=method_declaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) stream_method_declaration.add(method_declaration69.getTree());

            }


            // AST REWRITE
            // elements: method_declaration
            // token labels: 
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            // wildcard labels: 
            if ( state.backtracking==0 ) {

            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.tree:null);

            root_0 = (Object)adaptor.nil();
            // 152:2: -> ^( XML_ELEMENT[\"message\"] method_declaration )
            {
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:152:5: ^( XML_ELEMENT[\"message\"] method_declaration )
                {
                Object root_1 = (Object)adaptor.nil();
                root_1 = (Object)adaptor.becomeRoot(
                (Object)adaptor.create(XML_ELEMENT, "message")
                , root_1);

                adaptor.addChild(root_1, stream_method_declaration.nextTree());

                adaptor.addChild(root_0, root_1);
                }

            }


            retval.tree = root_0;
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "instance_method_declaration"


    public static class method_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:155:1: method_declaration : ( method_type )? method_selector ';' -> ^( XML_ATTRIBUTE[\"returns\"] method_type ) method_selector ;
    public final ObjectiveCParser.method_declaration_return method_declaration() throws RecognitionException {
        ObjectiveCParser.method_declaration_return retval = new ObjectiveCParser.method_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal72=null;
        ObjectiveCParser.method_type_return method_type70 =null;

        ObjectiveCParser.method_selector_return method_selector71 =null;


        Object char_literal72_tree=null;
        RewriteRuleTokenStream stream_50=new RewriteRuleTokenStream(adaptor,"token 50");
        RewriteRuleSubtreeStream stream_method_selector=new RewriteRuleSubtreeStream(adaptor,"rule method_selector");
        RewriteRuleSubtreeStream stream_method_type=new RewriteRuleSubtreeStream(adaptor,"rule method_type");
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:155:19: ( ( method_type )? method_selector ';' -> ^( XML_ATTRIBUTE[\"returns\"] method_type ) method_selector )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:156:2: ( method_type )? method_selector ';'
            {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:156:2: ( method_type )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==33) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:156:4: method_type
                    {
                    pushFollow(FOLLOW_method_type_in_method_declaration581);
                    method_type70=method_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) stream_method_type.add(method_type70.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_method_selector_in_method_declaration586);
            method_selector71=method_selector();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) stream_method_selector.add(method_selector71.getTree());

            char_literal72=(Token)match(input,50,FOLLOW_50_in_method_declaration588); if (state.failed) return retval; 
            if ( state.backtracking==0 ) stream_50.add(char_literal72);


            // AST REWRITE
            // elements: method_selector, method_type
            // token labels: 
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            // wildcard labels: 
            if ( state.backtracking==0 ) {

            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.tree:null);

            root_0 = (Object)adaptor.nil();
            // 157:2: -> ^( XML_ATTRIBUTE[\"returns\"] method_type ) method_selector
            {
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:157:5: ^( XML_ATTRIBUTE[\"returns\"] method_type )
                {
                Object root_1 = (Object)adaptor.nil();
                root_1 = (Object)adaptor.becomeRoot(
                (Object)adaptor.create(XML_ATTRIBUTE, "returns")
                , root_1);

                adaptor.addChild(root_1, stream_method_type.nextTree());

                adaptor.addChild(root_0, root_1);
                }

                adaptor.addChild(root_0, stream_method_selector.nextTree());

            }


            retval.tree = root_0;
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_declaration"


    public static class implementation_definition_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "implementation_definition_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:160:1: implementation_definition_list : ( function_definition | declaration | class_method_definition | instance_method_definition )+ ;
    public final ObjectiveCParser.implementation_definition_list_return implementation_definition_list() throws RecognitionException {
        ObjectiveCParser.implementation_definition_list_return retval = new ObjectiveCParser.implementation_definition_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.function_definition_return function_definition73 =null;

        ObjectiveCParser.declaration_return declaration74 =null;

        ObjectiveCParser.class_method_definition_return class_method_definition75 =null;

        ObjectiveCParser.instance_method_definition_return instance_method_definition76 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:160:31: ( ( function_definition | declaration | class_method_definition | instance_method_definition )+ )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:161:2: ( function_definition | declaration | class_method_definition | instance_method_definition )+
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:161:2: ( function_definition | declaration | class_method_definition | instance_method_definition )+
            int cnt18=0;
            loop18:
            do {
                int alt18=5;
                switch ( input.LA(1) ) {
                case 83:
                case 96:
                case 108:
                case 114:
                case 118:
                    {
                    int LA18_3 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 121:
                    {
                    int LA18_4 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 88:
                    {
                    int LA18_5 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 111:
                    {
                    int LA18_6 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 104:
                    {
                    int LA18_7 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 105:
                    {
                    int LA18_8 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 97:
                    {
                    int LA18_9 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 93:
                    {
                    int LA18_10 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 112:
                    {
                    int LA18_11 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 120:
                    {
                    int LA18_12 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 100:
                    {
                    int LA18_13 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case IDENTIFIER:
                    {
                    int LA18_14 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 115:
                case 119:
                    {
                    int LA18_15 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 95:
                    {
                    int LA18_16 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 89:
                    {
                    int LA18_17 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 122:
                    {
                    int LA18_18 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 85:
                case 86:
                case 102:
                case 103:
                case 106:
                case 107:
                    {
                    int LA18_19 = input.LA(2);

                    if ( (synpred35_ObjectiveC()) ) {
                        alt18=1;
                    }
                    else if ( (synpred36_ObjectiveC()) ) {
                        alt18=2;
                    }


                    }
                    break;
                case 37:
                    {
                    alt18=3;
                    }
                    break;
                case 41:
                    {
                    alt18=4;
                    }
                    break;

                }

                switch (alt18) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:161:3: function_definition
            	    {
            	    pushFollow(FOLLOW_function_definition_in_implementation_definition_list610);
            	    function_definition73=function_definition();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, function_definition73.getTree());

            	    }
            	    break;
            	case 2 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:161:25: declaration
            	    {
            	    pushFollow(FOLLOW_declaration_in_implementation_definition_list614);
            	    declaration74=declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration74.getTree());

            	    }
            	    break;
            	case 3 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:161:39: class_method_definition
            	    {
            	    pushFollow(FOLLOW_class_method_definition_in_implementation_definition_list618);
            	    class_method_definition75=class_method_definition();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_method_definition75.getTree());

            	    }
            	    break;
            	case 4 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:161:65: instance_method_definition
            	    {
            	    pushFollow(FOLLOW_instance_method_definition_in_implementation_definition_list622);
            	    instance_method_definition76=instance_method_definition();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, instance_method_definition76.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt18 >= 1 ) break loop18;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(18, input);
                        throw eee;
                }
                cnt18++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "implementation_definition_list"


    public static class class_method_definition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_method_definition"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:163:1: class_method_definition : ( '+' method_definition ) ;
    public final ObjectiveCParser.class_method_definition_return class_method_definition() throws RecognitionException {
        ObjectiveCParser.class_method_definition_return retval = new ObjectiveCParser.class_method_definition_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal77=null;
        ObjectiveCParser.method_definition_return method_definition78 =null;


        Object char_literal77_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:163:24: ( ( '+' method_definition ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:164:2: ( '+' method_definition )
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:164:2: ( '+' method_definition )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:164:3: '+' method_definition
            {
            char_literal77=(Token)match(input,37,FOLLOW_37_in_class_method_definition633); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal77_tree = 
            (Object)adaptor.create(char_literal77)
            ;
            adaptor.addChild(root_0, char_literal77_tree);
            }

            pushFollow(FOLLOW_method_definition_in_class_method_definition635);
            method_definition78=method_definition();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_definition78.getTree());

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_method_definition"


    public static class instance_method_definition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "instance_method_definition"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:167:1: instance_method_definition : ( '-' method_definition ) ;
    public final ObjectiveCParser.instance_method_definition_return instance_method_definition() throws RecognitionException {
        ObjectiveCParser.instance_method_definition_return retval = new ObjectiveCParser.instance_method_definition_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal79=null;
        ObjectiveCParser.method_definition_return method_definition80 =null;


        Object char_literal79_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:167:27: ( ( '-' method_definition ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:168:2: ( '-' method_definition )
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:168:2: ( '-' method_definition )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:168:3: '-' method_definition
            {
            char_literal79=(Token)match(input,41,FOLLOW_41_in_instance_method_definition647); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal79_tree = 
            (Object)adaptor.create(char_literal79)
            ;
            adaptor.addChild(root_0, char_literal79_tree);
            }

            pushFollow(FOLLOW_method_definition_in_instance_method_definition649);
            method_definition80=method_definition();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_definition80.getTree());

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "instance_method_definition"


    public static class method_definition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_definition"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:171:1: method_definition : ( method_type )? method_selector ( init_declarator_list )? compound_statement ;
    public final ObjectiveCParser.method_definition_return method_definition() throws RecognitionException {
        ObjectiveCParser.method_definition_return retval = new ObjectiveCParser.method_definition_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.method_type_return method_type81 =null;

        ObjectiveCParser.method_selector_return method_selector82 =null;

        ObjectiveCParser.init_declarator_list_return init_declarator_list83 =null;

        ObjectiveCParser.compound_statement_return compound_statement84 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:171:18: ( ( method_type )? method_selector ( init_declarator_list )? compound_statement )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:172:2: ( method_type )? method_selector ( init_declarator_list )? compound_statement
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:172:2: ( method_type )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==33) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:172:3: method_type
                    {
                    pushFollow(FOLLOW_method_type_in_method_definition662);
                    method_type81=method_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_type81.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_method_selector_in_method_definition666);
            method_selector82=method_selector();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_selector82.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:172:33: ( init_declarator_list )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==IDENTIFIER||LA20_0==33||LA20_0==35) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:172:34: init_declarator_list
                    {
                    pushFollow(FOLLOW_init_declarator_list_in_method_definition669);
                    init_declarator_list83=init_declarator_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, init_declarator_list83.getTree());

                    }
                    break;

            }


            pushFollow(FOLLOW_compound_statement_in_method_definition673);
            compound_statement84=compound_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, compound_statement84.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_definition"


    public static class method_selector_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_selector"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:174:1: method_selector : selector ( keyword_declarator )* ( parameter_list )? -> ^( XML_ATTRIBUTE[\"name\"] selector ) ( keyword_declarator )* ( parameter_list )? ;
    public final ObjectiveCParser.method_selector_return method_selector() throws RecognitionException {
        ObjectiveCParser.method_selector_return retval = new ObjectiveCParser.method_selector_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.selector_return selector85 =null;

        ObjectiveCParser.keyword_declarator_return keyword_declarator86 =null;

        ObjectiveCParser.parameter_list_return parameter_list87 =null;


        RewriteRuleSubtreeStream stream_selector=new RewriteRuleSubtreeStream(adaptor,"rule selector");
        RewriteRuleSubtreeStream stream_keyword_declarator=new RewriteRuleSubtreeStream(adaptor,"rule keyword_declarator");
        RewriteRuleSubtreeStream stream_parameter_list=new RewriteRuleSubtreeStream(adaptor,"rule parameter_list");
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:174:16: ( selector ( keyword_declarator )* ( parameter_list )? -> ^( XML_ATTRIBUTE[\"name\"] selector ) ( keyword_declarator )* ( parameter_list )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:175:2: selector ( keyword_declarator )* ( parameter_list )?
            {
            pushFollow(FOLLOW_selector_in_method_selector681);
            selector85=selector();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) stream_selector.add(selector85.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:175:11: ( keyword_declarator )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==49) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:175:11: keyword_declarator
            	    {
            	    pushFollow(FOLLOW_keyword_declarator_in_method_selector683);
            	    keyword_declarator86=keyword_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) stream_keyword_declarator.add(keyword_declarator86.getTree());

            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:175:31: ( parameter_list )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==83||(LA22_0 >= 85 && LA22_0 <= 86)||(LA22_0 >= 88 && LA22_0 <= 89)||LA22_0==93||(LA22_0 >= 95 && LA22_0 <= 97)||LA22_0==100||(LA22_0 >= 102 && LA22_0 <= 108)||(LA22_0 >= 111 && LA22_0 <= 112)||(LA22_0 >= 114 && LA22_0 <= 115)||(LA22_0 >= 118 && LA22_0 <= 122)) ) {
                alt22=1;
            }
            else if ( (LA22_0==IDENTIFIER) ) {
                int LA22_2 = input.LA(2);

                if ( (synpred42_ObjectiveC()) ) {
                    alt22=1;
                }
            }
            switch (alt22) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:175:32: parameter_list
                    {
                    pushFollow(FOLLOW_parameter_list_in_method_selector687);
                    parameter_list87=parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) stream_parameter_list.add(parameter_list87.getTree());

                    }
                    break;

            }


            // AST REWRITE
            // elements: selector, parameter_list, keyword_declarator
            // token labels: 
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            // wildcard labels: 
            if ( state.backtracking==0 ) {

            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.tree:null);

            root_0 = (Object)adaptor.nil();
            // 176:2: -> ^( XML_ATTRIBUTE[\"name\"] selector ) ( keyword_declarator )* ( parameter_list )?
            {
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:176:5: ^( XML_ATTRIBUTE[\"name\"] selector )
                {
                Object root_1 = (Object)adaptor.nil();
                root_1 = (Object)adaptor.becomeRoot(
                (Object)adaptor.create(XML_ATTRIBUTE, "name")
                , root_1);

                adaptor.addChild(root_1, stream_selector.nextTree());

                adaptor.addChild(root_0, root_1);
                }

                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:176:39: ( keyword_declarator )*
                while ( stream_keyword_declarator.hasNext() ) {
                    adaptor.addChild(root_0, stream_keyword_declarator.nextTree());

                }
                stream_keyword_declarator.reset();

                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:176:59: ( parameter_list )?
                if ( stream_parameter_list.hasNext() ) {
                    adaptor.addChild(root_0, stream_parameter_list.nextTree());

                }
                stream_parameter_list.reset();

            }


            retval.tree = root_0;
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_selector"


    public static class keyword_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "keyword_declarator"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:179:1: keyword_declarator : ':' method_type IDENTIFIER -> ^( XML_ELEMENT[\"argument\"] ^( XML_ATTRIBUTE[\"type\"] method_type ) ^( XML_ATTRIBUTE[\"name\"] IDENTIFIER ) ) ;
    public final ObjectiveCParser.keyword_declarator_return keyword_declarator() throws RecognitionException {
        ObjectiveCParser.keyword_declarator_return retval = new ObjectiveCParser.keyword_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal88=null;
        Token IDENTIFIER90=null;
        ObjectiveCParser.method_type_return method_type89 =null;


        Object char_literal88_tree=null;
        Object IDENTIFIER90_tree=null;
        RewriteRuleTokenStream stream_49=new RewriteRuleTokenStream(adaptor,"token 49");
        RewriteRuleTokenStream stream_IDENTIFIER=new RewriteRuleTokenStream(adaptor,"token IDENTIFIER");
        RewriteRuleSubtreeStream stream_method_type=new RewriteRuleSubtreeStream(adaptor,"rule method_type");
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:179:19: ( ':' method_type IDENTIFIER -> ^( XML_ELEMENT[\"argument\"] ^( XML_ATTRIBUTE[\"type\"] method_type ) ^( XML_ATTRIBUTE[\"name\"] IDENTIFIER ) ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:180:2: ':' method_type IDENTIFIER
            {
            char_literal88=(Token)match(input,49,FOLLOW_49_in_keyword_declarator716); if (state.failed) return retval; 
            if ( state.backtracking==0 ) stream_49.add(char_literal88);


            pushFollow(FOLLOW_method_type_in_keyword_declarator718);
            method_type89=method_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) stream_method_type.add(method_type89.getTree());

            IDENTIFIER90=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_keyword_declarator720); if (state.failed) return retval; 
            if ( state.backtracking==0 ) stream_IDENTIFIER.add(IDENTIFIER90);


            // AST REWRITE
            // elements: IDENTIFIER, method_type
            // token labels: 
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            // wildcard labels: 
            if ( state.backtracking==0 ) {

            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.tree:null);

            root_0 = (Object)adaptor.nil();
            // 181:2: -> ^( XML_ELEMENT[\"argument\"] ^( XML_ATTRIBUTE[\"type\"] method_type ) ^( XML_ATTRIBUTE[\"name\"] IDENTIFIER ) )
            {
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:181:5: ^( XML_ELEMENT[\"argument\"] ^( XML_ATTRIBUTE[\"type\"] method_type ) ^( XML_ATTRIBUTE[\"name\"] IDENTIFIER ) )
                {
                Object root_1 = (Object)adaptor.nil();
                root_1 = (Object)adaptor.becomeRoot(
                (Object)adaptor.create(XML_ELEMENT, "argument")
                , root_1);

                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:181:31: ^( XML_ATTRIBUTE[\"type\"] method_type )
                {
                Object root_2 = (Object)adaptor.nil();
                root_2 = (Object)adaptor.becomeRoot(
                (Object)adaptor.create(XML_ATTRIBUTE, "type")
                , root_2);

                adaptor.addChild(root_2, stream_method_type.nextTree());

                adaptor.addChild(root_1, root_2);
                }

                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:181:68: ^( XML_ATTRIBUTE[\"name\"] IDENTIFIER )
                {
                Object root_2 = (Object)adaptor.nil();
                root_2 = (Object)adaptor.becomeRoot(
                (Object)adaptor.create(XML_ATTRIBUTE, "name")
                , root_2);

                adaptor.addChild(root_2, 
                stream_IDENTIFIER.nextNode()
                );

                adaptor.addChild(root_1, root_2);
                }

                adaptor.addChild(root_0, root_1);
                }

            }


            retval.tree = root_0;
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "keyword_declarator"


    public static class selector_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "selector"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:184:1: selector : IDENTIFIER ;
    public final ObjectiveCParser.selector_return selector() throws RecognitionException {
        ObjectiveCParser.selector_return retval = new ObjectiveCParser.selector_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER91=null;

        Object IDENTIFIER91_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:184:9: ( IDENTIFIER )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:185:1: IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER91=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_selector749); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER91_tree = 
            (Object)adaptor.create(IDENTIFIER91)
            ;
            adaptor.addChild(root_0, IDENTIFIER91_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "selector"


    public static class method_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_type"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:187:1: method_type : '(' type_name ')' -> type_name ;
    public final ObjectiveCParser.method_type_return method_type() throws RecognitionException {
        ObjectiveCParser.method_type_return retval = new ObjectiveCParser.method_type_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal92=null;
        Token char_literal94=null;
        ObjectiveCParser.type_name_return type_name93 =null;


        Object char_literal92_tree=null;
        Object char_literal94_tree=null;
        RewriteRuleTokenStream stream_33=new RewriteRuleTokenStream(adaptor,"token 33");
        RewriteRuleTokenStream stream_34=new RewriteRuleTokenStream(adaptor,"token 34");
        RewriteRuleSubtreeStream stream_type_name=new RewriteRuleSubtreeStream(adaptor,"rule type_name");
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:187:12: ( '(' type_name ')' -> type_name )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:188:1: '(' type_name ')'
            {
            char_literal92=(Token)match(input,33,FOLLOW_33_in_method_type756); if (state.failed) return retval; 
            if ( state.backtracking==0 ) stream_33.add(char_literal92);


            pushFollow(FOLLOW_type_name_in_method_type758);
            type_name93=type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) stream_type_name.add(type_name93.getTree());

            char_literal94=(Token)match(input,34,FOLLOW_34_in_method_type760); if (state.failed) return retval; 
            if ( state.backtracking==0 ) stream_34.add(char_literal94);


            // AST REWRITE
            // elements: type_name
            // token labels: 
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            // wildcard labels: 
            if ( state.backtracking==0 ) {

            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.tree:null);

            root_0 = (Object)adaptor.nil();
            // 189:3: -> type_name
            {
                adaptor.addChild(root_0, stream_type_name.nextTree());

            }


            retval.tree = root_0;
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_type"


    public static class type_specifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_specifier"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:191:1: type_specifier : ( 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | ( 'id' ( protocol_reference_list )? ) | (class_name= IDENTIFIER ( protocol_reference_list )? ) | struct_or_union_specifier | enum_specifier | IDENTIFIER );
    public final ObjectiveCParser.type_specifier_return type_specifier() throws RecognitionException {
        ObjectiveCParser.type_specifier_return retval = new ObjectiveCParser.type_specifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token class_name=null;
        Token string_literal95=null;
        Token string_literal96=null;
        Token string_literal97=null;
        Token string_literal98=null;
        Token string_literal99=null;
        Token string_literal100=null;
        Token string_literal101=null;
        Token string_literal102=null;
        Token string_literal103=null;
        Token string_literal104=null;
        Token IDENTIFIER109=null;
        ObjectiveCParser.protocol_reference_list_return protocol_reference_list105 =null;

        ObjectiveCParser.protocol_reference_list_return protocol_reference_list106 =null;

        ObjectiveCParser.struct_or_union_specifier_return struct_or_union_specifier107 =null;

        ObjectiveCParser.enum_specifier_return enum_specifier108 =null;


        Object class_name_tree=null;
        Object string_literal95_tree=null;
        Object string_literal96_tree=null;
        Object string_literal97_tree=null;
        Object string_literal98_tree=null;
        Object string_literal99_tree=null;
        Object string_literal100_tree=null;
        Object string_literal101_tree=null;
        Object string_literal102_tree=null;
        Object string_literal103_tree=null;
        Object string_literal104_tree=null;
        Object IDENTIFIER109_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:191:15: ( 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | ( 'id' ( protocol_reference_list )? ) | (class_name= IDENTIFIER ( protocol_reference_list )? ) | struct_or_union_specifier | enum_specifier | IDENTIFIER )
            int alt25=14;
            switch ( input.LA(1) ) {
            case 121:
                {
                alt25=1;
                }
                break;
            case 88:
                {
                alt25=2;
                }
                break;
            case 111:
                {
                alt25=3;
                }
                break;
            case 104:
                {
                alt25=4;
                }
                break;
            case 105:
                {
                alt25=5;
                }
                break;
            case 97:
                {
                alt25=6;
                }
                break;
            case 93:
                {
                alt25=7;
                }
                break;
            case 112:
                {
                alt25=8;
                }
                break;
            case 120:
                {
                alt25=9;
                }
                break;
            case 100:
                {
                alt25=10;
                }
                break;
            case IDENTIFIER:
                {
                int LA25_11 = input.LA(2);

                if ( (synpred55_ObjectiveC()) ) {
                    alt25=11;
                }
                else if ( (true) ) {
                    alt25=14;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 25, 11, input);

                    throw nvae;

                }
                }
                break;
            case 115:
            case 119:
                {
                alt25=12;
                }
                break;
            case 95:
                {
                alt25=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;

            }

            switch (alt25) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:192:0: 'void'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal95=(Token)match(input,121,FOLLOW_121_in_type_specifier773); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal95_tree = 
                    (Object)adaptor.create(string_literal95)
                    ;
                    adaptor.addChild(root_0, string_literal95_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:192:10: 'char'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal96=(Token)match(input,88,FOLLOW_88_in_type_specifier777); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal96_tree = 
                    (Object)adaptor.create(string_literal96)
                    ;
                    adaptor.addChild(root_0, string_literal96_tree);
                    }

                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:192:19: 'short'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal97=(Token)match(input,111,FOLLOW_111_in_type_specifier781); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal97_tree = 
                    (Object)adaptor.create(string_literal97)
                    ;
                    adaptor.addChild(root_0, string_literal97_tree);
                    }

                    }
                    break;
                case 4 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:192:29: 'int'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal98=(Token)match(input,104,FOLLOW_104_in_type_specifier785); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal98_tree = 
                    (Object)adaptor.create(string_literal98)
                    ;
                    adaptor.addChild(root_0, string_literal98_tree);
                    }

                    }
                    break;
                case 5 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:192:37: 'long'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal99=(Token)match(input,105,FOLLOW_105_in_type_specifier789); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal99_tree = 
                    (Object)adaptor.create(string_literal99)
                    ;
                    adaptor.addChild(root_0, string_literal99_tree);
                    }

                    }
                    break;
                case 6 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:192:46: 'float'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal100=(Token)match(input,97,FOLLOW_97_in_type_specifier793); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal100_tree = 
                    (Object)adaptor.create(string_literal100)
                    ;
                    adaptor.addChild(root_0, string_literal100_tree);
                    }

                    }
                    break;
                case 7 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:192:56: 'double'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal101=(Token)match(input,93,FOLLOW_93_in_type_specifier797); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal101_tree = 
                    (Object)adaptor.create(string_literal101)
                    ;
                    adaptor.addChild(root_0, string_literal101_tree);
                    }

                    }
                    break;
                case 8 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:192:67: 'signed'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal102=(Token)match(input,112,FOLLOW_112_in_type_specifier801); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal102_tree = 
                    (Object)adaptor.create(string_literal102)
                    ;
                    adaptor.addChild(root_0, string_literal102_tree);
                    }

                    }
                    break;
                case 9 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:192:78: 'unsigned'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal103=(Token)match(input,120,FOLLOW_120_in_type_specifier805); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal103_tree = 
                    (Object)adaptor.create(string_literal103)
                    ;
                    adaptor.addChild(root_0, string_literal103_tree);
                    }

                    }
                    break;
                case 10 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:193:4: ( 'id' ( protocol_reference_list )? )
                    {
                    root_0 = (Object)adaptor.nil();


                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:193:4: ( 'id' ( protocol_reference_list )? )
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:193:5: 'id' ( protocol_reference_list )?
                    {
                    string_literal104=(Token)match(input,100,FOLLOW_100_in_type_specifier812); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal104_tree = 
                    (Object)adaptor.create(string_literal104)
                    ;
                    adaptor.addChild(root_0, string_literal104_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:193:10: ( protocol_reference_list )?
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==51) ) {
                        alt23=1;
                    }
                    switch (alt23) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:193:12: protocol_reference_list
                            {
                            pushFollow(FOLLOW_protocol_reference_list_in_type_specifier816);
                            protocol_reference_list105=protocol_reference_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_reference_list105.getTree());

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 11 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:194:4: (class_name= IDENTIFIER ( protocol_reference_list )? )
                    {
                    root_0 = (Object)adaptor.nil();


                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:194:4: (class_name= IDENTIFIER ( protocol_reference_list )? )
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:194:5: class_name= IDENTIFIER ( protocol_reference_list )?
                    {
                    class_name=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_type_specifier829); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    class_name_tree = 
                    (Object)adaptor.create(class_name)
                    ;
                    adaptor.addChild(root_0, class_name_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:194:27: ( protocol_reference_list )?
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==51) ) {
                        alt24=1;
                    }
                    switch (alt24) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:194:29: protocol_reference_list
                            {
                            pushFollow(FOLLOW_protocol_reference_list_in_type_specifier833);
                            protocol_reference_list106=protocol_reference_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_reference_list106.getTree());

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 12 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:195:4: struct_or_union_specifier
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_struct_or_union_specifier_in_type_specifier842);
                    struct_or_union_specifier107=struct_or_union_specifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_or_union_specifier107.getTree());

                    }
                    break;
                case 13 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:196:4: enum_specifier
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_enum_specifier_in_type_specifier847);
                    enum_specifier108=enum_specifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_specifier108.getTree());

                    }
                    break;
                case 14 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:197:4: IDENTIFIER
                    {
                    root_0 = (Object)adaptor.nil();


                    IDENTIFIER109=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_type_specifier853); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER109_tree = 
                    (Object)adaptor.create(IDENTIFIER109)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER109_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_specifier"


    public static class type_qualifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_qualifier"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:199:1: type_qualifier : ( 'const' | 'volatile' | protocol_qualifier );
    public final ObjectiveCParser.type_qualifier_return type_qualifier() throws RecognitionException {
        ObjectiveCParser.type_qualifier_return retval = new ObjectiveCParser.type_qualifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal110=null;
        Token string_literal111=null;
        ObjectiveCParser.protocol_qualifier_return protocol_qualifier112 =null;


        Object string_literal110_tree=null;
        Object string_literal111_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:199:15: ( 'const' | 'volatile' | protocol_qualifier )
            int alt26=3;
            switch ( input.LA(1) ) {
            case 89:
                {
                alt26=1;
                }
                break;
            case 122:
                {
                alt26=2;
                }
                break;
            case 85:
            case 86:
            case 102:
            case 103:
            case 106:
            case 107:
                {
                alt26=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;

            }

            switch (alt26) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:200:2: 'const'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal110=(Token)match(input,89,FOLLOW_89_in_type_qualifier861); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal110_tree = 
                    (Object)adaptor.create(string_literal110)
                    ;
                    adaptor.addChild(root_0, string_literal110_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:200:12: 'volatile'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal111=(Token)match(input,122,FOLLOW_122_in_type_qualifier865); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal111_tree = 
                    (Object)adaptor.create(string_literal111)
                    ;
                    adaptor.addChild(root_0, string_literal111_tree);
                    }

                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:200:25: protocol_qualifier
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_protocol_qualifier_in_type_qualifier869);
                    protocol_qualifier112=protocol_qualifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_qualifier112.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_qualifier"


    public static class protocol_qualifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "protocol_qualifier"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:202:1: protocol_qualifier : ( 'in' | 'out' | 'inout' | 'bycopy' | 'byref' | 'oneway' );
    public final ObjectiveCParser.protocol_qualifier_return protocol_qualifier() throws RecognitionException {
        ObjectiveCParser.protocol_qualifier_return retval = new ObjectiveCParser.protocol_qualifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set113=null;

        Object set113_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:202:19: ( 'in' | 'out' | 'inout' | 'bycopy' | 'byref' | 'oneway' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:
            {
            root_0 = (Object)adaptor.nil();


            set113=(Token)input.LT(1);

            if ( (input.LA(1) >= 85 && input.LA(1) <= 86)||(input.LA(1) >= 102 && input.LA(1) <= 103)||(input.LA(1) >= 106 && input.LA(1) <= 107) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set113)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "protocol_qualifier"


    public static class primary_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "primary_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:205:1: primary_expression : ( IDENTIFIER | constant | STRING_LITERAL | ( '(' expression ')' ) | 'self' | message_expression | selector_expression | protocol_expression | encode_expression );
    public final ObjectiveCParser.primary_expression_return primary_expression() throws RecognitionException {
        ObjectiveCParser.primary_expression_return retval = new ObjectiveCParser.primary_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER114=null;
        Token STRING_LITERAL116=null;
        Token char_literal117=null;
        Token char_literal119=null;
        Token string_literal120=null;
        ObjectiveCParser.constant_return constant115 =null;

        ObjectiveCParser.expression_return expression118 =null;

        ObjectiveCParser.message_expression_return message_expression121 =null;

        ObjectiveCParser.selector_expression_return selector_expression122 =null;

        ObjectiveCParser.protocol_expression_return protocol_expression123 =null;

        ObjectiveCParser.encode_expression_return encode_expression124 =null;


        Object IDENTIFIER114_tree=null;
        Object STRING_LITERAL116_tree=null;
        Object char_literal117_tree=null;
        Object char_literal119_tree=null;
        Object string_literal120_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:205:19: ( IDENTIFIER | constant | STRING_LITERAL | ( '(' expression ')' ) | 'self' | message_expression | selector_expression | protocol_expression | encode_expression )
            int alt27=9;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                alt27=1;
                }
                break;
            case CHARACTER_LITERAL:
            case DECIMAL_LITERAL:
            case FLOATING_POINT_LITERAL:
            case HEX_LITERAL:
            case OCTAL_LITERAL:
                {
                alt27=2;
                }
                break;
            case STRING_LITERAL:
                {
                alt27=3;
                }
                break;
            case 33:
                {
                alt27=4;
                }
                break;
            case 110:
                {
                alt27=5;
                }
                break;
            case 78:
                {
                alt27=6;
                }
                break;
            case 74:
                {
                alt27=7;
                }
                break;
            case 72:
                {
                alt27=8;
                }
                break;
            case 64:
                {
                alt27=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;

            }

            switch (alt27) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:206:2: IDENTIFIER
                    {
                    root_0 = (Object)adaptor.nil();


                    IDENTIFIER114=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_primary_expression905); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER114_tree = 
                    (Object)adaptor.create(IDENTIFIER114)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER114_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:207:4: constant
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_constant_in_primary_expression910);
                    constant115=constant();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant115.getTree());

                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:208:4: STRING_LITERAL
                    {
                    root_0 = (Object)adaptor.nil();


                    STRING_LITERAL116=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_primary_expression915); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    STRING_LITERAL116_tree = 
                    (Object)adaptor.create(STRING_LITERAL116)
                    ;
                    adaptor.addChild(root_0, STRING_LITERAL116_tree);
                    }

                    }
                    break;
                case 4 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:209:4: ( '(' expression ')' )
                    {
                    root_0 = (Object)adaptor.nil();


                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:209:4: ( '(' expression ')' )
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:209:5: '(' expression ')'
                    {
                    char_literal117=(Token)match(input,33,FOLLOW_33_in_primary_expression921); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal117_tree = 
                    (Object)adaptor.create(char_literal117)
                    ;
                    adaptor.addChild(root_0, char_literal117_tree);
                    }

                    pushFollow(FOLLOW_expression_in_primary_expression923);
                    expression118=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression118.getTree());

                    char_literal119=(Token)match(input,34,FOLLOW_34_in_primary_expression925); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal119_tree = 
                    (Object)adaptor.create(char_literal119)
                    ;
                    adaptor.addChild(root_0, char_literal119_tree);
                    }

                    }


                    }
                    break;
                case 5 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:210:4: 'self'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal120=(Token)match(input,110,FOLLOW_110_in_primary_expression931); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal120_tree = 
                    (Object)adaptor.create(string_literal120)
                    ;
                    adaptor.addChild(root_0, string_literal120_tree);
                    }

                    }
                    break;
                case 6 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:211:4: message_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_message_expression_in_primary_expression936);
                    message_expression121=message_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, message_expression121.getTree());

                    }
                    break;
                case 7 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:212:4: selector_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_selector_expression_in_primary_expression941);
                    selector_expression122=selector_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, selector_expression122.getTree());

                    }
                    break;
                case 8 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:213:4: protocol_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_protocol_expression_in_primary_expression946);
                    protocol_expression123=protocol_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_expression123.getTree());

                    }
                    break;
                case 9 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:214:4: encode_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_encode_expression_in_primary_expression951);
                    encode_expression124=encode_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, encode_expression124.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "primary_expression"


    public static class message_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "message_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:216:1: message_expression : ( '[' receiver message_selector ']' ) ;
    public final ObjectiveCParser.message_expression_return message_expression() throws RecognitionException {
        ObjectiveCParser.message_expression_return retval = new ObjectiveCParser.message_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal125=null;
        Token char_literal128=null;
        ObjectiveCParser.receiver_return receiver126 =null;

        ObjectiveCParser.message_selector_return message_selector127 =null;


        Object char_literal125_tree=null;
        Object char_literal128_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:216:19: ( ( '[' receiver message_selector ']' ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:217:2: ( '[' receiver message_selector ']' )
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:217:2: ( '[' receiver message_selector ']' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:217:3: '[' receiver message_selector ']'
            {
            char_literal125=(Token)match(input,78,FOLLOW_78_in_message_expression960); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal125_tree = 
            (Object)adaptor.create(char_literal125)
            ;
            adaptor.addChild(root_0, char_literal125_tree);
            }

            pushFollow(FOLLOW_receiver_in_message_expression962);
            receiver126=receiver();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, receiver126.getTree());

            pushFollow(FOLLOW_message_selector_in_message_expression964);
            message_selector127=message_selector();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, message_selector127.getTree());

            char_literal128=(Token)match(input,80,FOLLOW_80_in_message_expression966); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal128_tree = 
            (Object)adaptor.create(char_literal128)
            ;
            adaptor.addChild(root_0, char_literal128_tree);
            }

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "message_expression"


    public static class receiver_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "receiver"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:220:1: receiver : ( expression |class_name= IDENTIFIER | 'super' );
    public final ObjectiveCParser.receiver_return receiver() throws RecognitionException {
        ObjectiveCParser.receiver_return retval = new ObjectiveCParser.receiver_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token class_name=null;
        Token string_literal130=null;
        ObjectiveCParser.expression_return expression129 =null;


        Object class_name_tree=null;
        Object string_literal130_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:220:9: ( expression |class_name= IDENTIFIER | 'super' )
            int alt28=3;
            switch ( input.LA(1) ) {
            case CHARACTER_LITERAL:
            case DECIMAL_LITERAL:
            case FLOATING_POINT_LITERAL:
            case HEX_LITERAL:
            case OCTAL_LITERAL:
            case STRING_LITERAL:
            case 25:
            case 31:
            case 33:
            case 35:
            case 38:
            case 41:
            case 42:
            case 64:
            case 72:
            case 74:
            case 78:
            case 110:
            case 113:
            case 129:
                {
                alt28=1;
                }
                break;
            case IDENTIFIER:
                {
                int LA28_2 = input.LA(2);

                if ( (synpred73_ObjectiveC()) ) {
                    alt28=1;
                }
                else if ( (synpred74_ObjectiveC()) ) {
                    alt28=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 2, input);

                    throw nvae;

                }
                }
                break;
            case 116:
                {
                alt28=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;

            }

            switch (alt28) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:221:2: expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_expression_in_receiver977);
                    expression129=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression129.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:222:4: class_name= IDENTIFIER
                    {
                    root_0 = (Object)adaptor.nil();


                    class_name=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_receiver984); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    class_name_tree = 
                    (Object)adaptor.create(class_name)
                    ;
                    adaptor.addChild(root_0, class_name_tree);
                    }

                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:223:4: 'super'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal130=(Token)match(input,116,FOLLOW_116_in_receiver990); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal130_tree = 
                    (Object)adaptor.create(string_literal130)
                    ;
                    adaptor.addChild(root_0, string_literal130_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "receiver"


    public static class message_selector_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "message_selector"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:225:1: message_selector : ( selector | ( keyword_argument )+ );
    public final ObjectiveCParser.message_selector_return message_selector() throws RecognitionException {
        ObjectiveCParser.message_selector_return retval = new ObjectiveCParser.message_selector_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.selector_return selector131 =null;

        ObjectiveCParser.keyword_argument_return keyword_argument132 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:225:17: ( selector | ( keyword_argument )+ )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==IDENTIFIER) ) {
                int LA30_1 = input.LA(2);

                if ( (LA30_1==80) ) {
                    alt30=1;
                }
                else if ( (LA30_1==49) ) {
                    alt30=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA30_0==49) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;

            }
            switch (alt30) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:226:2: selector
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_selector_in_message_selector998);
                    selector131=selector();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, selector131.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:227:4: ( keyword_argument )+
                    {
                    root_0 = (Object)adaptor.nil();


                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:227:4: ( keyword_argument )+
                    int cnt29=0;
                    loop29:
                    do {
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==IDENTIFIER||LA29_0==49) ) {
                            alt29=1;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:227:4: keyword_argument
                    	    {
                    	    pushFollow(FOLLOW_keyword_argument_in_message_selector1003);
                    	    keyword_argument132=keyword_argument();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, keyword_argument132.getTree());

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt29 >= 1 ) break loop29;
                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(29, input);
                                throw eee;
                        }
                        cnt29++;
                    } while (true);


                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "message_selector"


    public static class keyword_argument_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "keyword_argument"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:229:1: keyword_argument : ( selector )? ':' expression ;
    public final ObjectiveCParser.keyword_argument_return keyword_argument() throws RecognitionException {
        ObjectiveCParser.keyword_argument_return retval = new ObjectiveCParser.keyword_argument_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal134=null;
        ObjectiveCParser.selector_return selector133 =null;

        ObjectiveCParser.expression_return expression135 =null;


        Object char_literal134_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:229:17: ( ( selector )? ':' expression )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:230:2: ( selector )? ':' expression
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:230:2: ( selector )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==IDENTIFIER) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:230:2: selector
                    {
                    pushFollow(FOLLOW_selector_in_keyword_argument1012);
                    selector133=selector();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, selector133.getTree());

                    }
                    break;

            }


            char_literal134=(Token)match(input,49,FOLLOW_49_in_keyword_argument1015); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal134_tree = 
            (Object)adaptor.create(char_literal134)
            ;
            adaptor.addChild(root_0, char_literal134_tree);
            }

            pushFollow(FOLLOW_expression_in_keyword_argument1017);
            expression135=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression135.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "keyword_argument"


    public static class selector_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "selector_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:232:1: selector_expression : '@selector' '(' selector_name ')' ;
    public final ObjectiveCParser.selector_expression_return selector_expression() throws RecognitionException {
        ObjectiveCParser.selector_expression_return retval = new ObjectiveCParser.selector_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal136=null;
        Token char_literal137=null;
        Token char_literal139=null;
        ObjectiveCParser.selector_name_return selector_name138 =null;


        Object string_literal136_tree=null;
        Object char_literal137_tree=null;
        Object char_literal139_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:232:20: ( '@selector' '(' selector_name ')' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:233:2: '@selector' '(' selector_name ')'
            {
            root_0 = (Object)adaptor.nil();


            string_literal136=(Token)match(input,74,FOLLOW_74_in_selector_expression1025); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal136_tree = 
            (Object)adaptor.create(string_literal136)
            ;
            adaptor.addChild(root_0, string_literal136_tree);
            }

            char_literal137=(Token)match(input,33,FOLLOW_33_in_selector_expression1027); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal137_tree = 
            (Object)adaptor.create(char_literal137)
            ;
            adaptor.addChild(root_0, char_literal137_tree);
            }

            pushFollow(FOLLOW_selector_name_in_selector_expression1029);
            selector_name138=selector_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, selector_name138.getTree());

            char_literal139=(Token)match(input,34,FOLLOW_34_in_selector_expression1031); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal139_tree = 
            (Object)adaptor.create(char_literal139)
            ;
            adaptor.addChild(root_0, char_literal139_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "selector_expression"


    public static class selector_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "selector_name"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:235:1: selector_name : ( selector | ( ( selector )? ':' )+ );
    public final ObjectiveCParser.selector_name_return selector_name() throws RecognitionException {
        ObjectiveCParser.selector_name_return retval = new ObjectiveCParser.selector_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal142=null;
        ObjectiveCParser.selector_return selector140 =null;

        ObjectiveCParser.selector_return selector141 =null;


        Object char_literal142_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:235:14: ( selector | ( ( selector )? ':' )+ )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==IDENTIFIER) ) {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==34) ) {
                    alt34=1;
                }
                else if ( (LA34_1==49) ) {
                    alt34=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA34_0==49) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;

            }
            switch (alt34) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:236:2: selector
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_selector_in_selector_name1039);
                    selector140=selector();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, selector140.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:237:4: ( ( selector )? ':' )+
                    {
                    root_0 = (Object)adaptor.nil();


                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:237:4: ( ( selector )? ':' )+
                    int cnt33=0;
                    loop33:
                    do {
                        int alt33=2;
                        int LA33_0 = input.LA(1);

                        if ( (LA33_0==IDENTIFIER||LA33_0==49) ) {
                            alt33=1;
                        }


                        switch (alt33) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:237:5: ( selector )? ':'
                    	    {
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:237:5: ( selector )?
                    	    int alt32=2;
                    	    int LA32_0 = input.LA(1);

                    	    if ( (LA32_0==IDENTIFIER) ) {
                    	        alt32=1;
                    	    }
                    	    switch (alt32) {
                    	        case 1 :
                    	            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:237:5: selector
                    	            {
                    	            pushFollow(FOLLOW_selector_in_selector_name1045);
                    	            selector141=selector();

                    	            state._fsp--;
                    	            if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) adaptor.addChild(root_0, selector141.getTree());

                    	            }
                    	            break;

                    	    }


                    	    char_literal142=(Token)match(input,49,FOLLOW_49_in_selector_name1048); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal142_tree = 
                    	    (Object)adaptor.create(char_literal142)
                    	    ;
                    	    adaptor.addChild(root_0, char_literal142_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt33 >= 1 ) break loop33;
                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(33, input);
                                throw eee;
                        }
                        cnt33++;
                    } while (true);


                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "selector_name"


    public static class protocol_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "protocol_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:239:1: protocol_expression : '@protocol' '(' protocol_name ')' ;
    public final ObjectiveCParser.protocol_expression_return protocol_expression() throws RecognitionException {
        ObjectiveCParser.protocol_expression_return retval = new ObjectiveCParser.protocol_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal143=null;
        Token char_literal144=null;
        Token char_literal146=null;
        ObjectiveCParser.protocol_name_return protocol_name145 =null;


        Object string_literal143_tree=null;
        Object char_literal144_tree=null;
        Object char_literal146_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:239:20: ( '@protocol' '(' protocol_name ')' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:240:2: '@protocol' '(' protocol_name ')'
            {
            root_0 = (Object)adaptor.nil();


            string_literal143=(Token)match(input,72,FOLLOW_72_in_protocol_expression1058); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal143_tree = 
            (Object)adaptor.create(string_literal143)
            ;
            adaptor.addChild(root_0, string_literal143_tree);
            }

            char_literal144=(Token)match(input,33,FOLLOW_33_in_protocol_expression1060); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal144_tree = 
            (Object)adaptor.create(char_literal144)
            ;
            adaptor.addChild(root_0, char_literal144_tree);
            }

            pushFollow(FOLLOW_protocol_name_in_protocol_expression1062);
            protocol_name145=protocol_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, protocol_name145.getTree());

            char_literal146=(Token)match(input,34,FOLLOW_34_in_protocol_expression1064); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal146_tree = 
            (Object)adaptor.create(char_literal146)
            ;
            adaptor.addChild(root_0, char_literal146_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "protocol_expression"


    public static class encode_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "encode_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:242:1: encode_expression : '@encode' '(' type_name ')' ;
    public final ObjectiveCParser.encode_expression_return encode_expression() throws RecognitionException {
        ObjectiveCParser.encode_expression_return retval = new ObjectiveCParser.encode_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal147=null;
        Token char_literal148=null;
        Token char_literal150=null;
        ObjectiveCParser.type_name_return type_name149 =null;


        Object string_literal147_tree=null;
        Object char_literal148_tree=null;
        Object char_literal150_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:242:18: ( '@encode' '(' type_name ')' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:243:2: '@encode' '(' type_name ')'
            {
            root_0 = (Object)adaptor.nil();


            string_literal147=(Token)match(input,64,FOLLOW_64_in_encode_expression1072); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal147_tree = 
            (Object)adaptor.create(string_literal147)
            ;
            adaptor.addChild(root_0, string_literal147_tree);
            }

            char_literal148=(Token)match(input,33,FOLLOW_33_in_encode_expression1074); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal148_tree = 
            (Object)adaptor.create(char_literal148)
            ;
            adaptor.addChild(root_0, char_literal148_tree);
            }

            pushFollow(FOLLOW_type_name_in_encode_expression1076);
            type_name149=type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name149.getTree());

            char_literal150=(Token)match(input,34,FOLLOW_34_in_encode_expression1078); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal150_tree = 
            (Object)adaptor.create(char_literal150)
            ;
            adaptor.addChild(root_0, char_literal150_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "encode_expression"


    public static class exception_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "exception_declarator"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:245:1: exception_declarator : declarator ;
    public final ObjectiveCParser.exception_declarator_return exception_declarator() throws RecognitionException {
        ObjectiveCParser.exception_declarator_return retval = new ObjectiveCParser.exception_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.declarator_return declarator151 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:245:21: ( declarator )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:246:2: declarator
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_declarator_in_exception_declarator1086);
            declarator151=declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, declarator151.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "exception_declarator"


    public static class try_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "try_statement"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:248:1: try_statement : '@trystatement' ;
    public final ObjectiveCParser.try_statement_return try_statement() throws RecognitionException {
        ObjectiveCParser.try_statement_return retval = new ObjectiveCParser.try_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal152=null;

        Object string_literal152_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:248:14: ( '@trystatement' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:249:2: '@trystatement'
            {
            root_0 = (Object)adaptor.nil();


            string_literal152=(Token)match(input,77,FOLLOW_77_in_try_statement1094); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal152_tree = 
            (Object)adaptor.create(string_literal152)
            ;
            adaptor.addChild(root_0, string_literal152_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "try_statement"


    public static class catch_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "catch_statement"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:251:1: catch_statement : '@catch' '(' exception_declarator ')' statement ;
    public final ObjectiveCParser.catch_statement_return catch_statement() throws RecognitionException {
        ObjectiveCParser.catch_statement_return retval = new ObjectiveCParser.catch_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal153=null;
        Token char_literal154=null;
        Token char_literal156=null;
        ObjectiveCParser.exception_declarator_return exception_declarator155 =null;

        ObjectiveCParser.statement_return statement157 =null;


        Object string_literal153_tree=null;
        Object char_literal154_tree=null;
        Object char_literal156_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:251:16: ( '@catch' '(' exception_declarator ')' statement )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:252:2: '@catch' '(' exception_declarator ')' statement
            {
            root_0 = (Object)adaptor.nil();


            string_literal153=(Token)match(input,62,FOLLOW_62_in_catch_statement1102); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal153_tree = 
            (Object)adaptor.create(string_literal153)
            ;
            adaptor.addChild(root_0, string_literal153_tree);
            }

            char_literal154=(Token)match(input,33,FOLLOW_33_in_catch_statement1104); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal154_tree = 
            (Object)adaptor.create(char_literal154)
            ;
            adaptor.addChild(root_0, char_literal154_tree);
            }

            pushFollow(FOLLOW_exception_declarator_in_catch_statement1105);
            exception_declarator155=exception_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, exception_declarator155.getTree());

            char_literal156=(Token)match(input,34,FOLLOW_34_in_catch_statement1106); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal156_tree = 
            (Object)adaptor.create(char_literal156)
            ;
            adaptor.addChild(root_0, char_literal156_tree);
            }

            pushFollow(FOLLOW_statement_in_catch_statement1107);
            statement157=statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement157.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "catch_statement"


    public static class finally_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "finally_statement"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:254:1: finally_statement : '@finally' statement ;
    public final ObjectiveCParser.finally_statement_return finally_statement() throws RecognitionException {
        ObjectiveCParser.finally_statement_return retval = new ObjectiveCParser.finally_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal158=null;
        ObjectiveCParser.statement_return statement159 =null;


        Object string_literal158_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:254:18: ( '@finally' statement )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:255:2: '@finally' statement
            {
            root_0 = (Object)adaptor.nil();


            string_literal158=(Token)match(input,66,FOLLOW_66_in_finally_statement1115); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal158_tree = 
            (Object)adaptor.create(string_literal158)
            ;
            adaptor.addChild(root_0, string_literal158_tree);
            }

            pushFollow(FOLLOW_statement_in_finally_statement1117);
            statement159=statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement159.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "finally_statement"


    public static class throw_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "throw_statement"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:257:1: throw_statement : '@throw' '(' IDENTIFIER ')' ;
    public final ObjectiveCParser.throw_statement_return throw_statement() throws RecognitionException {
        ObjectiveCParser.throw_statement_return retval = new ObjectiveCParser.throw_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal160=null;
        Token char_literal161=null;
        Token IDENTIFIER162=null;
        Token char_literal163=null;

        Object string_literal160_tree=null;
        Object char_literal161_tree=null;
        Object IDENTIFIER162_tree=null;
        Object char_literal163_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:257:16: ( '@throw' '(' IDENTIFIER ')' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:258:2: '@throw' '(' IDENTIFIER ')'
            {
            root_0 = (Object)adaptor.nil();


            string_literal160=(Token)match(input,76,FOLLOW_76_in_throw_statement1125); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal160_tree = 
            (Object)adaptor.create(string_literal160)
            ;
            adaptor.addChild(root_0, string_literal160_tree);
            }

            char_literal161=(Token)match(input,33,FOLLOW_33_in_throw_statement1127); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal161_tree = 
            (Object)adaptor.create(char_literal161)
            ;
            adaptor.addChild(root_0, char_literal161_tree);
            }

            IDENTIFIER162=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_throw_statement1128); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER162_tree = 
            (Object)adaptor.create(IDENTIFIER162)
            ;
            adaptor.addChild(root_0, IDENTIFIER162_tree);
            }

            char_literal163=(Token)match(input,34,FOLLOW_34_in_throw_statement1129); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal163_tree = 
            (Object)adaptor.create(char_literal163)
            ;
            adaptor.addChild(root_0, char_literal163_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "throw_statement"


    public static class try_block_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "try_block"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:260:1: try_block : try_statement catch_statement ( finally_statement )? ;
    public final ObjectiveCParser.try_block_return try_block() throws RecognitionException {
        ObjectiveCParser.try_block_return retval = new ObjectiveCParser.try_block_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.try_statement_return try_statement164 =null;

        ObjectiveCParser.catch_statement_return catch_statement165 =null;

        ObjectiveCParser.finally_statement_return finally_statement166 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:260:10: ( try_statement catch_statement ( finally_statement )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:261:2: try_statement catch_statement ( finally_statement )?
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_try_statement_in_try_block1137);
            try_statement164=try_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, try_statement164.getTree());

            pushFollow(FOLLOW_catch_statement_in_try_block1140);
            catch_statement165=catch_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, catch_statement165.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:263:2: ( finally_statement )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==66) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:263:4: finally_statement
                    {
                    pushFollow(FOLLOW_finally_statement_in_try_block1145);
                    finally_statement166=finally_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, finally_statement166.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "try_block"


    public static class synchronized_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "synchronized_statement"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:265:1: synchronized_statement : '@synchronized' '(' IDENTIFIER ')' statement ;
    public final ObjectiveCParser.synchronized_statement_return synchronized_statement() throws RecognitionException {
        ObjectiveCParser.synchronized_statement_return retval = new ObjectiveCParser.synchronized_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal167=null;
        Token char_literal168=null;
        Token IDENTIFIER169=null;
        Token char_literal170=null;
        ObjectiveCParser.statement_return statement171 =null;


        Object string_literal167_tree=null;
        Object char_literal168_tree=null;
        Object IDENTIFIER169_tree=null;
        Object char_literal170_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:265:23: ( '@synchronized' '(' IDENTIFIER ')' statement )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:266:2: '@synchronized' '(' IDENTIFIER ')' statement
            {
            root_0 = (Object)adaptor.nil();


            string_literal167=(Token)match(input,75,FOLLOW_75_in_synchronized_statement1156); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal167_tree = 
            (Object)adaptor.create(string_literal167)
            ;
            adaptor.addChild(root_0, string_literal167_tree);
            }

            char_literal168=(Token)match(input,33,FOLLOW_33_in_synchronized_statement1158); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal168_tree = 
            (Object)adaptor.create(char_literal168)
            ;
            adaptor.addChild(root_0, char_literal168_tree);
            }

            IDENTIFIER169=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synchronized_statement1160); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER169_tree = 
            (Object)adaptor.create(IDENTIFIER169)
            ;
            adaptor.addChild(root_0, IDENTIFIER169_tree);
            }

            char_literal170=(Token)match(input,34,FOLLOW_34_in_synchronized_statement1162); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal170_tree = 
            (Object)adaptor.create(char_literal170)
            ;
            adaptor.addChild(root_0, char_literal170_tree);
            }

            pushFollow(FOLLOW_statement_in_synchronized_statement1164);
            statement171=statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement171.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "synchronized_statement"


    public static class function_definition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "function_definition"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:268:1: function_definition : declaration_specifiers declarator compound_statement ;
    public final ObjectiveCParser.function_definition_return function_definition() throws RecognitionException {
        ObjectiveCParser.function_definition_return retval = new ObjectiveCParser.function_definition_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.declaration_specifiers_return declaration_specifiers172 =null;

        ObjectiveCParser.declarator_return declarator173 =null;

        ObjectiveCParser.compound_statement_return compound_statement174 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:268:21: ( declaration_specifiers declarator compound_statement )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:268:23: declaration_specifiers declarator compound_statement
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_declaration_specifiers_in_function_definition1172);
            declaration_specifiers172=declaration_specifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration_specifiers172.getTree());

            pushFollow(FOLLOW_declarator_in_function_definition1174);
            declarator173=declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, declarator173.getTree());

            pushFollow(FOLLOW_compound_statement_in_function_definition1176);
            compound_statement174=compound_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, compound_statement174.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "function_definition"


    public static class declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:270:1: declaration : declaration_specifiers ( init_declarator_list )? ';' ;
    public final ObjectiveCParser.declaration_return declaration() throws RecognitionException {
        ObjectiveCParser.declaration_return retval = new ObjectiveCParser.declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal177=null;
        ObjectiveCParser.declaration_specifiers_return declaration_specifiers175 =null;

        ObjectiveCParser.init_declarator_list_return init_declarator_list176 =null;


        Object char_literal177_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:270:13: ( declaration_specifiers ( init_declarator_list )? ';' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:270:15: declaration_specifiers ( init_declarator_list )? ';'
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_declaration_specifiers_in_declaration1185);
            declaration_specifiers175=declaration_specifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration_specifiers175.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:270:38: ( init_declarator_list )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==IDENTIFIER||LA36_0==33||LA36_0==35) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:270:38: init_declarator_list
                    {
                    pushFollow(FOLLOW_init_declarator_list_in_declaration1187);
                    init_declarator_list176=init_declarator_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, init_declarator_list176.getTree());

                    }
                    break;

            }


            char_literal177=(Token)match(input,50,FOLLOW_50_in_declaration1190); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal177_tree = 
            (Object)adaptor.create(char_literal177)
            ;
            adaptor.addChild(root_0, char_literal177_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "declaration"


    public static class declaration_specifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "declaration_specifiers"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:272:1: declaration_specifiers : ( storage_class_specifier | type_specifier | type_qualifier )+ ;
    public final ObjectiveCParser.declaration_specifiers_return declaration_specifiers() throws RecognitionException {
        ObjectiveCParser.declaration_specifiers_return retval = new ObjectiveCParser.declaration_specifiers_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.storage_class_specifier_return storage_class_specifier178 =null;

        ObjectiveCParser.type_specifier_return type_specifier179 =null;

        ObjectiveCParser.type_qualifier_return type_qualifier180 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:273:3: ( ( storage_class_specifier | type_specifier | type_qualifier )+ )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:273:5: ( storage_class_specifier | type_specifier | type_qualifier )+
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:273:5: ( storage_class_specifier | type_specifier | type_qualifier )+
            int cnt37=0;
            loop37:
            do {
                int alt37=4;
                switch ( input.LA(1) ) {
                case IDENTIFIER:
                    {
                    int LA37_2 = input.LA(2);

                    if ( (synpred84_ObjectiveC()) ) {
                        alt37=2;
                    }


                    }
                    break;
                case 83:
                case 96:
                case 108:
                case 114:
                case 118:
                    {
                    alt37=1;
                    }
                    break;
                case 88:
                case 93:
                case 95:
                case 97:
                case 100:
                case 104:
                case 105:
                case 111:
                case 112:
                case 115:
                case 119:
                case 120:
                case 121:
                    {
                    alt37=2;
                    }
                    break;
                case 85:
                case 86:
                case 89:
                case 102:
                case 103:
                case 106:
                case 107:
                case 122:
                    {
                    alt37=3;
                    }
                    break;

                }

                switch (alt37) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:273:6: storage_class_specifier
            	    {
            	    pushFollow(FOLLOW_storage_class_specifier_in_declaration_specifiers1202);
            	    storage_class_specifier178=storage_class_specifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, storage_class_specifier178.getTree());

            	    }
            	    break;
            	case 2 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:273:32: type_specifier
            	    {
            	    pushFollow(FOLLOW_type_specifier_in_declaration_specifiers1206);
            	    type_specifier179=type_specifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_specifier179.getTree());

            	    }
            	    break;
            	case 3 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:273:49: type_qualifier
            	    {
            	    pushFollow(FOLLOW_type_qualifier_in_declaration_specifiers1210);
            	    type_qualifier180=type_qualifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_qualifier180.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt37 >= 1 ) break loop37;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(37, input);
                        throw eee;
                }
                cnt37++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "declaration_specifiers"


    public static class storage_class_specifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "storage_class_specifier"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:275:1: storage_class_specifier : ( 'auto' | 'register' | 'static' | 'extern' | 'typedef' );
    public final ObjectiveCParser.storage_class_specifier_return storage_class_specifier() throws RecognitionException {
        ObjectiveCParser.storage_class_specifier_return retval = new ObjectiveCParser.storage_class_specifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set181=null;

        Object set181_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:275:24: ( 'auto' | 'register' | 'static' | 'extern' | 'typedef' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:
            {
            root_0 = (Object)adaptor.nil();


            set181=(Token)input.LT(1);

            if ( input.LA(1)==83||input.LA(1)==96||input.LA(1)==108||input.LA(1)==114||input.LA(1)==118 ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set181)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "storage_class_specifier"


    public static class init_declarator_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "init_declarator_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:277:1: init_declarator_list : init_declarator ( ',' init_declarator )* ;
    public final ObjectiveCParser.init_declarator_list_return init_declarator_list() throws RecognitionException {
        ObjectiveCParser.init_declarator_list_return retval = new ObjectiveCParser.init_declarator_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal183=null;
        ObjectiveCParser.init_declarator_return init_declarator182 =null;

        ObjectiveCParser.init_declarator_return init_declarator184 =null;


        Object char_literal183_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:277:22: ( init_declarator ( ',' init_declarator )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:277:24: init_declarator ( ',' init_declarator )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_init_declarator_in_init_declarator_list1244);
            init_declarator182=init_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, init_declarator182.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:277:40: ( ',' init_declarator )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==40) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:277:41: ',' init_declarator
            	    {
            	    char_literal183=(Token)match(input,40,FOLLOW_40_in_init_declarator_list1247); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal183_tree = 
            	    (Object)adaptor.create(char_literal183)
            	    ;
            	    adaptor.addChild(root_0, char_literal183_tree);
            	    }

            	    pushFollow(FOLLOW_init_declarator_in_init_declarator_list1249);
            	    init_declarator184=init_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, init_declarator184.getTree());

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "init_declarator_list"


    public static class init_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "init_declarator"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:278:1: init_declarator : declarator ( '=' initializer )? ;
    public final ObjectiveCParser.init_declarator_return init_declarator() throws RecognitionException {
        ObjectiveCParser.init_declarator_return retval = new ObjectiveCParser.init_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal186=null;
        ObjectiveCParser.declarator_return declarator185 =null;

        ObjectiveCParser.initializer_return initializer187 =null;


        Object char_literal186_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:278:17: ( declarator ( '=' initializer )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:278:19: declarator ( '=' initializer )?
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_declarator_in_init_declarator1259);
            declarator185=declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, declarator185.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:278:30: ( '=' initializer )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==55) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:278:31: '=' initializer
                    {
                    char_literal186=(Token)match(input,55,FOLLOW_55_in_init_declarator1262); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal186_tree = 
                    (Object)adaptor.create(char_literal186)
                    ;
                    adaptor.addChild(root_0, char_literal186_tree);
                    }

                    pushFollow(FOLLOW_initializer_in_init_declarator1264);
                    initializer187=initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, initializer187.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "init_declarator"


    public static class struct_or_union_specifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_or_union_specifier"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:280:1: struct_or_union_specifier : ( 'struct' | 'union' ) ( IDENTIFIER | ( IDENTIFIER )? '{' ( struct_declaration )+ '}' ) ;
    public final ObjectiveCParser.struct_or_union_specifier_return struct_or_union_specifier() throws RecognitionException {
        ObjectiveCParser.struct_or_union_specifier_return retval = new ObjectiveCParser.struct_or_union_specifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set188=null;
        Token IDENTIFIER189=null;
        Token IDENTIFIER190=null;
        Token char_literal191=null;
        Token char_literal193=null;
        ObjectiveCParser.struct_declaration_return struct_declaration192 =null;


        Object set188_tree=null;
        Object IDENTIFIER189_tree=null;
        Object IDENTIFIER190_tree=null;
        Object char_literal191_tree=null;
        Object char_literal193_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:280:26: ( ( 'struct' | 'union' ) ( IDENTIFIER | ( IDENTIFIER )? '{' ( struct_declaration )+ '}' ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:280:28: ( 'struct' | 'union' ) ( IDENTIFIER | ( IDENTIFIER )? '{' ( struct_declaration )+ '}' )
            {
            root_0 = (Object)adaptor.nil();


            set188=(Token)input.LT(1);

            if ( input.LA(1)==115||input.LA(1)==119 ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set188)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:281:3: ( IDENTIFIER | ( IDENTIFIER )? '{' ( struct_declaration )+ '}' )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==IDENTIFIER) ) {
                int LA42_1 = input.LA(2);

                if ( (synpred93_ObjectiveC()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA42_0==124) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;

            }
            switch (alt42) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:281:5: IDENTIFIER
                    {
                    IDENTIFIER189=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_struct_or_union_specifier1287); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER189_tree = 
                    (Object)adaptor.create(IDENTIFIER189)
                    ;
                    adaptor.addChild(root_0, IDENTIFIER189_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:281:18: ( IDENTIFIER )? '{' ( struct_declaration )+ '}'
                    {
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:281:18: ( IDENTIFIER )?
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==IDENTIFIER) ) {
                        alt40=1;
                    }
                    switch (alt40) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:281:18: IDENTIFIER
                            {
                            IDENTIFIER190=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_struct_or_union_specifier1291); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            IDENTIFIER190_tree = 
                            (Object)adaptor.create(IDENTIFIER190)
                            ;
                            adaptor.addChild(root_0, IDENTIFIER190_tree);
                            }

                            }
                            break;

                    }


                    char_literal191=(Token)match(input,124,FOLLOW_124_in_struct_or_union_specifier1294); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal191_tree = 
                    (Object)adaptor.create(char_literal191)
                    ;
                    adaptor.addChild(root_0, char_literal191_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:281:34: ( struct_declaration )+
                    int cnt41=0;
                    loop41:
                    do {
                        int alt41=2;
                        int LA41_0 = input.LA(1);

                        if ( (LA41_0==IDENTIFIER||(LA41_0 >= 85 && LA41_0 <= 86)||(LA41_0 >= 88 && LA41_0 <= 89)||LA41_0==93||LA41_0==95||LA41_0==97||LA41_0==100||(LA41_0 >= 102 && LA41_0 <= 107)||(LA41_0 >= 111 && LA41_0 <= 112)||LA41_0==115||(LA41_0 >= 119 && LA41_0 <= 122)) ) {
                            alt41=1;
                        }


                        switch (alt41) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:281:34: struct_declaration
                    	    {
                    	    pushFollow(FOLLOW_struct_declaration_in_struct_or_union_specifier1296);
                    	    struct_declaration192=struct_declaration();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration192.getTree());

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt41 >= 1 ) break loop41;
                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(41, input);
                                throw eee;
                        }
                        cnt41++;
                    } while (true);


                    char_literal193=(Token)match(input,128,FOLLOW_128_in_struct_or_union_specifier1299); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal193_tree = 
                    (Object)adaptor.create(char_literal193)
                    ;
                    adaptor.addChild(root_0, char_literal193_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_or_union_specifier"


    public static class struct_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:283:1: struct_declaration : specifier_qualifier_list struct_declarator_list ';' ;
    public final ObjectiveCParser.struct_declaration_return struct_declaration() throws RecognitionException {
        ObjectiveCParser.struct_declaration_return retval = new ObjectiveCParser.struct_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal196=null;
        ObjectiveCParser.specifier_qualifier_list_return specifier_qualifier_list194 =null;

        ObjectiveCParser.struct_declarator_list_return struct_declarator_list195 =null;


        Object char_literal196_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:283:20: ( specifier_qualifier_list struct_declarator_list ';' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:283:22: specifier_qualifier_list struct_declarator_list ';'
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_specifier_qualifier_list_in_struct_declaration1309);
            specifier_qualifier_list194=specifier_qualifier_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specifier_qualifier_list194.getTree());

            pushFollow(FOLLOW_struct_declarator_list_in_struct_declaration1311);
            struct_declarator_list195=struct_declarator_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declarator_list195.getTree());

            char_literal196=(Token)match(input,50,FOLLOW_50_in_struct_declaration1313); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal196_tree = 
            (Object)adaptor.create(char_literal196)
            ;
            adaptor.addChild(root_0, char_literal196_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_declaration"


    public static class specifier_qualifier_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "specifier_qualifier_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:285:1: specifier_qualifier_list : ( type_specifier | type_qualifier )+ ;
    public final ObjectiveCParser.specifier_qualifier_list_return specifier_qualifier_list() throws RecognitionException {
        ObjectiveCParser.specifier_qualifier_list_return retval = new ObjectiveCParser.specifier_qualifier_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.type_specifier_return type_specifier197 =null;

        ObjectiveCParser.type_qualifier_return type_qualifier198 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:285:26: ( ( type_specifier | type_qualifier )+ )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:285:28: ( type_specifier | type_qualifier )+
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:285:28: ( type_specifier | type_qualifier )+
            int cnt43=0;
            loop43:
            do {
                int alt43=3;
                switch ( input.LA(1) ) {
                case IDENTIFIER:
                    {
                    int LA43_2 = input.LA(2);

                    if ( (synpred96_ObjectiveC()) ) {
                        alt43=1;
                    }


                    }
                    break;
                case 88:
                case 93:
                case 95:
                case 97:
                case 100:
                case 104:
                case 105:
                case 111:
                case 112:
                case 115:
                case 119:
                case 120:
                case 121:
                    {
                    alt43=1;
                    }
                    break;
                case 85:
                case 86:
                case 89:
                case 102:
                case 103:
                case 106:
                case 107:
                case 122:
                    {
                    alt43=2;
                    }
                    break;

                }

                switch (alt43) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:285:29: type_specifier
            	    {
            	    pushFollow(FOLLOW_type_specifier_in_specifier_qualifier_list1323);
            	    type_specifier197=type_specifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_specifier197.getTree());

            	    }
            	    break;
            	case 2 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:285:46: type_qualifier
            	    {
            	    pushFollow(FOLLOW_type_qualifier_in_specifier_qualifier_list1327);
            	    type_qualifier198=type_qualifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_qualifier198.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt43 >= 1 ) break loop43;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(43, input);
                        throw eee;
                }
                cnt43++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "specifier_qualifier_list"


    public static class struct_declarator_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_declarator_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:287:1: struct_declarator_list : struct_declarator ( ',' struct_declarator )* ;
    public final ObjectiveCParser.struct_declarator_list_return struct_declarator_list() throws RecognitionException {
        ObjectiveCParser.struct_declarator_list_return retval = new ObjectiveCParser.struct_declarator_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal200=null;
        ObjectiveCParser.struct_declarator_return struct_declarator199 =null;

        ObjectiveCParser.struct_declarator_return struct_declarator201 =null;


        Object char_literal200_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:287:24: ( struct_declarator ( ',' struct_declarator )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:287:26: struct_declarator ( ',' struct_declarator )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_struct_declarator_in_struct_declarator_list1338);
            struct_declarator199=struct_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declarator199.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:287:44: ( ',' struct_declarator )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==40) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:287:45: ',' struct_declarator
            	    {
            	    char_literal200=(Token)match(input,40,FOLLOW_40_in_struct_declarator_list1341); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal200_tree = 
            	    (Object)adaptor.create(char_literal200)
            	    ;
            	    adaptor.addChild(root_0, char_literal200_tree);
            	    }

            	    pushFollow(FOLLOW_struct_declarator_in_struct_declarator_list1343);
            	    struct_declarator201=struct_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declarator201.getTree());

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_declarator_list"


    public static class struct_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "struct_declarator"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:289:1: struct_declarator : ( declarator | ( declarator )? ':' constant );
    public final ObjectiveCParser.struct_declarator_return struct_declarator() throws RecognitionException {
        ObjectiveCParser.struct_declarator_return retval = new ObjectiveCParser.struct_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal204=null;
        ObjectiveCParser.declarator_return declarator202 =null;

        ObjectiveCParser.declarator_return declarator203 =null;

        ObjectiveCParser.constant_return constant205 =null;


        Object char_literal204_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:289:19: ( declarator | ( declarator )? ':' constant )
            int alt46=2;
            switch ( input.LA(1) ) {
            case 35:
                {
                int LA46_1 = input.LA(2);

                if ( (synpred99_ObjectiveC()) ) {
                    alt46=1;
                }
                else if ( (true) ) {
                    alt46=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 1, input);

                    throw nvae;

                }
                }
                break;
            case IDENTIFIER:
                {
                int LA46_2 = input.LA(2);

                if ( (synpred99_ObjectiveC()) ) {
                    alt46=1;
                }
                else if ( (true) ) {
                    alt46=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 2, input);

                    throw nvae;

                }
                }
                break;
            case 33:
                {
                int LA46_3 = input.LA(2);

                if ( (synpred99_ObjectiveC()) ) {
                    alt46=1;
                }
                else if ( (true) ) {
                    alt46=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 3, input);

                    throw nvae;

                }
                }
                break;
            case 49:
                {
                alt46=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;

            }

            switch (alt46) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:289:21: declarator
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_declarator_in_struct_declarator1354);
                    declarator202=declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, declarator202.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:289:34: ( declarator )? ':' constant
                    {
                    root_0 = (Object)adaptor.nil();


                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:289:34: ( declarator )?
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==IDENTIFIER||LA45_0==33||LA45_0==35) ) {
                        alt45=1;
                    }
                    switch (alt45) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:289:34: declarator
                            {
                            pushFollow(FOLLOW_declarator_in_struct_declarator1358);
                            declarator203=declarator();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, declarator203.getTree());

                            }
                            break;

                    }


                    char_literal204=(Token)match(input,49,FOLLOW_49_in_struct_declarator1361); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal204_tree = 
                    (Object)adaptor.create(char_literal204)
                    ;
                    adaptor.addChild(root_0, char_literal204_tree);
                    }

                    pushFollow(FOLLOW_constant_in_struct_declarator1363);
                    constant205=constant();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant205.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "struct_declarator"


    public static class enum_specifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "enum_specifier"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:291:1: enum_specifier : 'enum' ( identifier ( '{' enumerator_list '}' )? | '{' enumerator_list '}' ) ;
    public final ObjectiveCParser.enum_specifier_return enum_specifier() throws RecognitionException {
        ObjectiveCParser.enum_specifier_return retval = new ObjectiveCParser.enum_specifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal206=null;
        Token char_literal208=null;
        Token char_literal210=null;
        Token char_literal211=null;
        Token char_literal213=null;
        ObjectiveCParser.identifier_return identifier207 =null;

        ObjectiveCParser.enumerator_list_return enumerator_list209 =null;

        ObjectiveCParser.enumerator_list_return enumerator_list212 =null;


        Object string_literal206_tree=null;
        Object char_literal208_tree=null;
        Object char_literal210_tree=null;
        Object char_literal211_tree=null;
        Object char_literal213_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:291:16: ( 'enum' ( identifier ( '{' enumerator_list '}' )? | '{' enumerator_list '}' ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:291:18: 'enum' ( identifier ( '{' enumerator_list '}' )? | '{' enumerator_list '}' )
            {
            root_0 = (Object)adaptor.nil();


            string_literal206=(Token)match(input,95,FOLLOW_95_in_enum_specifier1371); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal206_tree = 
            (Object)adaptor.create(string_literal206)
            ;
            adaptor.addChild(root_0, string_literal206_tree);
            }

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:292:3: ( identifier ( '{' enumerator_list '}' )? | '{' enumerator_list '}' )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==IDENTIFIER) ) {
                alt48=1;
            }
            else if ( (LA48_0==124) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;

            }
            switch (alt48) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:292:5: identifier ( '{' enumerator_list '}' )?
                    {
                    pushFollow(FOLLOW_identifier_in_enum_specifier1378);
                    identifier207=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier207.getTree());

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:292:16: ( '{' enumerator_list '}' )?
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==124) ) {
                        int LA47_1 = input.LA(2);

                        if ( (synpred101_ObjectiveC()) ) {
                            alt47=1;
                        }
                    }
                    switch (alt47) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:292:17: '{' enumerator_list '}'
                            {
                            char_literal208=(Token)match(input,124,FOLLOW_124_in_enum_specifier1381); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal208_tree = 
                            (Object)adaptor.create(char_literal208)
                            ;
                            adaptor.addChild(root_0, char_literal208_tree);
                            }

                            pushFollow(FOLLOW_enumerator_list_in_enum_specifier1383);
                            enumerator_list209=enumerator_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, enumerator_list209.getTree());

                            char_literal210=(Token)match(input,128,FOLLOW_128_in_enum_specifier1385); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal210_tree = 
                            (Object)adaptor.create(char_literal210)
                            ;
                            adaptor.addChild(root_0, char_literal210_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:293:5: '{' enumerator_list '}'
                    {
                    char_literal211=(Token)match(input,124,FOLLOW_124_in_enum_specifier1394); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal211_tree = 
                    (Object)adaptor.create(char_literal211)
                    ;
                    adaptor.addChild(root_0, char_literal211_tree);
                    }

                    pushFollow(FOLLOW_enumerator_list_in_enum_specifier1396);
                    enumerator_list212=enumerator_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enumerator_list212.getTree());

                    char_literal213=(Token)match(input,128,FOLLOW_128_in_enum_specifier1398); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal213_tree = 
                    (Object)adaptor.create(char_literal213)
                    ;
                    adaptor.addChild(root_0, char_literal213_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "enum_specifier"


    public static class enumerator_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "enumerator_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:294:1: enumerator_list : enumerator ( ',' enumerator )* ;
    public final ObjectiveCParser.enumerator_list_return enumerator_list() throws RecognitionException {
        ObjectiveCParser.enumerator_list_return retval = new ObjectiveCParser.enumerator_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal215=null;
        ObjectiveCParser.enumerator_return enumerator214 =null;

        ObjectiveCParser.enumerator_return enumerator216 =null;


        Object char_literal215_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:294:17: ( enumerator ( ',' enumerator )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:294:19: enumerator ( ',' enumerator )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_enumerator_in_enumerator_list1407);
            enumerator214=enumerator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, enumerator214.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:294:30: ( ',' enumerator )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==40) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:294:31: ',' enumerator
            	    {
            	    char_literal215=(Token)match(input,40,FOLLOW_40_in_enumerator_list1410); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal215_tree = 
            	    (Object)adaptor.create(char_literal215)
            	    ;
            	    adaptor.addChild(root_0, char_literal215_tree);
            	    }

            	    pushFollow(FOLLOW_enumerator_in_enumerator_list1412);
            	    enumerator216=enumerator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, enumerator216.getTree());

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "enumerator_list"


    public static class enumerator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "enumerator"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:295:1: enumerator : identifier ( '=' constant_expression )? ;
    public final ObjectiveCParser.enumerator_return enumerator() throws RecognitionException {
        ObjectiveCParser.enumerator_return retval = new ObjectiveCParser.enumerator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal218=null;
        ObjectiveCParser.identifier_return identifier217 =null;

        ObjectiveCParser.constant_expression_return constant_expression219 =null;


        Object char_literal218_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:295:12: ( identifier ( '=' constant_expression )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:295:14: identifier ( '=' constant_expression )?
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_identifier_in_enumerator1422);
            identifier217=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier217.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:295:25: ( '=' constant_expression )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==55) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:295:26: '=' constant_expression
                    {
                    char_literal218=(Token)match(input,55,FOLLOW_55_in_enumerator1425); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal218_tree = 
                    (Object)adaptor.create(char_literal218)
                    ;
                    adaptor.addChild(root_0, char_literal218_tree);
                    }

                    pushFollow(FOLLOW_constant_expression_in_enumerator1427);
                    constant_expression219=constant_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression219.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "enumerator"


    public static class declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "declarator"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:297:1: declarator : ( '*' ( type_qualifier )* declarator | direct_declarator );
    public final ObjectiveCParser.declarator_return declarator() throws RecognitionException {
        ObjectiveCParser.declarator_return retval = new ObjectiveCParser.declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal220=null;
        ObjectiveCParser.type_qualifier_return type_qualifier221 =null;

        ObjectiveCParser.declarator_return declarator222 =null;

        ObjectiveCParser.direct_declarator_return direct_declarator223 =null;


        Object char_literal220_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:297:12: ( '*' ( type_qualifier )* declarator | direct_declarator )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==35) ) {
                alt52=1;
            }
            else if ( (LA52_0==IDENTIFIER||LA52_0==33) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;

            }
            switch (alt52) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:297:14: '*' ( type_qualifier )* declarator
                    {
                    root_0 = (Object)adaptor.nil();


                    char_literal220=(Token)match(input,35,FOLLOW_35_in_declarator1437); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal220_tree = 
                    (Object)adaptor.create(char_literal220)
                    ;
                    adaptor.addChild(root_0, char_literal220_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:297:18: ( type_qualifier )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( ((LA51_0 >= 85 && LA51_0 <= 86)||LA51_0==89||(LA51_0 >= 102 && LA51_0 <= 103)||(LA51_0 >= 106 && LA51_0 <= 107)||LA51_0==122) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:297:18: type_qualifier
                    	    {
                    	    pushFollow(FOLLOW_type_qualifier_in_declarator1439);
                    	    type_qualifier221=type_qualifier();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_qualifier221.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);


                    pushFollow(FOLLOW_declarator_in_declarator1442);
                    declarator222=declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, declarator222.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:297:47: direct_declarator
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_direct_declarator_in_declarator1446);
                    direct_declarator223=direct_declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, direct_declarator223.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "declarator"


    public static class direct_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "direct_declarator"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:299:1: direct_declarator : ( identifier ( declarator_suffix )* | '(' declarator ')' ( declarator_suffix )* );
    public final ObjectiveCParser.direct_declarator_return direct_declarator() throws RecognitionException {
        ObjectiveCParser.direct_declarator_return retval = new ObjectiveCParser.direct_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal226=null;
        Token char_literal228=null;
        ObjectiveCParser.identifier_return identifier224 =null;

        ObjectiveCParser.declarator_suffix_return declarator_suffix225 =null;

        ObjectiveCParser.declarator_return declarator227 =null;

        ObjectiveCParser.declarator_suffix_return declarator_suffix229 =null;


        Object char_literal226_tree=null;
        Object char_literal228_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:299:19: ( identifier ( declarator_suffix )* | '(' declarator ')' ( declarator_suffix )* )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==IDENTIFIER) ) {
                alt55=1;
            }
            else if ( (LA55_0==33) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;

            }
            switch (alt55) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:299:21: identifier ( declarator_suffix )*
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_identifier_in_direct_declarator1455);
                    identifier224=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier224.getTree());

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:299:32: ( declarator_suffix )*
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==33) ) {
                            int LA53_10 = input.LA(2);

                            if ( (synpred107_ObjectiveC()) ) {
                                alt53=1;
                            }


                        }
                        else if ( (LA53_0==78) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:299:32: declarator_suffix
                    	    {
                    	    pushFollow(FOLLOW_declarator_suffix_in_direct_declarator1457);
                    	    declarator_suffix225=declarator_suffix();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, declarator_suffix225.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop53;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:300:21: '(' declarator ')' ( declarator_suffix )*
                    {
                    root_0 = (Object)adaptor.nil();


                    char_literal226=(Token)match(input,33,FOLLOW_33_in_direct_declarator1480); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal226_tree = 
                    (Object)adaptor.create(char_literal226)
                    ;
                    adaptor.addChild(root_0, char_literal226_tree);
                    }

                    pushFollow(FOLLOW_declarator_in_direct_declarator1482);
                    declarator227=declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, declarator227.getTree());

                    char_literal228=(Token)match(input,34,FOLLOW_34_in_direct_declarator1484); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal228_tree = 
                    (Object)adaptor.create(char_literal228)
                    ;
                    adaptor.addChild(root_0, char_literal228_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:300:40: ( declarator_suffix )*
                    loop54:
                    do {
                        int alt54=2;
                        int LA54_0 = input.LA(1);

                        if ( (LA54_0==33) ) {
                            int LA54_10 = input.LA(2);

                            if ( (synpred109_ObjectiveC()) ) {
                                alt54=1;
                            }


                        }
                        else if ( (LA54_0==78) ) {
                            alt54=1;
                        }


                        switch (alt54) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:300:40: declarator_suffix
                    	    {
                    	    pushFollow(FOLLOW_declarator_suffix_in_direct_declarator1486);
                    	    declarator_suffix229=declarator_suffix();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, declarator_suffix229.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop54;
                        }
                    } while (true);


                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "direct_declarator"


    public static class declarator_suffix_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "declarator_suffix"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:302:1: declarator_suffix : ( '[' ( constant_expression )? ']' | '(' ( parameter_list )? ')' );
    public final ObjectiveCParser.declarator_suffix_return declarator_suffix() throws RecognitionException {
        ObjectiveCParser.declarator_suffix_return retval = new ObjectiveCParser.declarator_suffix_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal230=null;
        Token char_literal232=null;
        Token char_literal233=null;
        Token char_literal235=null;
        ObjectiveCParser.constant_expression_return constant_expression231 =null;

        ObjectiveCParser.parameter_list_return parameter_list234 =null;


        Object char_literal230_tree=null;
        Object char_literal232_tree=null;
        Object char_literal233_tree=null;
        Object char_literal235_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:302:19: ( '[' ( constant_expression )? ']' | '(' ( parameter_list )? ')' )
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==78) ) {
                alt58=1;
            }
            else if ( (LA58_0==33) ) {
                alt58=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;

            }
            switch (alt58) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:302:21: '[' ( constant_expression )? ']'
                    {
                    root_0 = (Object)adaptor.nil();


                    char_literal230=(Token)match(input,78,FOLLOW_78_in_declarator_suffix1496); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal230_tree = 
                    (Object)adaptor.create(char_literal230)
                    ;
                    adaptor.addChild(root_0, char_literal230_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:302:25: ( constant_expression )?
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==CHARACTER_LITERAL||LA56_0==DECIMAL_LITERAL||LA56_0==FLOATING_POINT_LITERAL||LA56_0==HEX_LITERAL||LA56_0==IDENTIFIER||LA56_0==OCTAL_LITERAL||LA56_0==STRING_LITERAL||LA56_0==25||LA56_0==31||LA56_0==33||LA56_0==35||LA56_0==38||(LA56_0 >= 41 && LA56_0 <= 42)||LA56_0==64||LA56_0==72||LA56_0==74||LA56_0==78||LA56_0==110||LA56_0==113||LA56_0==129) ) {
                        alt56=1;
                    }
                    switch (alt56) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:302:25: constant_expression
                            {
                            pushFollow(FOLLOW_constant_expression_in_declarator_suffix1498);
                            constant_expression231=constant_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression231.getTree());

                            }
                            break;

                    }


                    char_literal232=(Token)match(input,80,FOLLOW_80_in_declarator_suffix1501); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal232_tree = 
                    (Object)adaptor.create(char_literal232)
                    ;
                    adaptor.addChild(root_0, char_literal232_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:303:7: '(' ( parameter_list )? ')'
                    {
                    root_0 = (Object)adaptor.nil();


                    char_literal233=(Token)match(input,33,FOLLOW_33_in_declarator_suffix1509); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal233_tree = 
                    (Object)adaptor.create(char_literal233)
                    ;
                    adaptor.addChild(root_0, char_literal233_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:303:11: ( parameter_list )?
                    int alt57=2;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==IDENTIFIER||LA57_0==83||(LA57_0 >= 85 && LA57_0 <= 86)||(LA57_0 >= 88 && LA57_0 <= 89)||LA57_0==93||(LA57_0 >= 95 && LA57_0 <= 97)||LA57_0==100||(LA57_0 >= 102 && LA57_0 <= 108)||(LA57_0 >= 111 && LA57_0 <= 112)||(LA57_0 >= 114 && LA57_0 <= 115)||(LA57_0 >= 118 && LA57_0 <= 122)) ) {
                        alt57=1;
                    }
                    switch (alt57) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:303:11: parameter_list
                            {
                            pushFollow(FOLLOW_parameter_list_in_declarator_suffix1511);
                            parameter_list234=parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_list234.getTree());

                            }
                            break;

                    }


                    char_literal235=(Token)match(input,34,FOLLOW_34_in_declarator_suffix1514); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal235_tree = 
                    (Object)adaptor.create(char_literal235)
                    ;
                    adaptor.addChild(root_0, char_literal235_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "declarator_suffix"


    public static class parameter_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "parameter_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:305:1: parameter_list : parameter_declaration_list ( ',' '...' )? ;
    public final ObjectiveCParser.parameter_list_return parameter_list() throws RecognitionException {
        ObjectiveCParser.parameter_list_return retval = new ObjectiveCParser.parameter_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal237=null;
        Token string_literal238=null;
        ObjectiveCParser.parameter_declaration_list_return parameter_declaration_list236 =null;


        Object char_literal237_tree=null;
        Object string_literal238_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:305:16: ( parameter_declaration_list ( ',' '...' )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:305:18: parameter_declaration_list ( ',' '...' )?
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_parameter_declaration_list_in_parameter_list1522);
            parameter_declaration_list236=parameter_declaration_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_declaration_list236.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:305:45: ( ',' '...' )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==40) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:305:47: ',' '...'
                    {
                    char_literal237=(Token)match(input,40,FOLLOW_40_in_parameter_list1526); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal237_tree = 
                    (Object)adaptor.create(char_literal237)
                    ;
                    adaptor.addChild(root_0, char_literal237_tree);
                    }

                    string_literal238=(Token)match(input,46,FOLLOW_46_in_parameter_list1528); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal238_tree = 
                    (Object)adaptor.create(string_literal238)
                    ;
                    adaptor.addChild(root_0, string_literal238_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "parameter_list"


    public static class parameter_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "parameter_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:307:1: parameter_declaration : declaration_specifiers ( ( declarator )? | abstract_declarator ) ;
    public final ObjectiveCParser.parameter_declaration_return parameter_declaration() throws RecognitionException {
        ObjectiveCParser.parameter_declaration_return retval = new ObjectiveCParser.parameter_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.declaration_specifiers_return declaration_specifiers239 =null;

        ObjectiveCParser.declarator_return declarator240 =null;

        ObjectiveCParser.abstract_declarator_return abstract_declarator241 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:3: ( declaration_specifiers ( ( declarator )? | abstract_declarator ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:5: declaration_specifiers ( ( declarator )? | abstract_declarator )
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_declaration_specifiers_in_parameter_declaration1543);
            declaration_specifiers239=declaration_specifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration_specifiers239.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:28: ( ( declarator )? | abstract_declarator )
            int alt61=2;
            switch ( input.LA(1) ) {
            case 35:
                {
                int LA61_1 = input.LA(2);

                if ( (synpred115_ObjectiveC()) ) {
                    alt61=1;
                }
                else if ( (true) ) {
                    alt61=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 1, input);

                    throw nvae;

                }
                }
                break;
            case IDENTIFIER:
                {
                int LA61_2 = input.LA(2);

                if ( (synpred115_ObjectiveC()) ) {
                    alt61=1;
                }
                else if ( (true) ) {
                    alt61=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 2, input);

                    throw nvae;

                }
                }
                break;
            case 33:
                {
                int LA61_3 = input.LA(2);

                if ( (synpred115_ObjectiveC()) ) {
                    alt61=1;
                }
                else if ( (true) ) {
                    alt61=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 3, input);

                    throw nvae;

                }
                }
                break;
            case 40:
                {
                int LA61_4 = input.LA(2);

                if ( (synpred115_ObjectiveC()) ) {
                    alt61=1;
                }
                else if ( (true) ) {
                    alt61=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 4, input);

                    throw nvae;

                }
                }
                break;
            case 50:
                {
                int LA61_5 = input.LA(2);

                if ( (synpred115_ObjectiveC()) ) {
                    alt61=1;
                }
                else if ( (true) ) {
                    alt61=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 5, input);

                    throw nvae;

                }
                }
                break;
            case 124:
                {
                int LA61_6 = input.LA(2);

                if ( (synpred115_ObjectiveC()) ) {
                    alt61=1;
                }
                else if ( (true) ) {
                    alt61=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 6, input);

                    throw nvae;

                }
                }
                break;
            case 34:
                {
                int LA61_7 = input.LA(2);

                if ( (synpred115_ObjectiveC()) ) {
                    alt61=1;
                }
                else if ( (true) ) {
                    alt61=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 7, input);

                    throw nvae;

                }
                }
                break;
            case EOF:
                {
                int LA61_8 = input.LA(2);

                if ( (synpred115_ObjectiveC()) ) {
                    alt61=1;
                }
                else if ( (true) ) {
                    alt61=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 8, input);

                    throw nvae;

                }
                }
                break;
            case 78:
                {
                alt61=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;

            }

            switch (alt61) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:29: ( declarator )?
                    {
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:29: ( declarator )?
                    int alt60=2;
                    switch ( input.LA(1) ) {
                        case 35:
                            {
                            int LA60_1 = input.LA(2);

                            if ( (synpred114_ObjectiveC()) ) {
                                alt60=1;
                            }
                            }
                            break;
                        case IDENTIFIER:
                            {
                            int LA60_2 = input.LA(2);

                            if ( (synpred114_ObjectiveC()) ) {
                                alt60=1;
                            }
                            }
                            break;
                        case 33:
                            {
                            int LA60_3 = input.LA(2);

                            if ( (synpred114_ObjectiveC()) ) {
                                alt60=1;
                            }
                            }
                            break;
                    }

                    switch (alt60) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:29: declarator
                            {
                            pushFollow(FOLLOW_declarator_in_parameter_declaration1546);
                            declarator240=declarator();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, declarator240.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:43: abstract_declarator
                    {
                    pushFollow(FOLLOW_abstract_declarator_in_parameter_declaration1551);
                    abstract_declarator241=abstract_declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, abstract_declarator241.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "parameter_declaration"


    public static class initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "initializer"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:310:1: initializer : ( assignment_expression | '{' initializer ( ',' initializer )* '}' );
    public final ObjectiveCParser.initializer_return initializer() throws RecognitionException {
        ObjectiveCParser.initializer_return retval = new ObjectiveCParser.initializer_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal243=null;
        Token char_literal245=null;
        Token char_literal247=null;
        ObjectiveCParser.assignment_expression_return assignment_expression242 =null;

        ObjectiveCParser.initializer_return initializer244 =null;

        ObjectiveCParser.initializer_return initializer246 =null;


        Object char_literal243_tree=null;
        Object char_literal245_tree=null;
        Object char_literal247_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:310:13: ( assignment_expression | '{' initializer ( ',' initializer )* '}' )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==CHARACTER_LITERAL||LA63_0==DECIMAL_LITERAL||LA63_0==FLOATING_POINT_LITERAL||LA63_0==HEX_LITERAL||LA63_0==IDENTIFIER||LA63_0==OCTAL_LITERAL||LA63_0==STRING_LITERAL||LA63_0==25||LA63_0==31||LA63_0==33||LA63_0==35||LA63_0==38||(LA63_0 >= 41 && LA63_0 <= 42)||LA63_0==64||LA63_0==72||LA63_0==74||LA63_0==78||LA63_0==110||LA63_0==113||LA63_0==129) ) {
                alt63=1;
            }
            else if ( (LA63_0==124) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;

            }
            switch (alt63) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:310:15: assignment_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_assignment_expression_in_initializer1561);
                    assignment_expression242=assignment_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment_expression242.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:311:8: '{' initializer ( ',' initializer )* '}'
                    {
                    root_0 = (Object)adaptor.nil();


                    char_literal243=(Token)match(input,124,FOLLOW_124_in_initializer1570); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal243_tree = 
                    (Object)adaptor.create(char_literal243)
                    ;
                    adaptor.addChild(root_0, char_literal243_tree);
                    }

                    pushFollow(FOLLOW_initializer_in_initializer1572);
                    initializer244=initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, initializer244.getTree());

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:311:24: ( ',' initializer )*
                    loop62:
                    do {
                        int alt62=2;
                        int LA62_0 = input.LA(1);

                        if ( (LA62_0==40) ) {
                            alt62=1;
                        }


                        switch (alt62) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:311:25: ',' initializer
                    	    {
                    	    char_literal245=(Token)match(input,40,FOLLOW_40_in_initializer1575); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal245_tree = 
                    	    (Object)adaptor.create(char_literal245)
                    	    ;
                    	    adaptor.addChild(root_0, char_literal245_tree);
                    	    }

                    	    pushFollow(FOLLOW_initializer_in_initializer1577);
                    	    initializer246=initializer();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, initializer246.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop62;
                        }
                    } while (true);


                    char_literal247=(Token)match(input,128,FOLLOW_128_in_initializer1581); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal247_tree = 
                    (Object)adaptor.create(char_literal247)
                    ;
                    adaptor.addChild(root_0, char_literal247_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "initializer"


    public static class type_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_name"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:313:1: type_name : specifier_qualifier_list abstract_declarator ;
    public final ObjectiveCParser.type_name_return type_name() throws RecognitionException {
        ObjectiveCParser.type_name_return retval = new ObjectiveCParser.type_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.specifier_qualifier_list_return specifier_qualifier_list248 =null;

        ObjectiveCParser.abstract_declarator_return abstract_declarator249 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:313:11: ( specifier_qualifier_list abstract_declarator )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:313:13: specifier_qualifier_list abstract_declarator
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_specifier_qualifier_list_in_type_name1590);
            specifier_qualifier_list248=specifier_qualifier_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specifier_qualifier_list248.getTree());

            pushFollow(FOLLOW_abstract_declarator_in_type_name1592);
            abstract_declarator249=abstract_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, abstract_declarator249.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_name"


    public static class abstract_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "abstract_declarator"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:315:1: abstract_declarator : ( '*' ( type_qualifier )* abstract_declarator | '(' abstract_declarator ')' ( abstract_declarator_suffix )+ | ( '[' ( constant_expression )? ']' )+ |);
    public final ObjectiveCParser.abstract_declarator_return abstract_declarator() throws RecognitionException {
        ObjectiveCParser.abstract_declarator_return retval = new ObjectiveCParser.abstract_declarator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal250=null;
        Token char_literal253=null;
        Token char_literal255=null;
        Token char_literal257=null;
        Token char_literal259=null;
        ObjectiveCParser.type_qualifier_return type_qualifier251 =null;

        ObjectiveCParser.abstract_declarator_return abstract_declarator252 =null;

        ObjectiveCParser.abstract_declarator_return abstract_declarator254 =null;

        ObjectiveCParser.abstract_declarator_suffix_return abstract_declarator_suffix256 =null;

        ObjectiveCParser.constant_expression_return constant_expression258 =null;


        Object char_literal250_tree=null;
        Object char_literal253_tree=null;
        Object char_literal255_tree=null;
        Object char_literal257_tree=null;
        Object char_literal259_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:315:21: ( '*' ( type_qualifier )* abstract_declarator | '(' abstract_declarator ')' ( abstract_declarator_suffix )+ | ( '[' ( constant_expression )? ']' )+ |)
            int alt68=4;
            switch ( input.LA(1) ) {
            case 35:
                {
                int LA68_1 = input.LA(2);

                if ( (synpred119_ObjectiveC()) ) {
                    alt68=1;
                }
                else if ( (true) ) {
                    alt68=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 1, input);

                    throw nvae;

                }
                }
                break;
            case 33:
                {
                int LA68_2 = input.LA(2);

                if ( (synpred121_ObjectiveC()) ) {
                    alt68=2;
                }
                else if ( (true) ) {
                    alt68=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 2, input);

                    throw nvae;

                }
                }
                break;
            case 78:
                {
                alt68=3;
                }
                break;
            case EOF:
            case IDENTIFIER:
            case 34:
            case 40:
            case 50:
            case 124:
                {
                alt68=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;

            }

            switch (alt68) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:315:23: '*' ( type_qualifier )* abstract_declarator
                    {
                    root_0 = (Object)adaptor.nil();


                    char_literal250=(Token)match(input,35,FOLLOW_35_in_abstract_declarator1601); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal250_tree = 
                    (Object)adaptor.create(char_literal250)
                    ;
                    adaptor.addChild(root_0, char_literal250_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:315:27: ( type_qualifier )*
                    loop64:
                    do {
                        int alt64=2;
                        int LA64_0 = input.LA(1);

                        if ( ((LA64_0 >= 85 && LA64_0 <= 86)||LA64_0==89||(LA64_0 >= 102 && LA64_0 <= 103)||(LA64_0 >= 106 && LA64_0 <= 107)||LA64_0==122) ) {
                            alt64=1;
                        }


                        switch (alt64) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:315:27: type_qualifier
                    	    {
                    	    pushFollow(FOLLOW_type_qualifier_in_abstract_declarator1603);
                    	    type_qualifier251=type_qualifier();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_qualifier251.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop64;
                        }
                    } while (true);


                    pushFollow(FOLLOW_abstract_declarator_in_abstract_declarator1606);
                    abstract_declarator252=abstract_declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, abstract_declarator252.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:316:5: '(' abstract_declarator ')' ( abstract_declarator_suffix )+
                    {
                    root_0 = (Object)adaptor.nil();


                    char_literal253=(Token)match(input,33,FOLLOW_33_in_abstract_declarator1613); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal253_tree = 
                    (Object)adaptor.create(char_literal253)
                    ;
                    adaptor.addChild(root_0, char_literal253_tree);
                    }

                    pushFollow(FOLLOW_abstract_declarator_in_abstract_declarator1615);
                    abstract_declarator254=abstract_declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, abstract_declarator254.getTree());

                    char_literal255=(Token)match(input,34,FOLLOW_34_in_abstract_declarator1617); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal255_tree = 
                    (Object)adaptor.create(char_literal255)
                    ;
                    adaptor.addChild(root_0, char_literal255_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:316:33: ( abstract_declarator_suffix )+
                    int cnt65=0;
                    loop65:
                    do {
                        int alt65=2;
                        int LA65_0 = input.LA(1);

                        if ( (LA65_0==33) ) {
                            int LA65_5 = input.LA(2);

                            if ( (synpred120_ObjectiveC()) ) {
                                alt65=1;
                            }


                        }
                        else if ( (LA65_0==78) ) {
                            alt65=1;
                        }


                        switch (alt65) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:316:33: abstract_declarator_suffix
                    	    {
                    	    pushFollow(FOLLOW_abstract_declarator_suffix_in_abstract_declarator1619);
                    	    abstract_declarator_suffix256=abstract_declarator_suffix();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, abstract_declarator_suffix256.getTree());

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt65 >= 1 ) break loop65;
                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(65, input);
                                throw eee;
                        }
                        cnt65++;
                    } while (true);


                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:317:5: ( '[' ( constant_expression )? ']' )+
                    {
                    root_0 = (Object)adaptor.nil();


                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:317:5: ( '[' ( constant_expression )? ']' )+
                    int cnt67=0;
                    loop67:
                    do {
                        int alt67=2;
                        int LA67_0 = input.LA(1);

                        if ( (LA67_0==78) ) {
                            alt67=1;
                        }


                        switch (alt67) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:317:6: '[' ( constant_expression )? ']'
                    	    {
                    	    char_literal257=(Token)match(input,78,FOLLOW_78_in_abstract_declarator1627); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal257_tree = 
                    	    (Object)adaptor.create(char_literal257)
                    	    ;
                    	    adaptor.addChild(root_0, char_literal257_tree);
                    	    }

                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:317:10: ( constant_expression )?
                    	    int alt66=2;
                    	    int LA66_0 = input.LA(1);

                    	    if ( (LA66_0==CHARACTER_LITERAL||LA66_0==DECIMAL_LITERAL||LA66_0==FLOATING_POINT_LITERAL||LA66_0==HEX_LITERAL||LA66_0==IDENTIFIER||LA66_0==OCTAL_LITERAL||LA66_0==STRING_LITERAL||LA66_0==25||LA66_0==31||LA66_0==33||LA66_0==35||LA66_0==38||(LA66_0 >= 41 && LA66_0 <= 42)||LA66_0==64||LA66_0==72||LA66_0==74||LA66_0==78||LA66_0==110||LA66_0==113||LA66_0==129) ) {
                    	        alt66=1;
                    	    }
                    	    switch (alt66) {
                    	        case 1 :
                    	            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:317:10: constant_expression
                    	            {
                    	            pushFollow(FOLLOW_constant_expression_in_abstract_declarator1629);
                    	            constant_expression258=constant_expression();

                    	            state._fsp--;
                    	            if (state.failed) return retval;
                    	            if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression258.getTree());

                    	            }
                    	            break;

                    	    }


                    	    char_literal259=(Token)match(input,80,FOLLOW_80_in_abstract_declarator1632); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal259_tree = 
                    	    (Object)adaptor.create(char_literal259)
                    	    ;
                    	    adaptor.addChild(root_0, char_literal259_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt67 >= 1 ) break loop67;
                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(67, input);
                                throw eee;
                        }
                        cnt67++;
                    } while (true);


                    }
                    break;
                case 4 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:318:5: 
                    {
                    root_0 = (Object)adaptor.nil();


                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "abstract_declarator"


    public static class abstract_declarator_suffix_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "abstract_declarator_suffix"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:320:1: abstract_declarator_suffix : ( '[' ( constant_expression )? ']' | '(' ( parameter_declaration_list )? ')' );
    public final ObjectiveCParser.abstract_declarator_suffix_return abstract_declarator_suffix() throws RecognitionException {
        ObjectiveCParser.abstract_declarator_suffix_return retval = new ObjectiveCParser.abstract_declarator_suffix_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal260=null;
        Token char_literal262=null;
        Token char_literal263=null;
        Token char_literal265=null;
        ObjectiveCParser.constant_expression_return constant_expression261 =null;

        ObjectiveCParser.parameter_declaration_list_return parameter_declaration_list264 =null;


        Object char_literal260_tree=null;
        Object char_literal262_tree=null;
        Object char_literal263_tree=null;
        Object char_literal265_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:321:3: ( '[' ( constant_expression )? ']' | '(' ( parameter_declaration_list )? ')' )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==78) ) {
                alt71=1;
            }
            else if ( (LA71_0==33) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;

            }
            switch (alt71) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:321:5: '[' ( constant_expression )? ']'
                    {
                    root_0 = (Object)adaptor.nil();


                    char_literal260=(Token)match(input,78,FOLLOW_78_in_abstract_declarator_suffix1649); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal260_tree = 
                    (Object)adaptor.create(char_literal260)
                    ;
                    adaptor.addChild(root_0, char_literal260_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:321:9: ( constant_expression )?
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==CHARACTER_LITERAL||LA69_0==DECIMAL_LITERAL||LA69_0==FLOATING_POINT_LITERAL||LA69_0==HEX_LITERAL||LA69_0==IDENTIFIER||LA69_0==OCTAL_LITERAL||LA69_0==STRING_LITERAL||LA69_0==25||LA69_0==31||LA69_0==33||LA69_0==35||LA69_0==38||(LA69_0 >= 41 && LA69_0 <= 42)||LA69_0==64||LA69_0==72||LA69_0==74||LA69_0==78||LA69_0==110||LA69_0==113||LA69_0==129) ) {
                        alt69=1;
                    }
                    switch (alt69) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:321:9: constant_expression
                            {
                            pushFollow(FOLLOW_constant_expression_in_abstract_declarator_suffix1651);
                            constant_expression261=constant_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression261.getTree());

                            }
                            break;

                    }


                    char_literal262=(Token)match(input,80,FOLLOW_80_in_abstract_declarator_suffix1654); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal262_tree = 
                    (Object)adaptor.create(char_literal262)
                    ;
                    adaptor.addChild(root_0, char_literal262_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:322:5: '(' ( parameter_declaration_list )? ')'
                    {
                    root_0 = (Object)adaptor.nil();


                    char_literal263=(Token)match(input,33,FOLLOW_33_in_abstract_declarator_suffix1660); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal263_tree = 
                    (Object)adaptor.create(char_literal263)
                    ;
                    adaptor.addChild(root_0, char_literal263_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:322:10: ( parameter_declaration_list )?
                    int alt70=2;
                    int LA70_0 = input.LA(1);

                    if ( (LA70_0==IDENTIFIER||LA70_0==83||(LA70_0 >= 85 && LA70_0 <= 86)||(LA70_0 >= 88 && LA70_0 <= 89)||LA70_0==93||(LA70_0 >= 95 && LA70_0 <= 97)||LA70_0==100||(LA70_0 >= 102 && LA70_0 <= 108)||(LA70_0 >= 111 && LA70_0 <= 112)||(LA70_0 >= 114 && LA70_0 <= 115)||(LA70_0 >= 118 && LA70_0 <= 122)) ) {
                        alt70=1;
                    }
                    switch (alt70) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:322:10: parameter_declaration_list
                            {
                            pushFollow(FOLLOW_parameter_declaration_list_in_abstract_declarator_suffix1663);
                            parameter_declaration_list264=parameter_declaration_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_declaration_list264.getTree());

                            }
                            break;

                    }


                    char_literal265=(Token)match(input,34,FOLLOW_34_in_abstract_declarator_suffix1666); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal265_tree = 
                    (Object)adaptor.create(char_literal265)
                    ;
                    adaptor.addChild(root_0, char_literal265_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "abstract_declarator_suffix"


    public static class parameter_declaration_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "parameter_declaration_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:324:1: parameter_declaration_list : parameter_declaration ( ',' parameter_declaration )* ;
    public final ObjectiveCParser.parameter_declaration_list_return parameter_declaration_list() throws RecognitionException {
        ObjectiveCParser.parameter_declaration_list_return retval = new ObjectiveCParser.parameter_declaration_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal267=null;
        ObjectiveCParser.parameter_declaration_return parameter_declaration266 =null;

        ObjectiveCParser.parameter_declaration_return parameter_declaration268 =null;


        Object char_literal267_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:325:3: ( parameter_declaration ( ',' parameter_declaration )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:325:5: parameter_declaration ( ',' parameter_declaration )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_parameter_declaration_in_parameter_declaration_list1677);
            parameter_declaration266=parameter_declaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_declaration266.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:325:27: ( ',' parameter_declaration )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==40) ) {
                    int LA72_1 = input.LA(2);

                    if ( (LA72_1==IDENTIFIER||LA72_1==83||(LA72_1 >= 85 && LA72_1 <= 86)||(LA72_1 >= 88 && LA72_1 <= 89)||LA72_1==93||(LA72_1 >= 95 && LA72_1 <= 97)||LA72_1==100||(LA72_1 >= 102 && LA72_1 <= 108)||(LA72_1 >= 111 && LA72_1 <= 112)||(LA72_1 >= 114 && LA72_1 <= 115)||(LA72_1 >= 118 && LA72_1 <= 122)) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:325:29: ',' parameter_declaration
            	    {
            	    char_literal267=(Token)match(input,40,FOLLOW_40_in_parameter_declaration_list1681); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal267_tree = 
            	    (Object)adaptor.create(char_literal267)
            	    ;
            	    adaptor.addChild(root_0, char_literal267_tree);
            	    }

            	    pushFollow(FOLLOW_parameter_declaration_in_parameter_declaration_list1683);
            	    parameter_declaration268=parameter_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_declaration268.getTree());

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "parameter_declaration_list"


    public static class statement_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "statement_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:327:1: statement_list : ( statement )+ ;
    public final ObjectiveCParser.statement_list_return statement_list() throws RecognitionException {
        ObjectiveCParser.statement_list_return retval = new ObjectiveCParser.statement_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.statement_return statement269 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:327:16: ( ( statement )+ )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:327:18: ( statement )+
            {
            root_0 = (Object)adaptor.nil();


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:327:18: ( statement )+
            int cnt73=0;
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==CHARACTER_LITERAL||LA73_0==DECIMAL_LITERAL||LA73_0==FLOATING_POINT_LITERAL||LA73_0==HEX_LITERAL||LA73_0==IDENTIFIER||LA73_0==OCTAL_LITERAL||LA73_0==STRING_LITERAL||LA73_0==25||LA73_0==31||LA73_0==33||LA73_0==35||LA73_0==38||(LA73_0 >= 41 && LA73_0 <= 42)||LA73_0==50||LA73_0==64||LA73_0==72||LA73_0==74||LA73_0==78||LA73_0==84||LA73_0==87||(LA73_0 >= 90 && LA73_0 <= 92)||(LA73_0 >= 98 && LA73_0 <= 99)||LA73_0==101||(LA73_0 >= 109 && LA73_0 <= 110)||LA73_0==113||LA73_0==117||(LA73_0 >= 123 && LA73_0 <= 124)||LA73_0==129) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:327:19: statement
            	    {
            	    pushFollow(FOLLOW_statement_in_statement_list1696);
            	    statement269=statement();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement269.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt73 >= 1 ) break loop73;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(73, input);
                        throw eee;
                }
                cnt73++;
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "statement_list"


    public static class statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "statement"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:329:1: statement : ( labeled_statement | expression ';' | compound_statement | selection_statement | iteration_statement | jump_statement | ';' );
    public final ObjectiveCParser.statement_return statement() throws RecognitionException {
        ObjectiveCParser.statement_return retval = new ObjectiveCParser.statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal272=null;
        Token char_literal277=null;
        ObjectiveCParser.labeled_statement_return labeled_statement270 =null;

        ObjectiveCParser.expression_return expression271 =null;

        ObjectiveCParser.compound_statement_return compound_statement273 =null;

        ObjectiveCParser.selection_statement_return selection_statement274 =null;

        ObjectiveCParser.iteration_statement_return iteration_statement275 =null;

        ObjectiveCParser.jump_statement_return jump_statement276 =null;


        Object char_literal272_tree=null;
        Object char_literal277_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:330:3: ( labeled_statement | expression ';' | compound_statement | selection_statement | iteration_statement | jump_statement | ';' )
            int alt74=7;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                int LA74_1 = input.LA(2);

                if ( (LA74_1==49) ) {
                    alt74=1;
                }
                else if ( (LA74_1==26||(LA74_1 >= 28 && LA74_1 <= 33)||(LA74_1 >= 35 && LA74_1 <= 45)||(LA74_1 >= 47 && LA74_1 <= 48)||(LA74_1 >= 50 && LA74_1 <= 61)||LA74_1==78||(LA74_1 >= 81 && LA74_1 <= 82)||(LA74_1 >= 125 && LA74_1 <= 127)) ) {
                    alt74=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 74, 1, input);

                    throw nvae;

                }
                }
                break;
            case 87:
            case 91:
                {
                alt74=1;
                }
                break;
            case CHARACTER_LITERAL:
            case DECIMAL_LITERAL:
            case FLOATING_POINT_LITERAL:
            case HEX_LITERAL:
            case OCTAL_LITERAL:
            case STRING_LITERAL:
            case 25:
            case 31:
            case 33:
            case 35:
            case 38:
            case 41:
            case 42:
            case 64:
            case 72:
            case 74:
            case 78:
            case 110:
            case 113:
            case 129:
                {
                alt74=2;
                }
                break;
            case 124:
                {
                alt74=3;
                }
                break;
            case 101:
            case 117:
                {
                alt74=4;
                }
                break;
            case 92:
            case 98:
            case 123:
                {
                alt74=5;
                }
                break;
            case 84:
            case 90:
            case 99:
            case 109:
                {
                alt74=6;
                }
                break;
            case 50:
                {
                alt74=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;

            }

            switch (alt74) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:330:5: labeled_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_labeled_statement_in_statement1710);
                    labeled_statement270=labeled_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, labeled_statement270.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:331:5: expression ';'
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_expression_in_statement1716);
                    expression271=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression271.getTree());

                    char_literal272=(Token)match(input,50,FOLLOW_50_in_statement1718); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal272_tree = 
                    (Object)adaptor.create(char_literal272)
                    ;
                    adaptor.addChild(root_0, char_literal272_tree);
                    }

                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:332:5: compound_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_compound_statement_in_statement1724);
                    compound_statement273=compound_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, compound_statement273.getTree());

                    }
                    break;
                case 4 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:333:5: selection_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_selection_statement_in_statement1730);
                    selection_statement274=selection_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, selection_statement274.getTree());

                    }
                    break;
                case 5 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:334:5: iteration_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_iteration_statement_in_statement1736);
                    iteration_statement275=iteration_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, iteration_statement275.getTree());

                    }
                    break;
                case 6 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:335:5: jump_statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_jump_statement_in_statement1742);
                    jump_statement276=jump_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, jump_statement276.getTree());

                    }
                    break;
                case 7 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:336:5: ';'
                    {
                    root_0 = (Object)adaptor.nil();


                    char_literal277=(Token)match(input,50,FOLLOW_50_in_statement1748); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal277_tree = 
                    (Object)adaptor.create(char_literal277)
                    ;
                    adaptor.addChild(root_0, char_literal277_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "statement"


    public static class labeled_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "labeled_statement"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:338:1: labeled_statement : ( identifier ':' statement | 'case' constant_expression ':' statement | 'default' ':' statement );
    public final ObjectiveCParser.labeled_statement_return labeled_statement() throws RecognitionException {
        ObjectiveCParser.labeled_statement_return retval = new ObjectiveCParser.labeled_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal279=null;
        Token string_literal281=null;
        Token char_literal283=null;
        Token string_literal285=null;
        Token char_literal286=null;
        ObjectiveCParser.identifier_return identifier278 =null;

        ObjectiveCParser.statement_return statement280 =null;

        ObjectiveCParser.constant_expression_return constant_expression282 =null;

        ObjectiveCParser.statement_return statement284 =null;

        ObjectiveCParser.statement_return statement287 =null;


        Object char_literal279_tree=null;
        Object string_literal281_tree=null;
        Object char_literal283_tree=null;
        Object string_literal285_tree=null;
        Object char_literal286_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:339:3: ( identifier ':' statement | 'case' constant_expression ':' statement | 'default' ':' statement )
            int alt75=3;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                alt75=1;
                }
                break;
            case 87:
                {
                alt75=2;
                }
                break;
            case 91:
                {
                alt75=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;

            }

            switch (alt75) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:339:5: identifier ':' statement
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_identifier_in_labeled_statement1759);
                    identifier278=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier278.getTree());

                    char_literal279=(Token)match(input,49,FOLLOW_49_in_labeled_statement1761); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal279_tree = 
                    (Object)adaptor.create(char_literal279)
                    ;
                    adaptor.addChild(root_0, char_literal279_tree);
                    }

                    pushFollow(FOLLOW_statement_in_labeled_statement1763);
                    statement280=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement280.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:340:5: 'case' constant_expression ':' statement
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal281=(Token)match(input,87,FOLLOW_87_in_labeled_statement1769); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal281_tree = 
                    (Object)adaptor.create(string_literal281)
                    ;
                    adaptor.addChild(root_0, string_literal281_tree);
                    }

                    pushFollow(FOLLOW_constant_expression_in_labeled_statement1771);
                    constant_expression282=constant_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression282.getTree());

                    char_literal283=(Token)match(input,49,FOLLOW_49_in_labeled_statement1773); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal283_tree = 
                    (Object)adaptor.create(char_literal283)
                    ;
                    adaptor.addChild(root_0, char_literal283_tree);
                    }

                    pushFollow(FOLLOW_statement_in_labeled_statement1775);
                    statement284=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement284.getTree());

                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:341:5: 'default' ':' statement
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal285=(Token)match(input,91,FOLLOW_91_in_labeled_statement1781); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal285_tree = 
                    (Object)adaptor.create(string_literal285)
                    ;
                    adaptor.addChild(root_0, string_literal285_tree);
                    }

                    char_literal286=(Token)match(input,49,FOLLOW_49_in_labeled_statement1783); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal286_tree = 
                    (Object)adaptor.create(char_literal286)
                    ;
                    adaptor.addChild(root_0, char_literal286_tree);
                    }

                    pushFollow(FOLLOW_statement_in_labeled_statement1785);
                    statement287=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement287.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "labeled_statement"


    public static class compound_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "compound_statement"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:343:1: compound_statement : '{' ( declaration )* ( statement_list )? '}' ;
    public final ObjectiveCParser.compound_statement_return compound_statement() throws RecognitionException {
        ObjectiveCParser.compound_statement_return retval = new ObjectiveCParser.compound_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal288=null;
        Token char_literal291=null;
        ObjectiveCParser.declaration_return declaration289 =null;

        ObjectiveCParser.statement_list_return statement_list290 =null;


        Object char_literal288_tree=null;
        Object char_literal291_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:343:20: ( '{' ( declaration )* ( statement_list )? '}' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:343:22: '{' ( declaration )* ( statement_list )? '}'
            {
            root_0 = (Object)adaptor.nil();


            char_literal288=(Token)match(input,124,FOLLOW_124_in_compound_statement1794); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal288_tree = 
            (Object)adaptor.create(char_literal288)
            ;
            adaptor.addChild(root_0, char_literal288_tree);
            }

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:343:26: ( declaration )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==IDENTIFIER) ) {
                    int LA76_1 = input.LA(2);

                    if ( (synpred138_ObjectiveC()) ) {
                        alt76=1;
                    }


                }
                else if ( (LA76_0==83||(LA76_0 >= 85 && LA76_0 <= 86)||(LA76_0 >= 88 && LA76_0 <= 89)||LA76_0==93||(LA76_0 >= 95 && LA76_0 <= 97)||LA76_0==100||(LA76_0 >= 102 && LA76_0 <= 108)||(LA76_0 >= 111 && LA76_0 <= 112)||(LA76_0 >= 114 && LA76_0 <= 115)||(LA76_0 >= 118 && LA76_0 <= 122)) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:343:27: declaration
            	    {
            	    pushFollow(FOLLOW_declaration_in_compound_statement1797);
            	    declaration289=declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration289.getTree());

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:343:41: ( statement_list )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==CHARACTER_LITERAL||LA77_0==DECIMAL_LITERAL||LA77_0==FLOATING_POINT_LITERAL||LA77_0==HEX_LITERAL||LA77_0==IDENTIFIER||LA77_0==OCTAL_LITERAL||LA77_0==STRING_LITERAL||LA77_0==25||LA77_0==31||LA77_0==33||LA77_0==35||LA77_0==38||(LA77_0 >= 41 && LA77_0 <= 42)||LA77_0==50||LA77_0==64||LA77_0==72||LA77_0==74||LA77_0==78||LA77_0==84||LA77_0==87||(LA77_0 >= 90 && LA77_0 <= 92)||(LA77_0 >= 98 && LA77_0 <= 99)||LA77_0==101||(LA77_0 >= 109 && LA77_0 <= 110)||LA77_0==113||LA77_0==117||(LA77_0 >= 123 && LA77_0 <= 124)||LA77_0==129) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:343:41: statement_list
                    {
                    pushFollow(FOLLOW_statement_list_in_compound_statement1801);
                    statement_list290=statement_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_list290.getTree());

                    }
                    break;

            }


            char_literal291=(Token)match(input,128,FOLLOW_128_in_compound_statement1804); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal291_tree = 
            (Object)adaptor.create(char_literal291)
            ;
            adaptor.addChild(root_0, char_literal291_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "compound_statement"


    public static class selection_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "selection_statement"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:345:1: selection_statement : ( 'if' '(' expression ')' statement ( 'else' statement )? | 'switch' '(' expression ')' statement );
    public final ObjectiveCParser.selection_statement_return selection_statement() throws RecognitionException {
        ObjectiveCParser.selection_statement_return retval = new ObjectiveCParser.selection_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal292=null;
        Token char_literal293=null;
        Token char_literal295=null;
        Token string_literal297=null;
        Token string_literal299=null;
        Token char_literal300=null;
        Token char_literal302=null;
        ObjectiveCParser.expression_return expression294 =null;

        ObjectiveCParser.statement_return statement296 =null;

        ObjectiveCParser.statement_return statement298 =null;

        ObjectiveCParser.expression_return expression301 =null;

        ObjectiveCParser.statement_return statement303 =null;


        Object string_literal292_tree=null;
        Object char_literal293_tree=null;
        Object char_literal295_tree=null;
        Object string_literal297_tree=null;
        Object string_literal299_tree=null;
        Object char_literal300_tree=null;
        Object char_literal302_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:346:3: ( 'if' '(' expression ')' statement ( 'else' statement )? | 'switch' '(' expression ')' statement )
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==101) ) {
                alt79=1;
            }
            else if ( (LA79_0==117) ) {
                alt79=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;

            }
            switch (alt79) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:346:5: 'if' '(' expression ')' statement ( 'else' statement )?
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal292=(Token)match(input,101,FOLLOW_101_in_selection_statement1815); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal292_tree = 
                    (Object)adaptor.create(string_literal292)
                    ;
                    adaptor.addChild(root_0, string_literal292_tree);
                    }

                    char_literal293=(Token)match(input,33,FOLLOW_33_in_selection_statement1817); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal293_tree = 
                    (Object)adaptor.create(char_literal293)
                    ;
                    adaptor.addChild(root_0, char_literal293_tree);
                    }

                    pushFollow(FOLLOW_expression_in_selection_statement1819);
                    expression294=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression294.getTree());

                    char_literal295=(Token)match(input,34,FOLLOW_34_in_selection_statement1821); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal295_tree = 
                    (Object)adaptor.create(char_literal295)
                    ;
                    adaptor.addChild(root_0, char_literal295_tree);
                    }

                    pushFollow(FOLLOW_statement_in_selection_statement1823);
                    statement296=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement296.getTree());

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:346:39: ( 'else' statement )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==94) ) {
                        int LA78_1 = input.LA(2);

                        if ( (synpred140_ObjectiveC()) ) {
                            alt78=1;
                        }
                    }
                    switch (alt78) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:346:40: 'else' statement
                            {
                            string_literal297=(Token)match(input,94,FOLLOW_94_in_selection_statement1826); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal297_tree = 
                            (Object)adaptor.create(string_literal297)
                            ;
                            adaptor.addChild(root_0, string_literal297_tree);
                            }

                            pushFollow(FOLLOW_statement_in_selection_statement1828);
                            statement298=statement();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement298.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:347:5: 'switch' '(' expression ')' statement
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal299=(Token)match(input,117,FOLLOW_117_in_selection_statement1836); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal299_tree = 
                    (Object)adaptor.create(string_literal299)
                    ;
                    adaptor.addChild(root_0, string_literal299_tree);
                    }

                    char_literal300=(Token)match(input,33,FOLLOW_33_in_selection_statement1838); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal300_tree = 
                    (Object)adaptor.create(char_literal300)
                    ;
                    adaptor.addChild(root_0, char_literal300_tree);
                    }

                    pushFollow(FOLLOW_expression_in_selection_statement1840);
                    expression301=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression301.getTree());

                    char_literal302=(Token)match(input,34,FOLLOW_34_in_selection_statement1842); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal302_tree = 
                    (Object)adaptor.create(char_literal302)
                    ;
                    adaptor.addChild(root_0, char_literal302_tree);
                    }

                    pushFollow(FOLLOW_statement_in_selection_statement1844);
                    statement303=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement303.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "selection_statement"


    public static class iteration_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "iteration_statement"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:349:1: iteration_statement : ( 'while' '(' expression ')' statement | 'do' statement 'while' '(' expression ')' ';' | 'for' '(' ( expression )? ';' ( expression )? ';' ( expression )? ')' statement );
    public final ObjectiveCParser.iteration_statement_return iteration_statement() throws RecognitionException {
        ObjectiveCParser.iteration_statement_return retval = new ObjectiveCParser.iteration_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal304=null;
        Token char_literal305=null;
        Token char_literal307=null;
        Token string_literal309=null;
        Token string_literal311=null;
        Token char_literal312=null;
        Token char_literal314=null;
        Token char_literal315=null;
        Token string_literal316=null;
        Token char_literal317=null;
        Token char_literal319=null;
        Token char_literal321=null;
        Token char_literal323=null;
        ObjectiveCParser.expression_return expression306 =null;

        ObjectiveCParser.statement_return statement308 =null;

        ObjectiveCParser.statement_return statement310 =null;

        ObjectiveCParser.expression_return expression313 =null;

        ObjectiveCParser.expression_return expression318 =null;

        ObjectiveCParser.expression_return expression320 =null;

        ObjectiveCParser.expression_return expression322 =null;

        ObjectiveCParser.statement_return statement324 =null;


        Object string_literal304_tree=null;
        Object char_literal305_tree=null;
        Object char_literal307_tree=null;
        Object string_literal309_tree=null;
        Object string_literal311_tree=null;
        Object char_literal312_tree=null;
        Object char_literal314_tree=null;
        Object char_literal315_tree=null;
        Object string_literal316_tree=null;
        Object char_literal317_tree=null;
        Object char_literal319_tree=null;
        Object char_literal321_tree=null;
        Object char_literal323_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:350:3: ( 'while' '(' expression ')' statement | 'do' statement 'while' '(' expression ')' ';' | 'for' '(' ( expression )? ';' ( expression )? ';' ( expression )? ')' statement )
            int alt83=3;
            switch ( input.LA(1) ) {
            case 123:
                {
                alt83=1;
                }
                break;
            case 92:
                {
                alt83=2;
                }
                break;
            case 98:
                {
                alt83=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;

            }

            switch (alt83) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:350:5: 'while' '(' expression ')' statement
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal304=(Token)match(input,123,FOLLOW_123_in_iteration_statement1855); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal304_tree = 
                    (Object)adaptor.create(string_literal304)
                    ;
                    adaptor.addChild(root_0, string_literal304_tree);
                    }

                    char_literal305=(Token)match(input,33,FOLLOW_33_in_iteration_statement1857); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal305_tree = 
                    (Object)adaptor.create(char_literal305)
                    ;
                    adaptor.addChild(root_0, char_literal305_tree);
                    }

                    pushFollow(FOLLOW_expression_in_iteration_statement1859);
                    expression306=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression306.getTree());

                    char_literal307=(Token)match(input,34,FOLLOW_34_in_iteration_statement1861); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal307_tree = 
                    (Object)adaptor.create(char_literal307)
                    ;
                    adaptor.addChild(root_0, char_literal307_tree);
                    }

                    pushFollow(FOLLOW_statement_in_iteration_statement1863);
                    statement308=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement308.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:351:5: 'do' statement 'while' '(' expression ')' ';'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal309=(Token)match(input,92,FOLLOW_92_in_iteration_statement1869); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal309_tree = 
                    (Object)adaptor.create(string_literal309)
                    ;
                    adaptor.addChild(root_0, string_literal309_tree);
                    }

                    pushFollow(FOLLOW_statement_in_iteration_statement1871);
                    statement310=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement310.getTree());

                    string_literal311=(Token)match(input,123,FOLLOW_123_in_iteration_statement1873); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal311_tree = 
                    (Object)adaptor.create(string_literal311)
                    ;
                    adaptor.addChild(root_0, string_literal311_tree);
                    }

                    char_literal312=(Token)match(input,33,FOLLOW_33_in_iteration_statement1875); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal312_tree = 
                    (Object)adaptor.create(char_literal312)
                    ;
                    adaptor.addChild(root_0, char_literal312_tree);
                    }

                    pushFollow(FOLLOW_expression_in_iteration_statement1877);
                    expression313=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression313.getTree());

                    char_literal314=(Token)match(input,34,FOLLOW_34_in_iteration_statement1879); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal314_tree = 
                    (Object)adaptor.create(char_literal314)
                    ;
                    adaptor.addChild(root_0, char_literal314_tree);
                    }

                    char_literal315=(Token)match(input,50,FOLLOW_50_in_iteration_statement1881); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal315_tree = 
                    (Object)adaptor.create(char_literal315)
                    ;
                    adaptor.addChild(root_0, char_literal315_tree);
                    }

                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:352:5: 'for' '(' ( expression )? ';' ( expression )? ';' ( expression )? ')' statement
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal316=(Token)match(input,98,FOLLOW_98_in_iteration_statement1887); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal316_tree = 
                    (Object)adaptor.create(string_literal316)
                    ;
                    adaptor.addChild(root_0, string_literal316_tree);
                    }

                    char_literal317=(Token)match(input,33,FOLLOW_33_in_iteration_statement1889); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal317_tree = 
                    (Object)adaptor.create(char_literal317)
                    ;
                    adaptor.addChild(root_0, char_literal317_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:352:15: ( expression )?
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( (LA80_0==CHARACTER_LITERAL||LA80_0==DECIMAL_LITERAL||LA80_0==FLOATING_POINT_LITERAL||LA80_0==HEX_LITERAL||LA80_0==IDENTIFIER||LA80_0==OCTAL_LITERAL||LA80_0==STRING_LITERAL||LA80_0==25||LA80_0==31||LA80_0==33||LA80_0==35||LA80_0==38||(LA80_0 >= 41 && LA80_0 <= 42)||LA80_0==64||LA80_0==72||LA80_0==74||LA80_0==78||LA80_0==110||LA80_0==113||LA80_0==129) ) {
                        alt80=1;
                    }
                    switch (alt80) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:352:15: expression
                            {
                            pushFollow(FOLLOW_expression_in_iteration_statement1891);
                            expression318=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression318.getTree());

                            }
                            break;

                    }


                    char_literal319=(Token)match(input,50,FOLLOW_50_in_iteration_statement1894); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal319_tree = 
                    (Object)adaptor.create(char_literal319)
                    ;
                    adaptor.addChild(root_0, char_literal319_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:352:31: ( expression )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==CHARACTER_LITERAL||LA81_0==DECIMAL_LITERAL||LA81_0==FLOATING_POINT_LITERAL||LA81_0==HEX_LITERAL||LA81_0==IDENTIFIER||LA81_0==OCTAL_LITERAL||LA81_0==STRING_LITERAL||LA81_0==25||LA81_0==31||LA81_0==33||LA81_0==35||LA81_0==38||(LA81_0 >= 41 && LA81_0 <= 42)||LA81_0==64||LA81_0==72||LA81_0==74||LA81_0==78||LA81_0==110||LA81_0==113||LA81_0==129) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:352:31: expression
                            {
                            pushFollow(FOLLOW_expression_in_iteration_statement1896);
                            expression320=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression320.getTree());

                            }
                            break;

                    }


                    char_literal321=(Token)match(input,50,FOLLOW_50_in_iteration_statement1899); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal321_tree = 
                    (Object)adaptor.create(char_literal321)
                    ;
                    adaptor.addChild(root_0, char_literal321_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:352:47: ( expression )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==CHARACTER_LITERAL||LA82_0==DECIMAL_LITERAL||LA82_0==FLOATING_POINT_LITERAL||LA82_0==HEX_LITERAL||LA82_0==IDENTIFIER||LA82_0==OCTAL_LITERAL||LA82_0==STRING_LITERAL||LA82_0==25||LA82_0==31||LA82_0==33||LA82_0==35||LA82_0==38||(LA82_0 >= 41 && LA82_0 <= 42)||LA82_0==64||LA82_0==72||LA82_0==74||LA82_0==78||LA82_0==110||LA82_0==113||LA82_0==129) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:352:47: expression
                            {
                            pushFollow(FOLLOW_expression_in_iteration_statement1901);
                            expression322=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression322.getTree());

                            }
                            break;

                    }


                    char_literal323=(Token)match(input,34,FOLLOW_34_in_iteration_statement1904); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal323_tree = 
                    (Object)adaptor.create(char_literal323)
                    ;
                    adaptor.addChild(root_0, char_literal323_tree);
                    }

                    pushFollow(FOLLOW_statement_in_iteration_statement1906);
                    statement324=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement324.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "iteration_statement"


    public static class jump_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "jump_statement"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:354:1: jump_statement : ( 'goto' identifier ';' | 'continue' ';' | 'break' ';' | 'return' ( expression )? ';' );
    public final ObjectiveCParser.jump_statement_return jump_statement() throws RecognitionException {
        ObjectiveCParser.jump_statement_return retval = new ObjectiveCParser.jump_statement_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal325=null;
        Token char_literal327=null;
        Token string_literal328=null;
        Token char_literal329=null;
        Token string_literal330=null;
        Token char_literal331=null;
        Token string_literal332=null;
        Token char_literal334=null;
        ObjectiveCParser.identifier_return identifier326 =null;

        ObjectiveCParser.expression_return expression333 =null;


        Object string_literal325_tree=null;
        Object char_literal327_tree=null;
        Object string_literal328_tree=null;
        Object char_literal329_tree=null;
        Object string_literal330_tree=null;
        Object char_literal331_tree=null;
        Object string_literal332_tree=null;
        Object char_literal334_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:355:3: ( 'goto' identifier ';' | 'continue' ';' | 'break' ';' | 'return' ( expression )? ';' )
            int alt85=4;
            switch ( input.LA(1) ) {
            case 99:
                {
                alt85=1;
                }
                break;
            case 90:
                {
                alt85=2;
                }
                break;
            case 84:
                {
                alt85=3;
                }
                break;
            case 109:
                {
                alt85=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;

            }

            switch (alt85) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:355:5: 'goto' identifier ';'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal325=(Token)match(input,99,FOLLOW_99_in_jump_statement1917); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal325_tree = 
                    (Object)adaptor.create(string_literal325)
                    ;
                    adaptor.addChild(root_0, string_literal325_tree);
                    }

                    pushFollow(FOLLOW_identifier_in_jump_statement1919);
                    identifier326=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier326.getTree());

                    char_literal327=(Token)match(input,50,FOLLOW_50_in_jump_statement1921); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal327_tree = 
                    (Object)adaptor.create(char_literal327)
                    ;
                    adaptor.addChild(root_0, char_literal327_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:356:5: 'continue' ';'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal328=(Token)match(input,90,FOLLOW_90_in_jump_statement1927); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal328_tree = 
                    (Object)adaptor.create(string_literal328)
                    ;
                    adaptor.addChild(root_0, string_literal328_tree);
                    }

                    char_literal329=(Token)match(input,50,FOLLOW_50_in_jump_statement1929); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal329_tree = 
                    (Object)adaptor.create(char_literal329)
                    ;
                    adaptor.addChild(root_0, char_literal329_tree);
                    }

                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:357:5: 'break' ';'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal330=(Token)match(input,84,FOLLOW_84_in_jump_statement1935); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal330_tree = 
                    (Object)adaptor.create(string_literal330)
                    ;
                    adaptor.addChild(root_0, string_literal330_tree);
                    }

                    char_literal331=(Token)match(input,50,FOLLOW_50_in_jump_statement1937); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal331_tree = 
                    (Object)adaptor.create(char_literal331)
                    ;
                    adaptor.addChild(root_0, char_literal331_tree);
                    }

                    }
                    break;
                case 4 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:358:5: 'return' ( expression )? ';'
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal332=(Token)match(input,109,FOLLOW_109_in_jump_statement1943); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal332_tree = 
                    (Object)adaptor.create(string_literal332)
                    ;
                    adaptor.addChild(root_0, string_literal332_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:358:14: ( expression )?
                    int alt84=2;
                    int LA84_0 = input.LA(1);

                    if ( (LA84_0==CHARACTER_LITERAL||LA84_0==DECIMAL_LITERAL||LA84_0==FLOATING_POINT_LITERAL||LA84_0==HEX_LITERAL||LA84_0==IDENTIFIER||LA84_0==OCTAL_LITERAL||LA84_0==STRING_LITERAL||LA84_0==25||LA84_0==31||LA84_0==33||LA84_0==35||LA84_0==38||(LA84_0 >= 41 && LA84_0 <= 42)||LA84_0==64||LA84_0==72||LA84_0==74||LA84_0==78||LA84_0==110||LA84_0==113||LA84_0==129) ) {
                        alt84=1;
                    }
                    switch (alt84) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:358:14: expression
                            {
                            pushFollow(FOLLOW_expression_in_jump_statement1945);
                            expression333=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression333.getTree());

                            }
                            break;

                    }


                    char_literal334=(Token)match(input,50,FOLLOW_50_in_jump_statement1948); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal334_tree = 
                    (Object)adaptor.create(char_literal334)
                    ;
                    adaptor.addChild(root_0, char_literal334_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "jump_statement"


    public static class expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:361:1: expression : assignment_expression ( ',' assignment_expression )* ;
    public final ObjectiveCParser.expression_return expression() throws RecognitionException {
        ObjectiveCParser.expression_return retval = new ObjectiveCParser.expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal336=null;
        ObjectiveCParser.assignment_expression_return assignment_expression335 =null;

        ObjectiveCParser.assignment_expression_return assignment_expression337 =null;


        Object char_literal336_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:361:12: ( assignment_expression ( ',' assignment_expression )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:361:14: assignment_expression ( ',' assignment_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_assignment_expression_in_expression1960);
            assignment_expression335=assignment_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment_expression335.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:361:36: ( ',' assignment_expression )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==40) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:361:37: ',' assignment_expression
            	    {
            	    char_literal336=(Token)match(input,40,FOLLOW_40_in_expression1963); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal336_tree = 
            	    (Object)adaptor.create(char_literal336)
            	    ;
            	    adaptor.addChild(root_0, char_literal336_tree);
            	    }

            	    pushFollow(FOLLOW_assignment_expression_in_expression1965);
            	    assignment_expression337=assignment_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment_expression337.getTree());

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "expression"


    public static class assignment_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "assignment_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:363:1: assignment_expression : conditional_expression ( assignment_operator assignment_expression )? ;
    public final ObjectiveCParser.assignment_expression_return assignment_expression() throws RecognitionException {
        ObjectiveCParser.assignment_expression_return retval = new ObjectiveCParser.assignment_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.conditional_expression_return conditional_expression338 =null;

        ObjectiveCParser.assignment_operator_return assignment_operator339 =null;

        ObjectiveCParser.assignment_expression_return assignment_expression340 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:363:23: ( conditional_expression ( assignment_operator assignment_expression )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:363:25: conditional_expression ( assignment_operator assignment_expression )?
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_conditional_expression_in_assignment_expression1976);
            conditional_expression338=conditional_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_expression338.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:364:3: ( assignment_operator assignment_expression )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==29||LA87_0==32||LA87_0==36||LA87_0==39||LA87_0==43||LA87_0==48||LA87_0==53||LA87_0==55||LA87_0==60||LA87_0==82||LA87_0==126) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:364:5: assignment_operator assignment_expression
                    {
                    pushFollow(FOLLOW_assignment_operator_in_assignment_expression1983);
                    assignment_operator339=assignment_operator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment_operator339.getTree());

                    pushFollow(FOLLOW_assignment_expression_in_assignment_expression1985);
                    assignment_expression340=assignment_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment_expression340.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "assignment_expression"


    public static class assignment_operator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "assignment_operator"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:365:1: assignment_operator : ( '=' | '*=' | '/=' | '%=' | '+=' | '-=' | '<<=' | '>>=' | '&=' | '^=' | '|=' );
    public final ObjectiveCParser.assignment_operator_return assignment_operator() throws RecognitionException {
        ObjectiveCParser.assignment_operator_return retval = new ObjectiveCParser.assignment_operator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set341=null;

        Object set341_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:365:20: ( '=' | '*=' | '/=' | '%=' | '+=' | '-=' | '<<=' | '>>=' | '&=' | '^=' | '|=' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:
            {
            root_0 = (Object)adaptor.nil();


            set341=(Token)input.LT(1);

            if ( input.LA(1)==29||input.LA(1)==32||input.LA(1)==36||input.LA(1)==39||input.LA(1)==43||input.LA(1)==48||input.LA(1)==53||input.LA(1)==55||input.LA(1)==60||input.LA(1)==82||input.LA(1)==126 ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set341)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "assignment_operator"


    public static class conditional_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "conditional_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:368:1: conditional_expression : logical_or_expression ( '?' logical_or_expression ':' logical_or_expression )? ;
    public final ObjectiveCParser.conditional_expression_return conditional_expression() throws RecognitionException {
        ObjectiveCParser.conditional_expression_return retval = new ObjectiveCParser.conditional_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal343=null;
        Token char_literal345=null;
        ObjectiveCParser.logical_or_expression_return logical_or_expression342 =null;

        ObjectiveCParser.logical_or_expression_return logical_or_expression344 =null;

        ObjectiveCParser.logical_or_expression_return logical_or_expression346 =null;


        Object char_literal343_tree=null;
        Object char_literal345_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:368:24: ( logical_or_expression ( '?' logical_or_expression ':' logical_or_expression )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:368:26: logical_or_expression ( '?' logical_or_expression ':' logical_or_expression )?
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_logical_or_expression_in_conditional_expression2045);
            logical_or_expression342=logical_or_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, logical_or_expression342.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:369:3: ( '?' logical_or_expression ':' logical_or_expression )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==61) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:369:4: '?' logical_or_expression ':' logical_or_expression
                    {
                    char_literal343=(Token)match(input,61,FOLLOW_61_in_conditional_expression2051); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal343_tree = 
                    (Object)adaptor.create(char_literal343)
                    ;
                    adaptor.addChild(root_0, char_literal343_tree);
                    }

                    pushFollow(FOLLOW_logical_or_expression_in_conditional_expression2053);
                    logical_or_expression344=logical_or_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, logical_or_expression344.getTree());

                    char_literal345=(Token)match(input,49,FOLLOW_49_in_conditional_expression2055); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal345_tree = 
                    (Object)adaptor.create(char_literal345)
                    ;
                    adaptor.addChild(root_0, char_literal345_tree);
                    }

                    pushFollow(FOLLOW_logical_or_expression_in_conditional_expression2057);
                    logical_or_expression346=logical_or_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, logical_or_expression346.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "conditional_expression"


    public static class constant_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constant_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:371:1: constant_expression : conditional_expression ;
    public final ObjectiveCParser.constant_expression_return constant_expression() throws RecognitionException {
        ObjectiveCParser.constant_expression_return retval = new ObjectiveCParser.constant_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        ObjectiveCParser.conditional_expression_return conditional_expression347 =null;



        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:371:21: ( conditional_expression )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:371:23: conditional_expression
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_conditional_expression_in_constant_expression2068);
            conditional_expression347=conditional_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_expression347.getTree());

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constant_expression"


    public static class logical_or_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "logical_or_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:373:1: logical_or_expression : logical_and_expression ( '||' logical_and_expression )* ;
    public final ObjectiveCParser.logical_or_expression_return logical_or_expression() throws RecognitionException {
        ObjectiveCParser.logical_or_expression_return retval = new ObjectiveCParser.logical_or_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal349=null;
        ObjectiveCParser.logical_and_expression_return logical_and_expression348 =null;

        ObjectiveCParser.logical_and_expression_return logical_and_expression350 =null;


        Object string_literal349_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:373:23: ( logical_and_expression ( '||' logical_and_expression )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:373:25: logical_and_expression ( '||' logical_and_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_logical_and_expression_in_logical_or_expression2077);
            logical_and_expression348=logical_and_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, logical_and_expression348.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:374:3: ( '||' logical_and_expression )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==127) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:374:4: '||' logical_and_expression
            	    {
            	    string_literal349=(Token)match(input,127,FOLLOW_127_in_logical_or_expression2083); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal349_tree = 
            	    (Object)adaptor.create(string_literal349)
            	    ;
            	    adaptor.addChild(root_0, string_literal349_tree);
            	    }

            	    pushFollow(FOLLOW_logical_and_expression_in_logical_or_expression2085);
            	    logical_and_expression350=logical_and_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, logical_and_expression350.getTree());

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "logical_or_expression"


    public static class logical_and_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "logical_and_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:376:1: logical_and_expression : inclusive_or_expression ( '&&' inclusive_or_expression )* ;
    public final ObjectiveCParser.logical_and_expression_return logical_and_expression() throws RecognitionException {
        ObjectiveCParser.logical_and_expression_return retval = new ObjectiveCParser.logical_and_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal352=null;
        ObjectiveCParser.inclusive_or_expression_return inclusive_or_expression351 =null;

        ObjectiveCParser.inclusive_or_expression_return inclusive_or_expression353 =null;


        Object string_literal352_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:376:24: ( inclusive_or_expression ( '&&' inclusive_or_expression )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:376:26: inclusive_or_expression ( '&&' inclusive_or_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_inclusive_or_expression_in_logical_and_expression2096);
            inclusive_or_expression351=inclusive_or_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, inclusive_or_expression351.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:377:3: ( '&&' inclusive_or_expression )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==30) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:377:4: '&&' inclusive_or_expression
            	    {
            	    string_literal352=(Token)match(input,30,FOLLOW_30_in_logical_and_expression2102); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal352_tree = 
            	    (Object)adaptor.create(string_literal352)
            	    ;
            	    adaptor.addChild(root_0, string_literal352_tree);
            	    }

            	    pushFollow(FOLLOW_inclusive_or_expression_in_logical_and_expression2104);
            	    inclusive_or_expression353=inclusive_or_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, inclusive_or_expression353.getTree());

            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "logical_and_expression"


    public static class inclusive_or_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "inclusive_or_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:379:1: inclusive_or_expression : exclusive_or_expression ( '|' exclusive_or_expression )* ;
    public final ObjectiveCParser.inclusive_or_expression_return inclusive_or_expression() throws RecognitionException {
        ObjectiveCParser.inclusive_or_expression_return retval = new ObjectiveCParser.inclusive_or_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal355=null;
        ObjectiveCParser.exclusive_or_expression_return exclusive_or_expression354 =null;

        ObjectiveCParser.exclusive_or_expression_return exclusive_or_expression356 =null;


        Object char_literal355_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:379:25: ( exclusive_or_expression ( '|' exclusive_or_expression )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:379:27: exclusive_or_expression ( '|' exclusive_or_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression2115);
            exclusive_or_expression354=exclusive_or_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, exclusive_or_expression354.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:380:3: ( '|' exclusive_or_expression )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==125) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:380:4: '|' exclusive_or_expression
            	    {
            	    char_literal355=(Token)match(input,125,FOLLOW_125_in_inclusive_or_expression2121); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal355_tree = 
            	    (Object)adaptor.create(char_literal355)
            	    ;
            	    adaptor.addChild(root_0, char_literal355_tree);
            	    }

            	    pushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression2123);
            	    exclusive_or_expression356=exclusive_or_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exclusive_or_expression356.getTree());

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "inclusive_or_expression"


    public static class exclusive_or_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "exclusive_or_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:382:1: exclusive_or_expression : and_expression ( '^' and_expression )* ;
    public final ObjectiveCParser.exclusive_or_expression_return exclusive_or_expression() throws RecognitionException {
        ObjectiveCParser.exclusive_or_expression_return retval = new ObjectiveCParser.exclusive_or_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal358=null;
        ObjectiveCParser.and_expression_return and_expression357 =null;

        ObjectiveCParser.and_expression_return and_expression359 =null;


        Object char_literal358_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:382:25: ( and_expression ( '^' and_expression )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:382:27: and_expression ( '^' and_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_and_expression_in_exclusive_or_expression2134);
            and_expression357=and_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, and_expression357.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:382:42: ( '^' and_expression )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==81) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:382:43: '^' and_expression
            	    {
            	    char_literal358=(Token)match(input,81,FOLLOW_81_in_exclusive_or_expression2137); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal358_tree = 
            	    (Object)adaptor.create(char_literal358)
            	    ;
            	    adaptor.addChild(root_0, char_literal358_tree);
            	    }

            	    pushFollow(FOLLOW_and_expression_in_exclusive_or_expression2139);
            	    and_expression359=and_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, and_expression359.getTree());

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "exclusive_or_expression"


    public static class and_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "and_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:384:1: and_expression : equality_expression ( '&' equality_expression )* ;
    public final ObjectiveCParser.and_expression_return and_expression() throws RecognitionException {
        ObjectiveCParser.and_expression_return retval = new ObjectiveCParser.and_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal361=null;
        ObjectiveCParser.equality_expression_return equality_expression360 =null;

        ObjectiveCParser.equality_expression_return equality_expression362 =null;


        Object char_literal361_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:384:16: ( equality_expression ( '&' equality_expression )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:384:18: equality_expression ( '&' equality_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_equality_expression_in_and_expression2150);
            equality_expression360=equality_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, equality_expression360.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:384:38: ( '&' equality_expression )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==31) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:384:39: '&' equality_expression
            	    {
            	    char_literal361=(Token)match(input,31,FOLLOW_31_in_and_expression2153); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal361_tree = 
            	    (Object)adaptor.create(char_literal361)
            	    ;
            	    adaptor.addChild(root_0, char_literal361_tree);
            	    }

            	    pushFollow(FOLLOW_equality_expression_in_and_expression2155);
            	    equality_expression362=equality_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, equality_expression362.getTree());

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "and_expression"


    public static class equality_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "equality_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:386:1: equality_expression : relational_expression ( ( '!=' | '==' ) relational_expression )* ;
    public final ObjectiveCParser.equality_expression_return equality_expression() throws RecognitionException {
        ObjectiveCParser.equality_expression_return retval = new ObjectiveCParser.equality_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set364=null;
        ObjectiveCParser.relational_expression_return relational_expression363 =null;

        ObjectiveCParser.relational_expression_return relational_expression365 =null;


        Object set364_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:386:21: ( relational_expression ( ( '!=' | '==' ) relational_expression )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:386:23: relational_expression ( ( '!=' | '==' ) relational_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_relational_expression_in_equality_expression2166);
            relational_expression363=relational_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression363.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:387:3: ( ( '!=' | '==' ) relational_expression )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==26||LA94_0==56) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:387:4: ( '!=' | '==' ) relational_expression
            	    {
            	    set364=(Token)input.LT(1);

            	    if ( input.LA(1)==26||input.LA(1)==56 ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, 
            	        (Object)adaptor.create(set364)
            	        );
            	        state.errorRecovery=false;
            	        state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }


            	    pushFollow(FOLLOW_relational_expression_in_equality_expression2180);
            	    relational_expression365=relational_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression365.getTree());

            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "equality_expression"


    public static class relational_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "relational_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:389:1: relational_expression : shift_expression ( ( '<' | '>' | '<=' | '>=' ) shift_expression )* ;
    public final ObjectiveCParser.relational_expression_return relational_expression() throws RecognitionException {
        ObjectiveCParser.relational_expression_return retval = new ObjectiveCParser.relational_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set367=null;
        ObjectiveCParser.shift_expression_return shift_expression366 =null;

        ObjectiveCParser.shift_expression_return shift_expression368 =null;


        Object set367_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:389:23: ( shift_expression ( ( '<' | '>' | '<=' | '>=' ) shift_expression )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:389:25: shift_expression ( ( '<' | '>' | '<=' | '>=' ) shift_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_shift_expression_in_relational_expression2191);
            shift_expression366=shift_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression366.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:390:2: ( ( '<' | '>' | '<=' | '>=' ) shift_expression )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==51||LA95_0==54||(LA95_0 >= 57 && LA95_0 <= 58)) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:390:3: ( '<' | '>' | '<=' | '>=' ) shift_expression
            	    {
            	    set367=(Token)input.LT(1);

            	    if ( input.LA(1)==51||input.LA(1)==54||(input.LA(1) >= 57 && input.LA(1) <= 58) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, 
            	        (Object)adaptor.create(set367)
            	        );
            	        state.errorRecovery=false;
            	        state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }


            	    pushFollow(FOLLOW_shift_expression_in_relational_expression2211);
            	    shift_expression368=shift_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression368.getTree());

            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "relational_expression"


    public static class shift_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "shift_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:392:1: shift_expression : additive_expression ( ( '<<' | '>>' ) additive_expression )* ;
    public final ObjectiveCParser.shift_expression_return shift_expression() throws RecognitionException {
        ObjectiveCParser.shift_expression_return retval = new ObjectiveCParser.shift_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set370=null;
        ObjectiveCParser.additive_expression_return additive_expression369 =null;

        ObjectiveCParser.additive_expression_return additive_expression371 =null;


        Object set370_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:392:18: ( additive_expression ( ( '<<' | '>>' ) additive_expression )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:392:20: additive_expression ( ( '<<' | '>>' ) additive_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_additive_expression_in_shift_expression2222);
            additive_expression369=additive_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression369.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:392:40: ( ( '<<' | '>>' ) additive_expression )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( (LA96_0==52||LA96_0==59) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:392:41: ( '<<' | '>>' ) additive_expression
            	    {
            	    set370=(Token)input.LT(1);

            	    if ( input.LA(1)==52||input.LA(1)==59 ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, 
            	        (Object)adaptor.create(set370)
            	        );
            	        state.errorRecovery=false;
            	        state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }


            	    pushFollow(FOLLOW_additive_expression_in_shift_expression2233);
            	    additive_expression371=additive_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression371.getTree());

            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "shift_expression"


    public static class additive_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "additive_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:394:1: additive_expression : multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* ;
    public final ObjectiveCParser.additive_expression_return additive_expression() throws RecognitionException {
        ObjectiveCParser.additive_expression_return retval = new ObjectiveCParser.additive_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set373=null;
        ObjectiveCParser.multiplicative_expression_return multiplicative_expression372 =null;

        ObjectiveCParser.multiplicative_expression_return multiplicative_expression374 =null;


        Object set373_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:394:21: ( multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:394:23: multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_multiplicative_expression_in_additive_expression2244);
            multiplicative_expression372=multiplicative_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression372.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:395:3: ( ( '+' | '-' ) multiplicative_expression )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==37||LA97_0==41) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:395:4: ( '+' | '-' ) multiplicative_expression
            	    {
            	    set373=(Token)input.LT(1);

            	    if ( input.LA(1)==37||input.LA(1)==41 ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, 
            	        (Object)adaptor.create(set373)
            	        );
            	        state.errorRecovery=false;
            	        state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }


            	    pushFollow(FOLLOW_multiplicative_expression_in_additive_expression2257);
            	    multiplicative_expression374=multiplicative_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression374.getTree());

            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "additive_expression"


    public static class multiplicative_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "multiplicative_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:397:1: multiplicative_expression : cast_expression ( ( '*' | '/' | '%' ) cast_expression )* ;
    public final ObjectiveCParser.multiplicative_expression_return multiplicative_expression() throws RecognitionException {
        ObjectiveCParser.multiplicative_expression_return retval = new ObjectiveCParser.multiplicative_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set376=null;
        ObjectiveCParser.cast_expression_return cast_expression375 =null;

        ObjectiveCParser.cast_expression_return cast_expression377 =null;


        Object set376_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:397:27: ( cast_expression ( ( '*' | '/' | '%' ) cast_expression )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:397:29: cast_expression ( ( '*' | '/' | '%' ) cast_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_cast_expression_in_multiplicative_expression2268);
            cast_expression375=cast_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, cast_expression375.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:398:3: ( ( '*' | '/' | '%' ) cast_expression )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==28||LA98_0==35||LA98_0==47) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:398:4: ( '*' | '/' | '%' ) cast_expression
            	    {
            	    set376=(Token)input.LT(1);

            	    if ( input.LA(1)==28||input.LA(1)==35||input.LA(1)==47 ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, 
            	        (Object)adaptor.create(set376)
            	        );
            	        state.errorRecovery=false;
            	        state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }


            	    pushFollow(FOLLOW_cast_expression_in_multiplicative_expression2286);
            	    cast_expression377=cast_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, cast_expression377.getTree());

            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "multiplicative_expression"


    public static class cast_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "cast_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:400:1: cast_expression : ( '(' type_name ')' cast_expression | unary_expression );
    public final ObjectiveCParser.cast_expression_return cast_expression() throws RecognitionException {
        ObjectiveCParser.cast_expression_return retval = new ObjectiveCParser.cast_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal378=null;
        Token char_literal380=null;
        ObjectiveCParser.type_name_return type_name379 =null;

        ObjectiveCParser.cast_expression_return cast_expression381 =null;

        ObjectiveCParser.unary_expression_return unary_expression382 =null;


        Object char_literal378_tree=null;
        Object char_literal380_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:400:17: ( '(' type_name ')' cast_expression | unary_expression )
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==33) ) {
                int LA99_1 = input.LA(2);

                if ( (synpred182_ObjectiveC()) ) {
                    alt99=1;
                }
                else if ( (true) ) {
                    alt99=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 99, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA99_0==CHARACTER_LITERAL||LA99_0==DECIMAL_LITERAL||LA99_0==FLOATING_POINT_LITERAL||LA99_0==HEX_LITERAL||LA99_0==IDENTIFIER||LA99_0==OCTAL_LITERAL||LA99_0==STRING_LITERAL||LA99_0==25||LA99_0==31||LA99_0==35||LA99_0==38||(LA99_0 >= 41 && LA99_0 <= 42)||LA99_0==64||LA99_0==72||LA99_0==74||LA99_0==78||LA99_0==110||LA99_0==113||LA99_0==129) ) {
                alt99=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;

            }
            switch (alt99) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:400:19: '(' type_name ')' cast_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    char_literal378=(Token)match(input,33,FOLLOW_33_in_cast_expression2297); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal378_tree = 
                    (Object)adaptor.create(char_literal378)
                    ;
                    adaptor.addChild(root_0, char_literal378_tree);
                    }

                    pushFollow(FOLLOW_type_name_in_cast_expression2299);
                    type_name379=type_name();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name379.getTree());

                    char_literal380=(Token)match(input,34,FOLLOW_34_in_cast_expression2301); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal380_tree = 
                    (Object)adaptor.create(char_literal380)
                    ;
                    adaptor.addChild(root_0, char_literal380_tree);
                    }

                    pushFollow(FOLLOW_cast_expression_in_cast_expression2303);
                    cast_expression381=cast_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cast_expression381.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:400:55: unary_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_unary_expression_in_cast_expression2307);
                    unary_expression382=unary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression382.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "cast_expression"


    public static class unary_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "unary_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:402:1: unary_expression : ( postfix_expression | '++' unary_expression | '--' unary_expression | unary_operator cast_expression | 'sizeof' ( '(' type_name ')' | unary_expression ) );
    public final ObjectiveCParser.unary_expression_return unary_expression() throws RecognitionException {
        ObjectiveCParser.unary_expression_return retval = new ObjectiveCParser.unary_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal384=null;
        Token string_literal386=null;
        Token string_literal390=null;
        Token char_literal391=null;
        Token char_literal393=null;
        ObjectiveCParser.postfix_expression_return postfix_expression383 =null;

        ObjectiveCParser.unary_expression_return unary_expression385 =null;

        ObjectiveCParser.unary_expression_return unary_expression387 =null;

        ObjectiveCParser.unary_operator_return unary_operator388 =null;

        ObjectiveCParser.cast_expression_return cast_expression389 =null;

        ObjectiveCParser.type_name_return type_name392 =null;

        ObjectiveCParser.unary_expression_return unary_expression394 =null;


        Object string_literal384_tree=null;
        Object string_literal386_tree=null;
        Object string_literal390_tree=null;
        Object char_literal391_tree=null;
        Object char_literal393_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:403:3: ( postfix_expression | '++' unary_expression | '--' unary_expression | unary_operator cast_expression | 'sizeof' ( '(' type_name ')' | unary_expression ) )
            int alt101=5;
            switch ( input.LA(1) ) {
            case CHARACTER_LITERAL:
            case DECIMAL_LITERAL:
            case FLOATING_POINT_LITERAL:
            case HEX_LITERAL:
            case IDENTIFIER:
            case OCTAL_LITERAL:
            case STRING_LITERAL:
            case 33:
            case 64:
            case 72:
            case 74:
            case 78:
            case 110:
                {
                alt101=1;
                }
                break;
            case 38:
                {
                alt101=2;
                }
                break;
            case 42:
                {
                alt101=3;
                }
                break;
            case 25:
            case 31:
            case 35:
            case 41:
            case 129:
                {
                alt101=4;
                }
                break;
            case 113:
                {
                alt101=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 101, 0, input);

                throw nvae;

            }

            switch (alt101) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:403:5: postfix_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_postfix_expression_in_unary_expression2319);
                    postfix_expression383=postfix_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, postfix_expression383.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:404:5: '++' unary_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal384=(Token)match(input,38,FOLLOW_38_in_unary_expression2325); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal384_tree = 
                    (Object)adaptor.create(string_literal384)
                    ;
                    adaptor.addChild(root_0, string_literal384_tree);
                    }

                    pushFollow(FOLLOW_unary_expression_in_unary_expression2327);
                    unary_expression385=unary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression385.getTree());

                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:405:5: '--' unary_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal386=(Token)match(input,42,FOLLOW_42_in_unary_expression2333); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal386_tree = 
                    (Object)adaptor.create(string_literal386)
                    ;
                    adaptor.addChild(root_0, string_literal386_tree);
                    }

                    pushFollow(FOLLOW_unary_expression_in_unary_expression2335);
                    unary_expression387=unary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression387.getTree());

                    }
                    break;
                case 4 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:406:5: unary_operator cast_expression
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_unary_operator_in_unary_expression2341);
                    unary_operator388=unary_operator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_operator388.getTree());

                    pushFollow(FOLLOW_cast_expression_in_unary_expression2343);
                    cast_expression389=cast_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cast_expression389.getTree());

                    }
                    break;
                case 5 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:407:5: 'sizeof' ( '(' type_name ')' | unary_expression )
                    {
                    root_0 = (Object)adaptor.nil();


                    string_literal390=(Token)match(input,113,FOLLOW_113_in_unary_expression2349); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal390_tree = 
                    (Object)adaptor.create(string_literal390)
                    ;
                    adaptor.addChild(root_0, string_literal390_tree);
                    }

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:407:14: ( '(' type_name ')' | unary_expression )
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==33) ) {
                        int LA100_1 = input.LA(2);

                        if ( (synpred187_ObjectiveC()) ) {
                            alt100=1;
                        }
                        else if ( (true) ) {
                            alt100=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 100, 1, input);

                            throw nvae;

                        }
                    }
                    else if ( (LA100_0==CHARACTER_LITERAL||LA100_0==DECIMAL_LITERAL||LA100_0==FLOATING_POINT_LITERAL||LA100_0==HEX_LITERAL||LA100_0==IDENTIFIER||LA100_0==OCTAL_LITERAL||LA100_0==STRING_LITERAL||LA100_0==25||LA100_0==31||LA100_0==35||LA100_0==38||(LA100_0 >= 41 && LA100_0 <= 42)||LA100_0==64||LA100_0==72||LA100_0==74||LA100_0==78||LA100_0==110||LA100_0==113||LA100_0==129) ) {
                        alt100=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 100, 0, input);

                        throw nvae;

                    }
                    switch (alt100) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:407:15: '(' type_name ')'
                            {
                            char_literal391=(Token)match(input,33,FOLLOW_33_in_unary_expression2352); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal391_tree = 
                            (Object)adaptor.create(char_literal391)
                            ;
                            adaptor.addChild(root_0, char_literal391_tree);
                            }

                            pushFollow(FOLLOW_type_name_in_unary_expression2354);
                            type_name392=type_name();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name392.getTree());

                            char_literal393=(Token)match(input,34,FOLLOW_34_in_unary_expression2356); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal393_tree = 
                            (Object)adaptor.create(char_literal393)
                            ;
                            adaptor.addChild(root_0, char_literal393_tree);
                            }

                            }
                            break;
                        case 2 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:407:35: unary_expression
                            {
                            pushFollow(FOLLOW_unary_expression_in_unary_expression2360);
                            unary_expression394=unary_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression394.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unary_expression"


    public static class unary_operator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "unary_operator"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:409:1: unary_operator : ( '&' | '*' | '-' | '~' | '!' );
    public final ObjectiveCParser.unary_operator_return unary_operator() throws RecognitionException {
        ObjectiveCParser.unary_operator_return retval = new ObjectiveCParser.unary_operator_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set395=null;

        Object set395_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:409:16: ( '&' | '*' | '-' | '~' | '!' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:
            {
            root_0 = (Object)adaptor.nil();


            set395=(Token)input.LT(1);

            if ( input.LA(1)==25||input.LA(1)==31||input.LA(1)==35||input.LA(1)==41||input.LA(1)==129 ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set395)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unary_operator"


    public static class postfix_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "postfix_expression"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:411:1: postfix_expression : primary_expression ( '[' expression ']' | '(' ( argument_expression_list )? ')' | '.' identifier | '->' identifier | '++' | '--' )* ;
    public final ObjectiveCParser.postfix_expression_return postfix_expression() throws RecognitionException {
        ObjectiveCParser.postfix_expression_return retval = new ObjectiveCParser.postfix_expression_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal397=null;
        Token char_literal399=null;
        Token char_literal400=null;
        Token char_literal402=null;
        Token char_literal403=null;
        Token string_literal405=null;
        Token string_literal407=null;
        Token string_literal408=null;
        ObjectiveCParser.primary_expression_return primary_expression396 =null;

        ObjectiveCParser.expression_return expression398 =null;

        ObjectiveCParser.argument_expression_list_return argument_expression_list401 =null;

        ObjectiveCParser.identifier_return identifier404 =null;

        ObjectiveCParser.identifier_return identifier406 =null;


        Object char_literal397_tree=null;
        Object char_literal399_tree=null;
        Object char_literal400_tree=null;
        Object char_literal402_tree=null;
        Object char_literal403_tree=null;
        Object string_literal405_tree=null;
        Object string_literal407_tree=null;
        Object string_literal408_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:411:20: ( primary_expression ( '[' expression ']' | '(' ( argument_expression_list )? ')' | '.' identifier | '->' identifier | '++' | '--' )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:411:22: primary_expression ( '[' expression ']' | '(' ( argument_expression_list )? ')' | '.' identifier | '->' identifier | '++' | '--' )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_primary_expression_in_postfix_expression2395);
            primary_expression396=primary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression396.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:412:3: ( '[' expression ']' | '(' ( argument_expression_list )? ')' | '.' identifier | '->' identifier | '++' | '--' )*
            loop103:
            do {
                int alt103=7;
                switch ( input.LA(1) ) {
                case 78:
                    {
                    alt103=1;
                    }
                    break;
                case 33:
                    {
                    alt103=2;
                    }
                    break;
                case 45:
                    {
                    alt103=3;
                    }
                    break;
                case 44:
                    {
                    alt103=4;
                    }
                    break;
                case 38:
                    {
                    alt103=5;
                    }
                    break;
                case 42:
                    {
                    alt103=6;
                    }
                    break;

                }

                switch (alt103) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:412:4: '[' expression ']'
            	    {
            	    char_literal397=(Token)match(input,78,FOLLOW_78_in_postfix_expression2400); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal397_tree = 
            	    (Object)adaptor.create(char_literal397)
            	    ;
            	    adaptor.addChild(root_0, char_literal397_tree);
            	    }

            	    pushFollow(FOLLOW_expression_in_postfix_expression2402);
            	    expression398=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression398.getTree());

            	    char_literal399=(Token)match(input,80,FOLLOW_80_in_postfix_expression2404); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal399_tree = 
            	    (Object)adaptor.create(char_literal399)
            	    ;
            	    adaptor.addChild(root_0, char_literal399_tree);
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:413:5: '(' ( argument_expression_list )? ')'
            	    {
            	    char_literal400=(Token)match(input,33,FOLLOW_33_in_postfix_expression2411); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal400_tree = 
            	    (Object)adaptor.create(char_literal400)
            	    ;
            	    adaptor.addChild(root_0, char_literal400_tree);
            	    }

            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:413:9: ( argument_expression_list )?
            	    int alt102=2;
            	    int LA102_0 = input.LA(1);

            	    if ( (LA102_0==CHARACTER_LITERAL||LA102_0==DECIMAL_LITERAL||LA102_0==FLOATING_POINT_LITERAL||LA102_0==HEX_LITERAL||LA102_0==IDENTIFIER||LA102_0==OCTAL_LITERAL||LA102_0==STRING_LITERAL||LA102_0==25||LA102_0==31||LA102_0==33||LA102_0==35||LA102_0==38||(LA102_0 >= 41 && LA102_0 <= 42)||LA102_0==64||LA102_0==72||LA102_0==74||LA102_0==78||LA102_0==110||LA102_0==113||LA102_0==129) ) {
            	        alt102=1;
            	    }
            	    switch (alt102) {
            	        case 1 :
            	            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:413:9: argument_expression_list
            	            {
            	            pushFollow(FOLLOW_argument_expression_list_in_postfix_expression2413);
            	            argument_expression_list401=argument_expression_list();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_expression_list401.getTree());

            	            }
            	            break;

            	    }


            	    char_literal402=(Token)match(input,34,FOLLOW_34_in_postfix_expression2416); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal402_tree = 
            	    (Object)adaptor.create(char_literal402)
            	    ;
            	    adaptor.addChild(root_0, char_literal402_tree);
            	    }

            	    }
            	    break;
            	case 3 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:414:5: '.' identifier
            	    {
            	    char_literal403=(Token)match(input,45,FOLLOW_45_in_postfix_expression2422); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal403_tree = 
            	    (Object)adaptor.create(char_literal403)
            	    ;
            	    adaptor.addChild(root_0, char_literal403_tree);
            	    }

            	    pushFollow(FOLLOW_identifier_in_postfix_expression2424);
            	    identifier404=identifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier404.getTree());

            	    }
            	    break;
            	case 4 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:415:5: '->' identifier
            	    {
            	    string_literal405=(Token)match(input,44,FOLLOW_44_in_postfix_expression2430); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal405_tree = 
            	    (Object)adaptor.create(string_literal405)
            	    ;
            	    adaptor.addChild(root_0, string_literal405_tree);
            	    }

            	    pushFollow(FOLLOW_identifier_in_postfix_expression2432);
            	    identifier406=identifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier406.getTree());

            	    }
            	    break;
            	case 5 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:416:5: '++'
            	    {
            	    string_literal407=(Token)match(input,38,FOLLOW_38_in_postfix_expression2438); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal407_tree = 
            	    (Object)adaptor.create(string_literal407)
            	    ;
            	    adaptor.addChild(root_0, string_literal407_tree);
            	    }

            	    }
            	    break;
            	case 6 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:417:5: '--'
            	    {
            	    string_literal408=(Token)match(input,42,FOLLOW_42_in_postfix_expression2444); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal408_tree = 
            	    (Object)adaptor.create(string_literal408)
            	    ;
            	    adaptor.addChild(root_0, string_literal408_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "postfix_expression"


    public static class argument_expression_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "argument_expression_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:420:1: argument_expression_list : assignment_expression ( ',' assignment_expression )* ;
    public final ObjectiveCParser.argument_expression_list_return argument_expression_list() throws RecognitionException {
        ObjectiveCParser.argument_expression_list_return retval = new ObjectiveCParser.argument_expression_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal410=null;
        ObjectiveCParser.assignment_expression_return assignment_expression409 =null;

        ObjectiveCParser.assignment_expression_return assignment_expression411 =null;


        Object char_literal410_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:421:3: ( assignment_expression ( ',' assignment_expression )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:421:5: assignment_expression ( ',' assignment_expression )*
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_assignment_expression_in_argument_expression_list2460);
            assignment_expression409=assignment_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment_expression409.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:421:27: ( ',' assignment_expression )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==40) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:421:28: ',' assignment_expression
            	    {
            	    char_literal410=(Token)match(input,40,FOLLOW_40_in_argument_expression_list2463); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal410_tree = 
            	    (Object)adaptor.create(char_literal410)
            	    ;
            	    adaptor.addChild(root_0, char_literal410_tree);
            	    }

            	    pushFollow(FOLLOW_assignment_expression_in_argument_expression_list2465);
            	    assignment_expression411=assignment_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment_expression411.getTree());

            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "argument_expression_list"


    public static class identifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "identifier"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:423:1: identifier : IDENTIFIER ;
    public final ObjectiveCParser.identifier_return identifier() throws RecognitionException {
        ObjectiveCParser.identifier_return retval = new ObjectiveCParser.identifier_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token IDENTIFIER412=null;

        Object IDENTIFIER412_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:423:12: ( IDENTIFIER )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:423:14: IDENTIFIER
            {
            root_0 = (Object)adaptor.nil();


            IDENTIFIER412=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_identifier2476); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER412_tree = 
            (Object)adaptor.create(IDENTIFIER412)
            ;
            adaptor.addChild(root_0, IDENTIFIER412_tree);
            }

            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "identifier"


    public static class constant_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constant"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:425:1: constant : ( DECIMAL_LITERAL | HEX_LITERAL | OCTAL_LITERAL | CHARACTER_LITERAL | FLOATING_POINT_LITERAL );
    public final ObjectiveCParser.constant_return constant() throws RecognitionException {
        ObjectiveCParser.constant_return retval = new ObjectiveCParser.constant_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set413=null;

        Object set413_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:425:10: ( DECIMAL_LITERAL | HEX_LITERAL | OCTAL_LITERAL | CHARACTER_LITERAL | FLOATING_POINT_LITERAL )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:
            {
            root_0 = (Object)adaptor.nil();


            set413=(Token)input.LT(1);

            if ( input.LA(1)==CHARACTER_LITERAL||input.LA(1)==DECIMAL_LITERAL||input.LA(1)==FLOATING_POINT_LITERAL||input.LA(1)==HEX_LITERAL||input.LA(1)==OCTAL_LITERAL ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, 
                (Object)adaptor.create(set413)
                );
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constant"

    // $ANTLR start synpred2_ObjectiveC
    public final void synpred2_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:42:5: ( function_definition )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:42:5: function_definition
        {
        pushFollow(FOLLOW_function_definition_in_synpred2_ObjectiveC84);
        function_definition();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred2_ObjectiveC

    // $ANTLR start synpred3_ObjectiveC
    public final void synpred3_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:43:3: ( declaration )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:43:3: declaration
        {
        pushFollow(FOLLOW_declaration_in_synpred3_ObjectiveC88);
        declaration();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred3_ObjectiveC

    // $ANTLR start synpred4_ObjectiveC
    public final void synpred4_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:44:3: ( class_interface )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:44:3: class_interface
        {
        pushFollow(FOLLOW_class_interface_in_synpred4_ObjectiveC93);
        class_interface();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred4_ObjectiveC

    // $ANTLR start synpred5_ObjectiveC
    public final void synpred5_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:45:3: ( class_implementation )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:45:3: class_implementation
        {
        pushFollow(FOLLOW_class_implementation_in_synpred5_ObjectiveC97);
        class_implementation();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred5_ObjectiveC

    // $ANTLR start synpred6_ObjectiveC
    public final void synpred6_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:46:3: ( category_interface )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:46:3: category_interface
        {
        pushFollow(FOLLOW_category_interface_in_synpred6_ObjectiveC101);
        category_interface();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred6_ObjectiveC

    // $ANTLR start synpred7_ObjectiveC
    public final void synpred7_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:47:3: ( category_implementation )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:47:3: category_implementation
        {
        pushFollow(FOLLOW_category_implementation_in_synpred7_ObjectiveC105);
        category_implementation();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred7_ObjectiveC

    // $ANTLR start synpred8_ObjectiveC
    public final void synpred8_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:48:3: ( protocol_declaration )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:48:3: protocol_declaration
        {
        pushFollow(FOLLOW_protocol_declaration_in_synpred8_ObjectiveC109);
        protocol_declaration();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred8_ObjectiveC

    // $ANTLR start synpred9_ObjectiveC
    public final void synpred9_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:49:3: ( protocol_declaration_list )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:49:3: protocol_declaration_list
        {
        pushFollow(FOLLOW_protocol_declaration_list_in_synpred9_ObjectiveC113);
        protocol_declaration_list();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred9_ObjectiveC

    // $ANTLR start synpred35_ObjectiveC
    public final void synpred35_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:161:3: ( function_definition )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:161:3: function_definition
        {
        pushFollow(FOLLOW_function_definition_in_synpred35_ObjectiveC610);
        function_definition();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred35_ObjectiveC

    // $ANTLR start synpred36_ObjectiveC
    public final void synpred36_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:161:25: ( declaration )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:161:25: declaration
        {
        pushFollow(FOLLOW_declaration_in_synpred36_ObjectiveC614);
        declaration();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred36_ObjectiveC

    // $ANTLR start synpred42_ObjectiveC
    public final void synpred42_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:175:32: ( parameter_list )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:175:32: parameter_list
        {
        pushFollow(FOLLOW_parameter_list_in_synpred42_ObjectiveC687);
        parameter_list();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred42_ObjectiveC

    // $ANTLR start synpred55_ObjectiveC
    public final void synpred55_ObjectiveC_fragment() throws RecognitionException {
        Token =null;

        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:194:4: ( (class_name= IDENTIFIER ( protocol_reference_list )? ) )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:194:4: (class_name= IDENTIFIER ( protocol_reference_list )? )
        {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:194:4: (class_name= IDENTIFIER ( protocol_reference_list )? )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:194:5: class_name= IDENTIFIER ( protocol_reference_list )?
        {
        class_name=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred55_ObjectiveC829); if (state.failed) return ;

        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:194:27: ( protocol_reference_list )?
        int alt107=2;
        int LA107_0 = input.LA(1);

        if ( (LA107_0==51) ) {
            alt107=1;
        }
        switch (alt107) {
            case 1 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:194:29: protocol_reference_list
                {
                pushFollow(FOLLOW_protocol_reference_list_in_synpred55_ObjectiveC833);
                protocol_reference_list();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }

    }
    // $ANTLR end synpred55_ObjectiveC

    // $ANTLR start synpred73_ObjectiveC
    public final void synpred73_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:221:2: ( expression )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:221:2: expression
        {
        pushFollow(FOLLOW_expression_in_synpred73_ObjectiveC977);
        expression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred73_ObjectiveC

    // $ANTLR start synpred74_ObjectiveC
    public final void synpred74_ObjectiveC_fragment() throws RecognitionException {
        Token =null;

        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:222:4: (class_name= IDENTIFIER )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:222:4: class_name= IDENTIFIER
        {
        class_name=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred74_ObjectiveC984); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred74_ObjectiveC

    // $ANTLR start synpred84_ObjectiveC
    public final void synpred84_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:273:32: ( type_specifier )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:273:32: type_specifier
        {
        pushFollow(FOLLOW_type_specifier_in_synpred84_ObjectiveC1206);
        type_specifier();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred84_ObjectiveC

    // $ANTLR start synpred93_ObjectiveC
    public final void synpred93_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:281:5: ( IDENTIFIER )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:281:5: IDENTIFIER
        {
        match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred93_ObjectiveC1287); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred93_ObjectiveC

    // $ANTLR start synpred96_ObjectiveC
    public final void synpred96_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:285:29: ( type_specifier )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:285:29: type_specifier
        {
        pushFollow(FOLLOW_type_specifier_in_synpred96_ObjectiveC1323);
        type_specifier();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred96_ObjectiveC

    // $ANTLR start synpred99_ObjectiveC
    public final void synpred99_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:289:21: ( declarator )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:289:21: declarator
        {
        pushFollow(FOLLOW_declarator_in_synpred99_ObjectiveC1354);
        declarator();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred99_ObjectiveC

    // $ANTLR start synpred101_ObjectiveC
    public final void synpred101_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:292:17: ( '{' enumerator_list '}' )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:292:17: '{' enumerator_list '}'
        {
        match(input,124,FOLLOW_124_in_synpred101_ObjectiveC1381); if (state.failed) return ;

        pushFollow(FOLLOW_enumerator_list_in_synpred101_ObjectiveC1383);
        enumerator_list();

        state._fsp--;
        if (state.failed) return ;

        match(input,128,FOLLOW_128_in_synpred101_ObjectiveC1385); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred101_ObjectiveC

    // $ANTLR start synpred107_ObjectiveC
    public final void synpred107_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:299:32: ( declarator_suffix )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:299:32: declarator_suffix
        {
        pushFollow(FOLLOW_declarator_suffix_in_synpred107_ObjectiveC1457);
        declarator_suffix();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred107_ObjectiveC

    // $ANTLR start synpred109_ObjectiveC
    public final void synpred109_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:300:40: ( declarator_suffix )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:300:40: declarator_suffix
        {
        pushFollow(FOLLOW_declarator_suffix_in_synpred109_ObjectiveC1486);
        declarator_suffix();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred109_ObjectiveC

    // $ANTLR start synpred114_ObjectiveC
    public final void synpred114_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:29: ( declarator )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:29: declarator
        {
        pushFollow(FOLLOW_declarator_in_synpred114_ObjectiveC1546);
        declarator();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred114_ObjectiveC

    // $ANTLR start synpred115_ObjectiveC
    public final void synpred115_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:29: ( ( declarator )? )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:29: ( declarator )?
        {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:29: ( declarator )?
        int alt113=2;
        int LA113_0 = input.LA(1);

        if ( (LA113_0==IDENTIFIER||LA113_0==33||LA113_0==35) ) {
            alt113=1;
        }
        switch (alt113) {
            case 1 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:308:29: declarator
                {
                pushFollow(FOLLOW_declarator_in_synpred115_ObjectiveC1546);
                declarator();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }

    }
    // $ANTLR end synpred115_ObjectiveC

    // $ANTLR start synpred119_ObjectiveC
    public final void synpred119_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:315:23: ( '*' ( type_qualifier )* abstract_declarator )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:315:23: '*' ( type_qualifier )* abstract_declarator
        {
        match(input,35,FOLLOW_35_in_synpred119_ObjectiveC1601); if (state.failed) return ;

        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:315:27: ( type_qualifier )*
        loop114:
        do {
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( ((LA114_0 >= 85 && LA114_0 <= 86)||LA114_0==89||(LA114_0 >= 102 && LA114_0 <= 103)||(LA114_0 >= 106 && LA114_0 <= 107)||LA114_0==122) ) {
                alt114=1;
            }


            switch (alt114) {
        	case 1 :
        	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:315:27: type_qualifier
        	    {
        	    pushFollow(FOLLOW_type_qualifier_in_synpred119_ObjectiveC1603);
        	    type_qualifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop114;
            }
        } while (true);


        pushFollow(FOLLOW_abstract_declarator_in_synpred119_ObjectiveC1606);
        abstract_declarator();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred119_ObjectiveC

    // $ANTLR start synpred120_ObjectiveC
    public final void synpred120_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:316:33: ( abstract_declarator_suffix )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:316:33: abstract_declarator_suffix
        {
        pushFollow(FOLLOW_abstract_declarator_suffix_in_synpred120_ObjectiveC1619);
        abstract_declarator_suffix();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred120_ObjectiveC

    // $ANTLR start synpred121_ObjectiveC
    public final void synpred121_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:316:5: ( '(' abstract_declarator ')' ( abstract_declarator_suffix )+ )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:316:5: '(' abstract_declarator ')' ( abstract_declarator_suffix )+
        {
        match(input,33,FOLLOW_33_in_synpred121_ObjectiveC1613); if (state.failed) return ;

        pushFollow(FOLLOW_abstract_declarator_in_synpred121_ObjectiveC1615);
        abstract_declarator();

        state._fsp--;
        if (state.failed) return ;

        match(input,34,FOLLOW_34_in_synpred121_ObjectiveC1617); if (state.failed) return ;

        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:316:33: ( abstract_declarator_suffix )+
        int cnt115=0;
        loop115:
        do {
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==33||LA115_0==78) ) {
                alt115=1;
            }


            switch (alt115) {
        	case 1 :
        	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:316:33: abstract_declarator_suffix
        	    {
        	    pushFollow(FOLLOW_abstract_declarator_suffix_in_synpred121_ObjectiveC1619);
        	    abstract_declarator_suffix();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt115 >= 1 ) break loop115;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(115, input);
                    throw eee;
            }
            cnt115++;
        } while (true);


        }

    }
    // $ANTLR end synpred121_ObjectiveC

    // $ANTLR start synpred138_ObjectiveC
    public final void synpred138_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:343:27: ( declaration )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:343:27: declaration
        {
        pushFollow(FOLLOW_declaration_in_synpred138_ObjectiveC1797);
        declaration();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred138_ObjectiveC

    // $ANTLR start synpred140_ObjectiveC
    public final void synpred140_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:346:40: ( 'else' statement )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:346:40: 'else' statement
        {
        match(input,94,FOLLOW_94_in_synpred140_ObjectiveC1826); if (state.failed) return ;

        pushFollow(FOLLOW_statement_in_synpred140_ObjectiveC1828);
        statement();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred140_ObjectiveC

    // $ANTLR start synpred182_ObjectiveC
    public final void synpred182_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:400:19: ( '(' type_name ')' cast_expression )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:400:19: '(' type_name ')' cast_expression
        {
        match(input,33,FOLLOW_33_in_synpred182_ObjectiveC2297); if (state.failed) return ;

        pushFollow(FOLLOW_type_name_in_synpred182_ObjectiveC2299);
        type_name();

        state._fsp--;
        if (state.failed) return ;

        match(input,34,FOLLOW_34_in_synpred182_ObjectiveC2301); if (state.failed) return ;

        pushFollow(FOLLOW_cast_expression_in_synpred182_ObjectiveC2303);
        cast_expression();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred182_ObjectiveC

    // $ANTLR start synpred187_ObjectiveC
    public final void synpred187_ObjectiveC_fragment() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:407:15: ( '(' type_name ')' )
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/ObjectiveC.g:407:15: '(' type_name ')'
        {
        match(input,33,FOLLOW_33_in_synpred187_ObjectiveC2352); if (state.failed) return ;

        pushFollow(FOLLOW_type_name_in_synpred187_ObjectiveC2354);
        type_name();

        state._fsp--;
        if (state.failed) return ;

        match(input,34,FOLLOW_34_in_synpred187_ObjectiveC2356); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred187_ObjectiveC

    // Delegated rules

    public final boolean synpred36_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_ObjectiveC() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_ObjectiveC_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


 

    public static final BitSet FOLLOW_external_declaration_in_translation_unit64 = new BitSet(new long[]{0x8000000000002002L,0x07CD9FD3A3680118L});
    public static final BitSet FOLLOW_function_definition_in_external_declaration84 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_external_declaration88 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_interface_in_external_declaration93 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_implementation_in_external_declaration97 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_category_interface_in_external_declaration101 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_category_implementation_in_external_declaration105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_protocol_declaration_in_external_declaration109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_protocol_declaration_list_in_external_declaration113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_declaration_list_in_external_declaration117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_file_specification125 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_file_specification131 = new BitSet(new long[]{0x0200A00008002000L,0x0000000000008000L});
    public static final BitSet FOLLOW_set_in_file_specification148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_macro_specification161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_class_interface169 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_class_interface177 = new BitSet(new long[]{0x0002000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_class_interface180 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_class_interface184 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_class_interface198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_category_interface222 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_category_interface230 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_category_interface232 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_category_name_in_category_interface234 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_category_interface236 = new BitSet(new long[]{0x0008022000002000L,0x07CD9FD3A3680002L});
    public static final BitSet FOLLOW_protocol_reference_list_in_category_interface241 = new BitSet(new long[]{0x0000022000002000L,0x07CD9FD3A3680002L});
    public static final BitSet FOLLOW_interface_declaration_list_in_category_interface249 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_category_interface258 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_class_implementation266 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_class_implementation274 = new BitSet(new long[]{0x0002022000002000L,0x07CD9FD3A3680002L});
    public static final BitSet FOLLOW_49_in_class_implementation278 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_class_implementation282 = new BitSet(new long[]{0x0000022000002000L,0x07CD9FD3A3680002L});
    public static final BitSet FOLLOW_implementation_definition_list_in_class_implementation290 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_class_implementation299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_category_implementation307 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_category_implementation313 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_category_implementation315 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_category_name_in_category_implementation317 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_category_implementation319 = new BitSet(new long[]{0x0000022000002000L,0x07CD9FD3A3680002L});
    public static final BitSet FOLLOW_implementation_definition_list_in_category_implementation324 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_category_implementation331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_protocol_declaration339 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_protocol_name_in_protocol_declaration343 = new BitSet(new long[]{0x0008022000002000L,0x07CD9FD3A3680002L});
    public static final BitSet FOLLOW_protocol_reference_list_in_protocol_declaration347 = new BitSet(new long[]{0x0000022000002000L,0x07CD9FD3A3680002L});
    public static final BitSet FOLLOW_interface_declaration_list_in_protocol_declaration355 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_protocol_declaration362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_protocol_declaration_list371 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_protocol_list_in_protocol_declaration_list373 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_protocol_declaration_list374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_class_declaration_list386 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_class_list_in_class_declaration_list388 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_class_declaration_list389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_class_list402 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_class_list405 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_class_list409 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_51_in_protocol_reference_list420 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_protocol_list_in_protocol_reference_list422 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_protocol_reference_list424 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_protocol_name_in_protocol_list433 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_protocol_list436 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_protocol_name_in_protocol_list438 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_category_name448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_protocol_name456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_124_in_instance_variables464 = new BitSet(new long[]{0x0002000A00002000L,0x00000000000002E0L});
    public static final BitSet FOLLOW_instance_variable_declaration_in_instance_variables466 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_128_in_instance_variables468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_visibility_specification_in_instance_variable_declaration478 = new BitSet(new long[]{0x0002000A00002002L,0x00000000000002E0L});
    public static final BitSet FOLLOW_struct_declarator_list_in_instance_variable_declaration482 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_instance_variables_in_instance_variable_declaration484 = new BitSet(new long[]{0x0002000A00002002L,0x00000000000002E0L});
    public static final BitSet FOLLOW_declaration_in_interface_declaration_list521 = new BitSet(new long[]{0x0000022000002002L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_class_method_declaration_in_interface_declaration_list525 = new BitSet(new long[]{0x0000022000002002L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_instance_method_declaration_in_interface_declaration_list529 = new BitSet(new long[]{0x0000022000002002L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_37_in_class_method_declaration542 = new BitSet(new long[]{0x0000000200002000L});
    public static final BitSet FOLLOW_method_declaration_in_class_method_declaration544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_instance_method_declaration556 = new BitSet(new long[]{0x0000000200002000L});
    public static final BitSet FOLLOW_method_declaration_in_instance_method_declaration558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_type_in_method_declaration581 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_method_selector_in_method_declaration586 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_method_declaration588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_function_definition_in_implementation_definition_list610 = new BitSet(new long[]{0x0000022000002002L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_declaration_in_implementation_definition_list614 = new BitSet(new long[]{0x0000022000002002L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_class_method_definition_in_implementation_definition_list618 = new BitSet(new long[]{0x0000022000002002L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_instance_method_definition_in_implementation_definition_list622 = new BitSet(new long[]{0x0000022000002002L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_37_in_class_method_definition633 = new BitSet(new long[]{0x0000000200002000L});
    public static final BitSet FOLLOW_method_definition_in_class_method_definition635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_instance_method_definition647 = new BitSet(new long[]{0x0000000200002000L});
    public static final BitSet FOLLOW_method_definition_in_instance_method_definition649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_type_in_method_definition662 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_method_selector_in_method_definition666 = new BitSet(new long[]{0x0000000A00002000L,0x1000000000000000L});
    public static final BitSet FOLLOW_init_declarator_list_in_method_definition669 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_compound_statement_in_method_definition673 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selector_in_method_selector681 = new BitSet(new long[]{0x0002000000002002L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_keyword_declarator_in_method_selector683 = new BitSet(new long[]{0x0002000000002002L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_parameter_list_in_method_selector687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_keyword_declarator716 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_method_type_in_keyword_declarator718 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_keyword_declarator720 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_selector749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_method_type756 = new BitSet(new long[]{0x0000000000002000L,0x07898FD2A3600000L});
    public static final BitSet FOLLOW_type_name_in_method_type758 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_method_type760 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_121_in_type_specifier773 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_type_specifier777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_111_in_type_specifier781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_104_in_type_specifier785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_105_in_type_specifier789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_type_specifier793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_type_specifier797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_112_in_type_specifier801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_120_in_type_specifier805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_type_specifier812 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_protocol_reference_list_in_type_specifier816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_type_specifier829 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_protocol_reference_list_in_type_specifier833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_or_union_specifier_in_type_specifier842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_specifier_in_type_specifier847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_type_specifier853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_type_qualifier861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_122_in_type_qualifier865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_protocol_qualifier_in_type_qualifier869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_primary_expression905 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_in_primary_expression910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_primary_expression915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_primary_expression921 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_primary_expression923 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_primary_expression925 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_110_in_primary_expression931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_message_expression_in_primary_expression936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selector_expression_in_primary_expression941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_protocol_expression_in_primary_expression946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_encode_expression_in_primary_expression951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_message_expression960 = new BitSet(new long[]{0x0000064A82142A50L,0x0012400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_receiver_in_message_expression962 = new BitSet(new long[]{0x0002000000002000L});
    public static final BitSet FOLLOW_message_selector_in_message_expression964 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_message_expression966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_receiver977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_receiver984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_116_in_receiver990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selector_in_message_selector998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyword_argument_in_message_selector1003 = new BitSet(new long[]{0x0002000000002002L});
    public static final BitSet FOLLOW_selector_in_keyword_argument1012 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_49_in_keyword_argument1015 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_keyword_argument1017 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_selector_expression1025 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_selector_expression1027 = new BitSet(new long[]{0x0002000000002000L});
    public static final BitSet FOLLOW_selector_name_in_selector_expression1029 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_selector_expression1031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selector_in_selector_name1039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selector_in_selector_name1045 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_49_in_selector_name1048 = new BitSet(new long[]{0x0002000000002002L});
    public static final BitSet FOLLOW_72_in_protocol_expression1058 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_protocol_expression1060 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_protocol_name_in_protocol_expression1062 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_protocol_expression1064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_encode_expression1072 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_encode_expression1074 = new BitSet(new long[]{0x0000000000002000L,0x07898FD2A3600000L});
    public static final BitSet FOLLOW_type_name_in_encode_expression1076 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_encode_expression1078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarator_in_exception_declarator1086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_try_statement1094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_catch_statement1102 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_catch_statement1104 = new BitSet(new long[]{0x0000000A00002000L});
    public static final BitSet FOLLOW_exception_declarator_in_catch_statement1105 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_catch_statement1106 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_catch_statement1107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_finally_statement1115 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_finally_statement1117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_throw_statement1125 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_throw_statement1127 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_throw_statement1128 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_throw_statement1129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_try_statement_in_try_block1137 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_catch_statement_in_try_block1140 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_finally_statement_in_try_block1145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_synchronized_statement1156 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_synchronized_statement1158 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synchronized_statement1160 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_synchronized_statement1162 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_synchronized_statement1164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_specifiers_in_function_definition1172 = new BitSet(new long[]{0x0000000A00002000L});
    public static final BitSet FOLLOW_declarator_in_function_definition1174 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_compound_statement_in_function_definition1176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_specifiers_in_declaration1185 = new BitSet(new long[]{0x0004000A00002000L});
    public static final BitSet FOLLOW_init_declarator_list_in_declaration1187 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_declaration1190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_storage_class_specifier_in_declaration_specifiers1202 = new BitSet(new long[]{0x0000000000002002L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_type_specifier_in_declaration_specifiers1206 = new BitSet(new long[]{0x0000000000002002L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_type_qualifier_in_declaration_specifiers1210 = new BitSet(new long[]{0x0000000000002002L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_init_declarator_in_init_declarator_list1244 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_init_declarator_list1247 = new BitSet(new long[]{0x0000000A00002000L});
    public static final BitSet FOLLOW_init_declarator_in_init_declarator_list1249 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_declarator_in_init_declarator1259 = new BitSet(new long[]{0x0080000000000002L});
    public static final BitSet FOLLOW_55_in_init_declarator1262 = new BitSet(new long[]{0x0000064A82142A50L,0x1002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_initializer_in_init_declarator1264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_struct_or_union_specifier1274 = new BitSet(new long[]{0x0000000000002000L,0x1000000000000000L});
    public static final BitSet FOLLOW_IDENTIFIER_in_struct_or_union_specifier1287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_struct_or_union_specifier1291 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_124_in_struct_or_union_specifier1294 = new BitSet(new long[]{0x0000000000002000L,0x07898FD2A3600000L});
    public static final BitSet FOLLOW_struct_declaration_in_struct_or_union_specifier1296 = new BitSet(new long[]{0x0000000000002000L,0x07898FD2A3600000L,0x0000000000000001L});
    public static final BitSet FOLLOW_128_in_struct_or_union_specifier1299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_qualifier_list_in_struct_declaration1309 = new BitSet(new long[]{0x0002000A00002000L});
    public static final BitSet FOLLOW_struct_declarator_list_in_struct_declaration1311 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_struct_declaration1313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_specifier_in_specifier_qualifier_list1323 = new BitSet(new long[]{0x0000000000002002L,0x07898FD2A3600000L});
    public static final BitSet FOLLOW_type_qualifier_in_specifier_qualifier_list1327 = new BitSet(new long[]{0x0000000000002002L,0x07898FD2A3600000L});
    public static final BitSet FOLLOW_struct_declarator_in_struct_declarator_list1338 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_struct_declarator_list1341 = new BitSet(new long[]{0x0002000A00002000L});
    public static final BitSet FOLLOW_struct_declarator_in_struct_declarator_list1343 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_declarator_in_struct_declarator1354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarator_in_struct_declarator1358 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_49_in_struct_declarator1361 = new BitSet(new long[]{0x0000000000040A50L});
    public static final BitSet FOLLOW_constant_in_struct_declarator1363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_enum_specifier1371 = new BitSet(new long[]{0x0000000000002000L,0x1000000000000000L});
    public static final BitSet FOLLOW_identifier_in_enum_specifier1378 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_124_in_enum_specifier1381 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_enumerator_list_in_enum_specifier1383 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_128_in_enum_specifier1385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_124_in_enum_specifier1394 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_enumerator_list_in_enum_specifier1396 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_128_in_enum_specifier1398 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumerator_in_enumerator_list1407 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_enumerator_list1410 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_enumerator_in_enumerator_list1412 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_identifier_in_enumerator1422 = new BitSet(new long[]{0x0080000000000002L});
    public static final BitSet FOLLOW_55_in_enumerator1425 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_constant_expression_in_enumerator1427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_declarator1437 = new BitSet(new long[]{0x0000000A00002000L,0x04000CC002600000L});
    public static final BitSet FOLLOW_type_qualifier_in_declarator1439 = new BitSet(new long[]{0x0000000A00002000L,0x04000CC002600000L});
    public static final BitSet FOLLOW_declarator_in_declarator1442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_direct_declarator_in_declarator1446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_direct_declarator1455 = new BitSet(new long[]{0x0000000200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_declarator_suffix_in_direct_declarator1457 = new BitSet(new long[]{0x0000000200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_33_in_direct_declarator1480 = new BitSet(new long[]{0x0000000A00002000L});
    public static final BitSet FOLLOW_declarator_in_direct_declarator1482 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_direct_declarator1484 = new BitSet(new long[]{0x0000000200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_declarator_suffix_in_direct_declarator1486 = new BitSet(new long[]{0x0000000200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_declarator_suffix1496 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000014501L,0x0000000000000002L});
    public static final BitSet FOLLOW_constant_expression_in_declarator_suffix1498 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_declarator_suffix1501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_declarator_suffix1509 = new BitSet(new long[]{0x0000000400002000L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_parameter_list_in_declarator_suffix1511 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_declarator_suffix1514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_declaration_list_in_parameter_list1522 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_parameter_list1526 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_parameter_list1528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_specifiers_in_parameter_declaration1543 = new BitSet(new long[]{0x0000000A00002002L,0x0000000000004000L});
    public static final BitSet FOLLOW_declarator_in_parameter_declaration1546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_abstract_declarator_in_parameter_declaration1551 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignment_expression_in_initializer1561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_124_in_initializer1570 = new BitSet(new long[]{0x0000064A82142A50L,0x1002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_initializer_in_initializer1572 = new BitSet(new long[]{0x0000010000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_40_in_initializer1575 = new BitSet(new long[]{0x0000064A82142A50L,0x1002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_initializer_in_initializer1577 = new BitSet(new long[]{0x0000010000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_128_in_initializer1581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_qualifier_list_in_type_name1590 = new BitSet(new long[]{0x0000000A00000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_abstract_declarator_in_type_name1592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_abstract_declarator1601 = new BitSet(new long[]{0x0000000A00000000L,0x04000CC002604000L});
    public static final BitSet FOLLOW_type_qualifier_in_abstract_declarator1603 = new BitSet(new long[]{0x0000000A00000000L,0x04000CC002604000L});
    public static final BitSet FOLLOW_abstract_declarator_in_abstract_declarator1606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_abstract_declarator1613 = new BitSet(new long[]{0x0000000E00000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_abstract_declarator_in_abstract_declarator1615 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_abstract_declarator1617 = new BitSet(new long[]{0x0000000200000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_abstract_declarator_suffix_in_abstract_declarator1619 = new BitSet(new long[]{0x0000000200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_abstract_declarator1627 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000014501L,0x0000000000000002L});
    public static final BitSet FOLLOW_constant_expression_in_abstract_declarator1629 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_abstract_declarator1632 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_abstract_declarator_suffix1649 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000014501L,0x0000000000000002L});
    public static final BitSet FOLLOW_constant_expression_in_abstract_declarator_suffix1651 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_abstract_declarator_suffix1654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_abstract_declarator_suffix1660 = new BitSet(new long[]{0x0000000400002000L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_parameter_declaration_list_in_abstract_declarator_suffix1663 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_abstract_declarator_suffix1666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_declaration_in_parameter_declaration_list1677 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_parameter_declaration_list1681 = new BitSet(new long[]{0x0000000000002000L,0x07CD9FD3A3680000L});
    public static final BitSet FOLLOW_parameter_declaration_in_parameter_declaration_list1683 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_statement_in_statement_list1696 = new BitSet(new long[]{0x0004064A82142A52L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_labeled_statement_in_statement1710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_statement1716 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_statement1718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compound_statement_in_statement1724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selection_statement_in_statement1730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iteration_statement_in_statement1736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_jump_statement_in_statement1742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_statement1748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_labeled_statement1759 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_49_in_labeled_statement1761 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_labeled_statement1763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_labeled_statement1769 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_constant_expression_in_labeled_statement1771 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_49_in_labeled_statement1773 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_labeled_statement1775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_labeled_statement1781 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_49_in_labeled_statement1783 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_labeled_statement1785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_124_in_compound_statement1794 = new BitSet(new long[]{0x0004064A82142A50L,0x1FEFFFFFBFF84501L,0x0000000000000003L});
    public static final BitSet FOLLOW_declaration_in_compound_statement1797 = new BitSet(new long[]{0x0004064A82142A50L,0x1FEFFFFFBFF84501L,0x0000000000000003L});
    public static final BitSet FOLLOW_statement_list_in_compound_statement1801 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_128_in_compound_statement1804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_101_in_selection_statement1815 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_selection_statement1817 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_selection_statement1819 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_selection_statement1821 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_selection_statement1823 = new BitSet(new long[]{0x0000000000000002L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_selection_statement1826 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_selection_statement1828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_117_in_selection_statement1836 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_selection_statement1838 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_selection_statement1840 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_selection_statement1842 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_selection_statement1844 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_123_in_iteration_statement1855 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_iteration_statement1857 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_iteration_statement1859 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_iteration_statement1861 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_iteration_statement1863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_iteration_statement1869 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_iteration_statement1871 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_123_in_iteration_statement1873 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_iteration_statement1875 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_iteration_statement1877 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_iteration_statement1879 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_iteration_statement1881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_iteration_statement1887 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_iteration_statement1889 = new BitSet(new long[]{0x0004064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_iteration_statement1891 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_iteration_statement1894 = new BitSet(new long[]{0x0004064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_iteration_statement1896 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_iteration_statement1899 = new BitSet(new long[]{0x0000064E82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_iteration_statement1901 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_iteration_statement1904 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_iteration_statement1906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_jump_statement1917 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_identifier_in_jump_statement1919 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_jump_statement1921 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_jump_statement1927 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_jump_statement1929 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_jump_statement1935 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_jump_statement1937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_109_in_jump_statement1943 = new BitSet(new long[]{0x0004064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_jump_statement1945 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_jump_statement1948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignment_expression_in_expression1960 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_expression1963 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_assignment_expression_in_expression1965 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_conditional_expression_in_assignment_expression1976 = new BitSet(new long[]{0x10A1089120000002L,0x4000000000040000L});
    public static final BitSet FOLLOW_assignment_operator_in_assignment_expression1983 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_assignment_expression_in_assignment_expression1985 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_logical_or_expression_in_conditional_expression2045 = new BitSet(new long[]{0x2000000000000002L});
    public static final BitSet FOLLOW_61_in_conditional_expression2051 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_logical_or_expression_in_conditional_expression2053 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_49_in_conditional_expression2055 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_logical_or_expression_in_conditional_expression2057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditional_expression_in_constant_expression2068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_logical_and_expression_in_logical_or_expression2077 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_127_in_logical_or_expression2083 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_logical_and_expression_in_logical_or_expression2085 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_inclusive_or_expression_in_logical_and_expression2096 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_logical_and_expression2102 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_inclusive_or_expression_in_logical_and_expression2104 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression2115 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_125_in_inclusive_or_expression2121 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression2123 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_and_expression_in_exclusive_or_expression2134 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_exclusive_or_expression2137 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_and_expression_in_exclusive_or_expression2139 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_equality_expression_in_and_expression2150 = new BitSet(new long[]{0x0000000080000002L});
    public static final BitSet FOLLOW_31_in_and_expression2153 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_equality_expression_in_and_expression2155 = new BitSet(new long[]{0x0000000080000002L});
    public static final BitSet FOLLOW_relational_expression_in_equality_expression2166 = new BitSet(new long[]{0x0100000004000002L});
    public static final BitSet FOLLOW_set_in_equality_expression2172 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_relational_expression_in_equality_expression2180 = new BitSet(new long[]{0x0100000004000002L});
    public static final BitSet FOLLOW_shift_expression_in_relational_expression2191 = new BitSet(new long[]{0x0648000000000002L});
    public static final BitSet FOLLOW_set_in_relational_expression2195 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_shift_expression_in_relational_expression2211 = new BitSet(new long[]{0x0648000000000002L});
    public static final BitSet FOLLOW_additive_expression_in_shift_expression2222 = new BitSet(new long[]{0x0810000000000002L});
    public static final BitSet FOLLOW_set_in_shift_expression2225 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_additive_expression_in_shift_expression2233 = new BitSet(new long[]{0x0810000000000002L});
    public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression2244 = new BitSet(new long[]{0x0000022000000002L});
    public static final BitSet FOLLOW_set_in_additive_expression2249 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression2257 = new BitSet(new long[]{0x0000022000000002L});
    public static final BitSet FOLLOW_cast_expression_in_multiplicative_expression2268 = new BitSet(new long[]{0x0000800810000002L});
    public static final BitSet FOLLOW_set_in_multiplicative_expression2274 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_cast_expression_in_multiplicative_expression2286 = new BitSet(new long[]{0x0000800810000002L});
    public static final BitSet FOLLOW_33_in_cast_expression2297 = new BitSet(new long[]{0x0000000000002000L,0x07898FD2A3600000L});
    public static final BitSet FOLLOW_type_name_in_cast_expression2299 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_cast_expression2301 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_cast_expression_in_cast_expression2303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_expression_in_cast_expression2307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_postfix_expression_in_unary_expression2319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_unary_expression2325 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression2327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_unary_expression2333 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression2335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_operator_in_unary_expression2341 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_cast_expression_in_unary_expression2343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_unary_expression2349 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_unary_expression2352 = new BitSet(new long[]{0x0000000000002000L,0x07898FD2A3600000L});
    public static final BitSet FOLLOW_type_name_in_unary_expression2354 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_unary_expression2356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression2360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_expression_in_postfix_expression2395 = new BitSet(new long[]{0x0000344200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_postfix_expression2400 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_postfix_expression2402 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_postfix_expression2404 = new BitSet(new long[]{0x0000344200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_33_in_postfix_expression2411 = new BitSet(new long[]{0x0000064E82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_argument_expression_list_in_postfix_expression2413 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_postfix_expression2416 = new BitSet(new long[]{0x0000344200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_45_in_postfix_expression2422 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_identifier_in_postfix_expression2424 = new BitSet(new long[]{0x0000344200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_44_in_postfix_expression2430 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_identifier_in_postfix_expression2432 = new BitSet(new long[]{0x0000344200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_38_in_postfix_expression2438 = new BitSet(new long[]{0x0000344200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_42_in_postfix_expression2444 = new BitSet(new long[]{0x0000344200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_assignment_expression_in_argument_expression_list2460 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_argument_expression_list2463 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_assignment_expression_in_argument_expression_list2465 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_identifier2476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_function_definition_in_synpred2_ObjectiveC84 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_synpred3_ObjectiveC88 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_interface_in_synpred4_ObjectiveC93 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_implementation_in_synpred5_ObjectiveC97 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_category_interface_in_synpred6_ObjectiveC101 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_category_implementation_in_synpred7_ObjectiveC105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_protocol_declaration_in_synpred8_ObjectiveC109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_protocol_declaration_list_in_synpred9_ObjectiveC113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_function_definition_in_synpred35_ObjectiveC610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_synpred36_ObjectiveC614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_list_in_synpred42_ObjectiveC687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred55_ObjectiveC829 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_protocol_reference_list_in_synpred55_ObjectiveC833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_synpred73_ObjectiveC977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred74_ObjectiveC984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_specifier_in_synpred84_ObjectiveC1206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred93_ObjectiveC1287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_specifier_in_synpred96_ObjectiveC1323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarator_in_synpred99_ObjectiveC1354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_124_in_synpred101_ObjectiveC1381 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_enumerator_list_in_synpred101_ObjectiveC1383 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_128_in_synpred101_ObjectiveC1385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarator_suffix_in_synpred107_ObjectiveC1457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarator_suffix_in_synpred109_ObjectiveC1486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarator_in_synpred114_ObjectiveC1546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarator_in_synpred115_ObjectiveC1546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_synpred119_ObjectiveC1601 = new BitSet(new long[]{0x0000000A00000000L,0x04000CC002604000L});
    public static final BitSet FOLLOW_type_qualifier_in_synpred119_ObjectiveC1603 = new BitSet(new long[]{0x0000000A00000000L,0x04000CC002604000L});
    public static final BitSet FOLLOW_abstract_declarator_in_synpred119_ObjectiveC1606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_abstract_declarator_suffix_in_synpred120_ObjectiveC1619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_synpred121_ObjectiveC1613 = new BitSet(new long[]{0x0000000E00000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_abstract_declarator_in_synpred121_ObjectiveC1615 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_synpred121_ObjectiveC1617 = new BitSet(new long[]{0x0000000200000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_abstract_declarator_suffix_in_synpred121_ObjectiveC1619 = new BitSet(new long[]{0x0000000200000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_declaration_in_synpred138_ObjectiveC1797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_synpred140_ObjectiveC1826 = new BitSet(new long[]{0x0004064A82142A50L,0x1822602C1C904501L,0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_synpred140_ObjectiveC1828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_synpred182_ObjectiveC2297 = new BitSet(new long[]{0x0000000000002000L,0x07898FD2A3600000L});
    public static final BitSet FOLLOW_type_name_in_synpred182_ObjectiveC2299 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_synpred182_ObjectiveC2301 = new BitSet(new long[]{0x0000064A82142A50L,0x0002400000004501L,0x0000000000000002L});
    public static final BitSet FOLLOW_cast_expression_in_synpred182_ObjectiveC2303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_synpred187_ObjectiveC2352 = new BitSet(new long[]{0x0000000000002000L,0x07898FD2A3600000L});
    public static final BitSet FOLLOW_type_name_in_synpred187_ObjectiveC2354 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_synpred187_ObjectiveC2356 = new BitSet(new long[]{0x0000000000000002L});

}