// $ANTLR 3.4 /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g 2012-10-18 19:54:47

// AUTOGENERATED BY ANTLR!!! DO NOT MODIFY!!!

package com.gerixsoft.objc2xml.antlr.my;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

import org.antlr.runtime.tree.*;


@SuppressWarnings({"all", "warnings", "unchecked"})
public class ObjectiveCParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Character", "Comment", "EscapeSequence", "Exponent", "FloatTypeSuffix", "FloatingPoint", "Hex", "HexDigit", "Identifier", "Integer", "IntegerTypeSuffix", "Letter", "LineCommand", "LineComment", "Octal", "OctalEscape", "String", "UnicodeEscape", "WS", "XML_ATTRIBUTE", "XML_ELEMENT", "'('", "')'", "'*'", "'+'", "','", "'-'", "'...'", "':'", "';'", "'<'", "'='", "'>'", "'@class'", "'@end'", "'@interface'", "'@optional'", "'@private'", "'@property'", "'@protected'", "'@protocol'", "'@public'", "'@required'", "'['", "']'", "'^'", "'enum'", "'struct'", "'typedef'", "'{'", "'|'", "'}'"
    };

    public static final int EOF=-1;
    public static final int T__25=25;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int Character=4;
    public static final int Comment=5;
    public static final int EscapeSequence=6;
    public static final int Exponent=7;
    public static final int FloatTypeSuffix=8;
    public static final int FloatingPoint=9;
    public static final int Hex=10;
    public static final int HexDigit=11;
    public static final int Identifier=12;
    public static final int Integer=13;
    public static final int IntegerTypeSuffix=14;
    public static final int Letter=15;
    public static final int LineCommand=16;
    public static final int LineComment=17;
    public static final int Octal=18;
    public static final int OctalEscape=19;
    public static final int String=20;
    public static final int UnicodeEscape=21;
    public static final int WS=22;
    public static final int XML_ATTRIBUTE=23;
    public static final int XML_ELEMENT=24;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public ObjectiveCParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public ObjectiveCParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
    }

protected TreeAdaptor adaptor = new CommonTreeAdaptor();

public void setTreeAdaptor(TreeAdaptor adaptor) {
    this.adaptor = adaptor;
}
public TreeAdaptor getTreeAdaptor() {
    return adaptor;
}
    public String[] getTokenNames() { return ObjectiveCParser.tokenNames; }
    public String getGrammarFileName() { return "/home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g"; }


    public static class translation_unit_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "translation_unit"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:25:1: translation_unit : ( external_declaration )+ EOF -> ^( XML_ELEMENT[\"objective-c\"] ( external_declaration )+ ) ;
    public final ObjectiveCParser.translation_unit_return translation_unit() throws RecognitionException {
        ObjectiveCParser.translation_unit_return retval = new ObjectiveCParser.translation_unit_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token EOF2=null;
        ObjectiveCParser.external_declaration_return external_declaration1 =null;


        Object EOF2_tree=null;
        RewriteRuleTokenStream stream_EOF=new RewriteRuleTokenStream(adaptor,"token EOF");
        RewriteRuleSubtreeStream stream_external_declaration=new RewriteRuleSubtreeStream(adaptor,"rule external_declaration");
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:25:18: ( ( external_declaration )+ EOF -> ^( XML_ELEMENT[\"objective-c\"] ( external_declaration )+ ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:26:2: ( external_declaration )+ EOF
            {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:26:2: ( external_declaration )+
            int cnt1=0;
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==Identifier||LA1_0==37||LA1_0==39||LA1_0==44||(LA1_0 >= 50 && LA1_0 <= 52)) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:26:2: external_declaration
            	    {
            	    pushFollow(FOLLOW_external_declaration_in_translation_unit60);
            	    external_declaration1=external_declaration();

            	    state._fsp--;

            	    stream_external_declaration.add(external_declaration1.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt1 >= 1 ) break loop1;
                        EarlyExitException eee =
                            new EarlyExitException(1, input);
                        throw eee;
                }
                cnt1++;
            } while (true);


            EOF2=(Token)match(input,EOF,FOLLOW_EOF_in_translation_unit63);  
            stream_EOF.add(EOF2);


            // AST REWRITE
            // elements: external_declaration
            // token labels: 
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            // wildcard labels: 
            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.tree:null);

            root_0 = (Object)adaptor.nil();
            // 27:2: -> ^( XML_ELEMENT[\"objective-c\"] ( external_declaration )+ )
            {
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:27:4: ^( XML_ELEMENT[\"objective-c\"] ( external_declaration )+ )
                {
                Object root_1 = (Object)adaptor.nil();
                root_1 = (Object)adaptor.becomeRoot(
                (Object)adaptor.create(XML_ELEMENT, "objective-c")
                , root_1);

                if ( !(stream_external_declaration.hasNext()) ) {
                    throw new RewriteEarlyExitException();
                }
                while ( stream_external_declaration.hasNext() ) {
                    adaptor.addChild(root_1, stream_external_declaration.nextTree());

                }
                stream_external_declaration.reset();

                adaptor.addChild(root_0, root_1);
                }

            }


            retval.tree = root_0;

            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "translation_unit"


    public static class external_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "external_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:30:1: external_declaration : ( ignore_enum | ignore_struct | ignore_typedef | interface_declaration | class_declaration_list | macro_call ( ';' )? );
    public final ObjectiveCParser.external_declaration_return external_declaration() throws RecognitionException {
        ObjectiveCParser.external_declaration_return retval = new ObjectiveCParser.external_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal9=null;
        ObjectiveCParser.ignore_enum_return ignore_enum3 =null;

        ObjectiveCParser.ignore_struct_return ignore_struct4 =null;

        ObjectiveCParser.ignore_typedef_return ignore_typedef5 =null;

        ObjectiveCParser.interface_declaration_return interface_declaration6 =null;

        ObjectiveCParser.class_declaration_list_return class_declaration_list7 =null;

        ObjectiveCParser.macro_call_return macro_call8 =null;


        Object char_literal9_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:30:22: ( ignore_enum | ignore_struct | ignore_typedef | interface_declaration | class_declaration_list | macro_call ( ';' )? )
            int alt3=6;
            switch ( input.LA(1) ) {
            case 50:
                {
                alt3=1;
                }
                break;
            case 51:
                {
                alt3=2;
                }
                break;
            case 52:
                {
                alt3=3;
                }
                break;
            case 39:
            case 44:
                {
                alt3=4;
                }
                break;
            case 37:
                {
                alt3=5;
                }
                break;
            case Identifier:
                {
                alt3=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;

            }

            switch (alt3) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:31:2: ignore_enum
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_ignore_enum_in_external_declaration85);
                    ignore_enum3=ignore_enum();

                    state._fsp--;

                    adaptor.addChild(root_0, ignore_enum3.getTree());

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:32:4: ignore_struct
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_ignore_struct_in_external_declaration90);
                    ignore_struct4=ignore_struct();

                    state._fsp--;

                    adaptor.addChild(root_0, ignore_struct4.getTree());

                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:33:4: ignore_typedef
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_ignore_typedef_in_external_declaration95);
                    ignore_typedef5=ignore_typedef();

                    state._fsp--;

                    adaptor.addChild(root_0, ignore_typedef5.getTree());

                    }
                    break;
                case 4 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:34:4: interface_declaration
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_interface_declaration_in_external_declaration100);
                    interface_declaration6=interface_declaration();

                    state._fsp--;

                    adaptor.addChild(root_0, interface_declaration6.getTree());

                    }
                    break;
                case 5 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:35:4: class_declaration_list
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_class_declaration_list_in_external_declaration105);
                    class_declaration_list7=class_declaration_list();

                    state._fsp--;

                    adaptor.addChild(root_0, class_declaration_list7.getTree());

                    }
                    break;
                case 6 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:36:4: macro_call ( ';' )?
                    {
                    root_0 = (Object)adaptor.nil();


                    pushFollow(FOLLOW_macro_call_in_external_declaration110);
                    macro_call8=macro_call();

                    state._fsp--;

                    adaptor.addChild(root_0, macro_call8.getTree());

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:36:15: ( ';' )?
                    int alt2=2;
                    int LA2_0 = input.LA(1);

                    if ( (LA2_0==33) ) {
                        alt2=1;
                    }
                    switch (alt2) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:36:15: ';'
                            {
                            char_literal9=(Token)match(input,33,FOLLOW_33_in_external_declaration112); 
                            char_literal9_tree = 
                            (Object)adaptor.create(char_literal9)
                            ;
                            adaptor.addChild(root_0, char_literal9_tree);


                            }
                            break;

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "external_declaration"


    public static class ignore_braces_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "ignore_braces"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:39:1: ignore_braces : '{' ( ignore_braces | constant | '*' | ';' | '[' | ']' | ':' | '=' | ',' | '(' | ')' | '-' | '<' | '>' | '|' | '^' | '@private' | '@protected' | '@public' | 'enum' | 'struct' )* '}' ;
    public final ObjectiveCParser.ignore_braces_return ignore_braces() throws RecognitionException {
        ObjectiveCParser.ignore_braces_return retval = new ObjectiveCParser.ignore_braces_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal10=null;
        Token char_literal13=null;
        Token char_literal14=null;
        Token char_literal15=null;
        Token char_literal16=null;
        Token char_literal17=null;
        Token char_literal18=null;
        Token char_literal19=null;
        Token char_literal20=null;
        Token char_literal21=null;
        Token char_literal22=null;
        Token char_literal23=null;
        Token char_literal24=null;
        Token char_literal25=null;
        Token char_literal26=null;
        Token string_literal27=null;
        Token string_literal28=null;
        Token string_literal29=null;
        Token string_literal30=null;
        Token string_literal31=null;
        Token char_literal32=null;
        ObjectiveCParser.ignore_braces_return ignore_braces11 =null;

        ObjectiveCParser.constant_return constant12 =null;


        Object char_literal10_tree=null;
        Object char_literal13_tree=null;
        Object char_literal14_tree=null;
        Object char_literal15_tree=null;
        Object char_literal16_tree=null;
        Object char_literal17_tree=null;
        Object char_literal18_tree=null;
        Object char_literal19_tree=null;
        Object char_literal20_tree=null;
        Object char_literal21_tree=null;
        Object char_literal22_tree=null;
        Object char_literal23_tree=null;
        Object char_literal24_tree=null;
        Object char_literal25_tree=null;
        Object char_literal26_tree=null;
        Object string_literal27_tree=null;
        Object string_literal28_tree=null;
        Object string_literal29_tree=null;
        Object string_literal30_tree=null;
        Object string_literal31_tree=null;
        Object char_literal32_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:39:15: ( '{' ( ignore_braces | constant | '*' | ';' | '[' | ']' | ':' | '=' | ',' | '(' | ')' | '-' | '<' | '>' | '|' | '^' | '@private' | '@protected' | '@public' | 'enum' | 'struct' )* '}' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:40:2: '{' ( ignore_braces | constant | '*' | ';' | '[' | ']' | ':' | '=' | ',' | '(' | ')' | '-' | '<' | '>' | '|' | '^' | '@private' | '@protected' | '@public' | 'enum' | 'struct' )* '}'
            {
            root_0 = (Object)adaptor.nil();


            char_literal10=(Token)match(input,53,FOLLOW_53_in_ignore_braces124); 
            char_literal10_tree = 
            (Object)adaptor.create(char_literal10)
            ;
            adaptor.addChild(root_0, char_literal10_tree);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:41:2: ( ignore_braces | constant | '*' | ';' | '[' | ']' | ':' | '=' | ',' | '(' | ')' | '-' | '<' | '>' | '|' | '^' | '@private' | '@protected' | '@public' | 'enum' | 'struct' )*
            loop4:
            do {
                int alt4=22;
                switch ( input.LA(1) ) {
                case 53:
                    {
                    alt4=1;
                    }
                    break;
                case Hex:
                case Identifier:
                case Integer:
                    {
                    alt4=2;
                    }
                    break;
                case 27:
                    {
                    alt4=3;
                    }
                    break;
                case 33:
                    {
                    alt4=4;
                    }
                    break;
                case 47:
                    {
                    alt4=5;
                    }
                    break;
                case 48:
                    {
                    alt4=6;
                    }
                    break;
                case 32:
                    {
                    alt4=7;
                    }
                    break;
                case 35:
                    {
                    alt4=8;
                    }
                    break;
                case 29:
                    {
                    alt4=9;
                    }
                    break;
                case 25:
                    {
                    alt4=10;
                    }
                    break;
                case 26:
                    {
                    alt4=11;
                    }
                    break;
                case 30:
                    {
                    alt4=12;
                    }
                    break;
                case 34:
                    {
                    alt4=13;
                    }
                    break;
                case 36:
                    {
                    alt4=14;
                    }
                    break;
                case 54:
                    {
                    alt4=15;
                    }
                    break;
                case 49:
                    {
                    alt4=16;
                    }
                    break;
                case 41:
                    {
                    alt4=17;
                    }
                    break;
                case 43:
                    {
                    alt4=18;
                    }
                    break;
                case 45:
                    {
                    alt4=19;
                    }
                    break;
                case 50:
                    {
                    alt4=20;
                    }
                    break;
                case 51:
                    {
                    alt4=21;
                    }
                    break;

                }

                switch (alt4) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:42:2: ignore_braces
            	    {
            	    pushFollow(FOLLOW_ignore_braces_in_ignore_braces130);
            	    ignore_braces11=ignore_braces();

            	    state._fsp--;

            	    adaptor.addChild(root_0, ignore_braces11.getTree());

            	    }
            	    break;
            	case 2 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:43:4: constant
            	    {
            	    pushFollow(FOLLOW_constant_in_ignore_braces135);
            	    constant12=constant();

            	    state._fsp--;

            	    adaptor.addChild(root_0, constant12.getTree());

            	    }
            	    break;
            	case 3 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:44:4: '*'
            	    {
            	    char_literal13=(Token)match(input,27,FOLLOW_27_in_ignore_braces140); 
            	    char_literal13_tree = 
            	    (Object)adaptor.create(char_literal13)
            	    ;
            	    adaptor.addChild(root_0, char_literal13_tree);


            	    }
            	    break;
            	case 4 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:45:4: ';'
            	    {
            	    char_literal14=(Token)match(input,33,FOLLOW_33_in_ignore_braces145); 
            	    char_literal14_tree = 
            	    (Object)adaptor.create(char_literal14)
            	    ;
            	    adaptor.addChild(root_0, char_literal14_tree);


            	    }
            	    break;
            	case 5 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:46:4: '['
            	    {
            	    char_literal15=(Token)match(input,47,FOLLOW_47_in_ignore_braces150); 
            	    char_literal15_tree = 
            	    (Object)adaptor.create(char_literal15)
            	    ;
            	    adaptor.addChild(root_0, char_literal15_tree);


            	    }
            	    break;
            	case 6 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:47:4: ']'
            	    {
            	    char_literal16=(Token)match(input,48,FOLLOW_48_in_ignore_braces155); 
            	    char_literal16_tree = 
            	    (Object)adaptor.create(char_literal16)
            	    ;
            	    adaptor.addChild(root_0, char_literal16_tree);


            	    }
            	    break;
            	case 7 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:48:4: ':'
            	    {
            	    char_literal17=(Token)match(input,32,FOLLOW_32_in_ignore_braces160); 
            	    char_literal17_tree = 
            	    (Object)adaptor.create(char_literal17)
            	    ;
            	    adaptor.addChild(root_0, char_literal17_tree);


            	    }
            	    break;
            	case 8 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:49:4: '='
            	    {
            	    char_literal18=(Token)match(input,35,FOLLOW_35_in_ignore_braces165); 
            	    char_literal18_tree = 
            	    (Object)adaptor.create(char_literal18)
            	    ;
            	    adaptor.addChild(root_0, char_literal18_tree);


            	    }
            	    break;
            	case 9 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:50:4: ','
            	    {
            	    char_literal19=(Token)match(input,29,FOLLOW_29_in_ignore_braces170); 
            	    char_literal19_tree = 
            	    (Object)adaptor.create(char_literal19)
            	    ;
            	    adaptor.addChild(root_0, char_literal19_tree);


            	    }
            	    break;
            	case 10 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:51:4: '('
            	    {
            	    char_literal20=(Token)match(input,25,FOLLOW_25_in_ignore_braces175); 
            	    char_literal20_tree = 
            	    (Object)adaptor.create(char_literal20)
            	    ;
            	    adaptor.addChild(root_0, char_literal20_tree);


            	    }
            	    break;
            	case 11 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:52:4: ')'
            	    {
            	    char_literal21=(Token)match(input,26,FOLLOW_26_in_ignore_braces180); 
            	    char_literal21_tree = 
            	    (Object)adaptor.create(char_literal21)
            	    ;
            	    adaptor.addChild(root_0, char_literal21_tree);


            	    }
            	    break;
            	case 12 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:53:4: '-'
            	    {
            	    char_literal22=(Token)match(input,30,FOLLOW_30_in_ignore_braces185); 
            	    char_literal22_tree = 
            	    (Object)adaptor.create(char_literal22)
            	    ;
            	    adaptor.addChild(root_0, char_literal22_tree);


            	    }
            	    break;
            	case 13 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:54:4: '<'
            	    {
            	    char_literal23=(Token)match(input,34,FOLLOW_34_in_ignore_braces190); 
            	    char_literal23_tree = 
            	    (Object)adaptor.create(char_literal23)
            	    ;
            	    adaptor.addChild(root_0, char_literal23_tree);


            	    }
            	    break;
            	case 14 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:55:4: '>'
            	    {
            	    char_literal24=(Token)match(input,36,FOLLOW_36_in_ignore_braces195); 
            	    char_literal24_tree = 
            	    (Object)adaptor.create(char_literal24)
            	    ;
            	    adaptor.addChild(root_0, char_literal24_tree);


            	    }
            	    break;
            	case 15 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:56:4: '|'
            	    {
            	    char_literal25=(Token)match(input,54,FOLLOW_54_in_ignore_braces200); 
            	    char_literal25_tree = 
            	    (Object)adaptor.create(char_literal25)
            	    ;
            	    adaptor.addChild(root_0, char_literal25_tree);


            	    }
            	    break;
            	case 16 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:57:4: '^'
            	    {
            	    char_literal26=(Token)match(input,49,FOLLOW_49_in_ignore_braces205); 
            	    char_literal26_tree = 
            	    (Object)adaptor.create(char_literal26)
            	    ;
            	    adaptor.addChild(root_0, char_literal26_tree);


            	    }
            	    break;
            	case 17 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:58:4: '@private'
            	    {
            	    string_literal27=(Token)match(input,41,FOLLOW_41_in_ignore_braces210); 
            	    string_literal27_tree = 
            	    (Object)adaptor.create(string_literal27)
            	    ;
            	    adaptor.addChild(root_0, string_literal27_tree);


            	    }
            	    break;
            	case 18 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:59:4: '@protected'
            	    {
            	    string_literal28=(Token)match(input,43,FOLLOW_43_in_ignore_braces215); 
            	    string_literal28_tree = 
            	    (Object)adaptor.create(string_literal28)
            	    ;
            	    adaptor.addChild(root_0, string_literal28_tree);


            	    }
            	    break;
            	case 19 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:60:4: '@public'
            	    {
            	    string_literal29=(Token)match(input,45,FOLLOW_45_in_ignore_braces220); 
            	    string_literal29_tree = 
            	    (Object)adaptor.create(string_literal29)
            	    ;
            	    adaptor.addChild(root_0, string_literal29_tree);


            	    }
            	    break;
            	case 20 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:61:4: 'enum'
            	    {
            	    string_literal30=(Token)match(input,50,FOLLOW_50_in_ignore_braces225); 
            	    string_literal30_tree = 
            	    (Object)adaptor.create(string_literal30)
            	    ;
            	    adaptor.addChild(root_0, string_literal30_tree);


            	    }
            	    break;
            	case 21 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:62:4: 'struct'
            	    {
            	    string_literal31=(Token)match(input,51,FOLLOW_51_in_ignore_braces230); 
            	    string_literal31_tree = 
            	    (Object)adaptor.create(string_literal31)
            	    ;
            	    adaptor.addChild(root_0, string_literal31_tree);


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            char_literal32=(Token)match(input,55,FOLLOW_55_in_ignore_braces237); 
            char_literal32_tree = 
            (Object)adaptor.create(char_literal32)
            ;
            adaptor.addChild(root_0, char_literal32_tree);


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ignore_braces"


    public static class ignore_enum_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "ignore_enum"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:67:1: ignore_enum : 'enum' ignore_braces ';' ;
    public final ObjectiveCParser.ignore_enum_return ignore_enum() throws RecognitionException {
        ObjectiveCParser.ignore_enum_return retval = new ObjectiveCParser.ignore_enum_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal33=null;
        Token char_literal35=null;
        ObjectiveCParser.ignore_braces_return ignore_braces34 =null;


        Object string_literal33_tree=null;
        Object char_literal35_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:67:13: ( 'enum' ignore_braces ';' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:68:2: 'enum' ignore_braces ';'
            {
            root_0 = (Object)adaptor.nil();


            string_literal33=(Token)match(input,50,FOLLOW_50_in_ignore_enum248); 
            string_literal33_tree = 
            (Object)adaptor.create(string_literal33)
            ;
            adaptor.addChild(root_0, string_literal33_tree);


            pushFollow(FOLLOW_ignore_braces_in_ignore_enum250);
            ignore_braces34=ignore_braces();

            state._fsp--;

            adaptor.addChild(root_0, ignore_braces34.getTree());

            char_literal35=(Token)match(input,33,FOLLOW_33_in_ignore_enum252); 
            char_literal35_tree = 
            (Object)adaptor.create(char_literal35)
            ;
            adaptor.addChild(root_0, char_literal35_tree);


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ignore_enum"


    public static class ignore_struct_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "ignore_struct"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:71:1: ignore_struct : 'struct' ( constant )? ( ignore_braces )? ';' ;
    public final ObjectiveCParser.ignore_struct_return ignore_struct() throws RecognitionException {
        ObjectiveCParser.ignore_struct_return retval = new ObjectiveCParser.ignore_struct_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal36=null;
        Token char_literal39=null;
        ObjectiveCParser.constant_return constant37 =null;

        ObjectiveCParser.ignore_braces_return ignore_braces38 =null;


        Object string_literal36_tree=null;
        Object char_literal39_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:71:15: ( 'struct' ( constant )? ( ignore_braces )? ';' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:72:2: 'struct' ( constant )? ( ignore_braces )? ';'
            {
            root_0 = (Object)adaptor.nil();


            string_literal36=(Token)match(input,51,FOLLOW_51_in_ignore_struct263); 
            string_literal36_tree = 
            (Object)adaptor.create(string_literal36)
            ;
            adaptor.addChild(root_0, string_literal36_tree);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:72:11: ( constant )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==Hex||(LA5_0 >= Identifier && LA5_0 <= Integer)) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:72:11: constant
                    {
                    pushFollow(FOLLOW_constant_in_ignore_struct265);
                    constant37=constant();

                    state._fsp--;

                    adaptor.addChild(root_0, constant37.getTree());

                    }
                    break;

            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:72:21: ( ignore_braces )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==53) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:72:21: ignore_braces
                    {
                    pushFollow(FOLLOW_ignore_braces_in_ignore_struct268);
                    ignore_braces38=ignore_braces();

                    state._fsp--;

                    adaptor.addChild(root_0, ignore_braces38.getTree());

                    }
                    break;

            }


            char_literal39=(Token)match(input,33,FOLLOW_33_in_ignore_struct271); 
            char_literal39_tree = 
            (Object)adaptor.create(char_literal39)
            ;
            adaptor.addChild(root_0, char_literal39_tree);


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ignore_struct"


    public static class ignore_typedef_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "ignore_typedef"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:75:1: ignore_typedef : 'typedef' ( constant | '*' | '-' | '(' | ')' | ',' | '<' | '>' | 'enum' | 'struct' | ignore_braces )+ ';' ;
    public final ObjectiveCParser.ignore_typedef_return ignore_typedef() throws RecognitionException {
        ObjectiveCParser.ignore_typedef_return retval = new ObjectiveCParser.ignore_typedef_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal40=null;
        Token char_literal42=null;
        Token char_literal43=null;
        Token char_literal44=null;
        Token char_literal45=null;
        Token char_literal46=null;
        Token char_literal47=null;
        Token char_literal48=null;
        Token string_literal49=null;
        Token string_literal50=null;
        Token char_literal52=null;
        ObjectiveCParser.constant_return constant41 =null;

        ObjectiveCParser.ignore_braces_return ignore_braces51 =null;


        Object string_literal40_tree=null;
        Object char_literal42_tree=null;
        Object char_literal43_tree=null;
        Object char_literal44_tree=null;
        Object char_literal45_tree=null;
        Object char_literal46_tree=null;
        Object char_literal47_tree=null;
        Object char_literal48_tree=null;
        Object string_literal49_tree=null;
        Object string_literal50_tree=null;
        Object char_literal52_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:75:16: ( 'typedef' ( constant | '*' | '-' | '(' | ')' | ',' | '<' | '>' | 'enum' | 'struct' | ignore_braces )+ ';' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:76:2: 'typedef' ( constant | '*' | '-' | '(' | ')' | ',' | '<' | '>' | 'enum' | 'struct' | ignore_braces )+ ';'
            {
            root_0 = (Object)adaptor.nil();


            string_literal40=(Token)match(input,52,FOLLOW_52_in_ignore_typedef282); 
            string_literal40_tree = 
            (Object)adaptor.create(string_literal40)
            ;
            adaptor.addChild(root_0, string_literal40_tree);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:77:2: ( constant | '*' | '-' | '(' | ')' | ',' | '<' | '>' | 'enum' | 'struct' | ignore_braces )+
            int cnt7=0;
            loop7:
            do {
                int alt7=12;
                switch ( input.LA(1) ) {
                case Hex:
                case Identifier:
                case Integer:
                    {
                    alt7=1;
                    }
                    break;
                case 27:
                    {
                    alt7=2;
                    }
                    break;
                case 30:
                    {
                    alt7=3;
                    }
                    break;
                case 25:
                    {
                    alt7=4;
                    }
                    break;
                case 26:
                    {
                    alt7=5;
                    }
                    break;
                case 29:
                    {
                    alt7=6;
                    }
                    break;
                case 34:
                    {
                    alt7=7;
                    }
                    break;
                case 36:
                    {
                    alt7=8;
                    }
                    break;
                case 50:
                    {
                    alt7=9;
                    }
                    break;
                case 51:
                    {
                    alt7=10;
                    }
                    break;
                case 53:
                    {
                    alt7=11;
                    }
                    break;

                }

                switch (alt7) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:78:2: constant
            	    {
            	    pushFollow(FOLLOW_constant_in_ignore_typedef288);
            	    constant41=constant();

            	    state._fsp--;

            	    adaptor.addChild(root_0, constant41.getTree());

            	    }
            	    break;
            	case 2 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:79:4: '*'
            	    {
            	    char_literal42=(Token)match(input,27,FOLLOW_27_in_ignore_typedef293); 
            	    char_literal42_tree = 
            	    (Object)adaptor.create(char_literal42)
            	    ;
            	    adaptor.addChild(root_0, char_literal42_tree);


            	    }
            	    break;
            	case 3 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:80:4: '-'
            	    {
            	    char_literal43=(Token)match(input,30,FOLLOW_30_in_ignore_typedef298); 
            	    char_literal43_tree = 
            	    (Object)adaptor.create(char_literal43)
            	    ;
            	    adaptor.addChild(root_0, char_literal43_tree);


            	    }
            	    break;
            	case 4 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:81:4: '('
            	    {
            	    char_literal44=(Token)match(input,25,FOLLOW_25_in_ignore_typedef303); 
            	    char_literal44_tree = 
            	    (Object)adaptor.create(char_literal44)
            	    ;
            	    adaptor.addChild(root_0, char_literal44_tree);


            	    }
            	    break;
            	case 5 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:82:4: ')'
            	    {
            	    char_literal45=(Token)match(input,26,FOLLOW_26_in_ignore_typedef308); 
            	    char_literal45_tree = 
            	    (Object)adaptor.create(char_literal45)
            	    ;
            	    adaptor.addChild(root_0, char_literal45_tree);


            	    }
            	    break;
            	case 6 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:83:4: ','
            	    {
            	    char_literal46=(Token)match(input,29,FOLLOW_29_in_ignore_typedef313); 
            	    char_literal46_tree = 
            	    (Object)adaptor.create(char_literal46)
            	    ;
            	    adaptor.addChild(root_0, char_literal46_tree);


            	    }
            	    break;
            	case 7 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:84:4: '<'
            	    {
            	    char_literal47=(Token)match(input,34,FOLLOW_34_in_ignore_typedef318); 
            	    char_literal47_tree = 
            	    (Object)adaptor.create(char_literal47)
            	    ;
            	    adaptor.addChild(root_0, char_literal47_tree);


            	    }
            	    break;
            	case 8 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:85:4: '>'
            	    {
            	    char_literal48=(Token)match(input,36,FOLLOW_36_in_ignore_typedef323); 
            	    char_literal48_tree = 
            	    (Object)adaptor.create(char_literal48)
            	    ;
            	    adaptor.addChild(root_0, char_literal48_tree);


            	    }
            	    break;
            	case 9 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:86:4: 'enum'
            	    {
            	    string_literal49=(Token)match(input,50,FOLLOW_50_in_ignore_typedef328); 
            	    string_literal49_tree = 
            	    (Object)adaptor.create(string_literal49)
            	    ;
            	    adaptor.addChild(root_0, string_literal49_tree);


            	    }
            	    break;
            	case 10 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:87:4: 'struct'
            	    {
            	    string_literal50=(Token)match(input,51,FOLLOW_51_in_ignore_typedef333); 
            	    string_literal50_tree = 
            	    (Object)adaptor.create(string_literal50)
            	    ;
            	    adaptor.addChild(root_0, string_literal50_tree);


            	    }
            	    break;
            	case 11 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:88:4: ignore_braces
            	    {
            	    pushFollow(FOLLOW_ignore_braces_in_ignore_typedef338);
            	    ignore_braces51=ignore_braces();

            	    state._fsp--;

            	    adaptor.addChild(root_0, ignore_braces51.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt7 >= 1 ) break loop7;
                        EarlyExitException eee =
                            new EarlyExitException(7, input);
                        throw eee;
                }
                cnt7++;
            } while (true);


            char_literal52=(Token)match(input,33,FOLLOW_33_in_ignore_typedef345); 
            char_literal52_tree = 
            (Object)adaptor.create(char_literal52)
            ;
            adaptor.addChild(root_0, char_literal52_tree);


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ignore_typedef"


    public static class class_declaration_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_declaration_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:93:1: class_declaration_list : '@class' identifier_list ';' ;
    public final ObjectiveCParser.class_declaration_list_return class_declaration_list() throws RecognitionException {
        ObjectiveCParser.class_declaration_list_return retval = new ObjectiveCParser.class_declaration_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal53=null;
        Token char_literal55=null;
        ObjectiveCParser.identifier_list_return identifier_list54 =null;


        Object string_literal53_tree=null;
        Object char_literal55_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:93:24: ( '@class' identifier_list ';' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:94:2: '@class' identifier_list ';'
            {
            root_0 = (Object)adaptor.nil();


            string_literal53=(Token)match(input,37,FOLLOW_37_in_class_declaration_list356); 
            string_literal53_tree = 
            (Object)adaptor.create(string_literal53)
            ;
            adaptor.addChild(root_0, string_literal53_tree);


            pushFollow(FOLLOW_identifier_list_in_class_declaration_list358);
            identifier_list54=identifier_list();

            state._fsp--;

            adaptor.addChild(root_0, identifier_list54.getTree());

            char_literal55=(Token)match(input,33,FOLLOW_33_in_class_declaration_list360); 
            char_literal55_tree = 
            (Object)adaptor.create(char_literal55)
            ;
            adaptor.addChild(root_0, char_literal55_tree);


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_declaration_list"


    public static class interface_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "interface_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:97:1: interface_declaration : ( '@interface' | '@protocol' ) ( identifier_list ';' |class_name= Identifier ( ':' superclass_name= Identifier )? ( '(' category_name= Identifier ')' )? ( '<' identifier_list '>' )? ( ignore_braces )? ( '@optional' | '@required' | class_method_declaration | instance_method_declaration | ignore_property | ignore_enum | ignore_typedef )* '@end' ) ;
    public final ObjectiveCParser.interface_declaration_return interface_declaration() throws RecognitionException {
        ObjectiveCParser.interface_declaration_return retval = new ObjectiveCParser.interface_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token class_name=null;
        Token superclass_name=null;
        Token category_name=null;
        Token set56=null;
        Token char_literal58=null;
        Token char_literal59=null;
        Token char_literal60=null;
        Token char_literal61=null;
        Token char_literal62=null;
        Token char_literal64=null;
        Token string_literal66=null;
        Token string_literal67=null;
        Token string_literal73=null;
        ObjectiveCParser.identifier_list_return identifier_list57 =null;

        ObjectiveCParser.identifier_list_return identifier_list63 =null;

        ObjectiveCParser.ignore_braces_return ignore_braces65 =null;

        ObjectiveCParser.class_method_declaration_return class_method_declaration68 =null;

        ObjectiveCParser.instance_method_declaration_return instance_method_declaration69 =null;

        ObjectiveCParser.ignore_property_return ignore_property70 =null;

        ObjectiveCParser.ignore_enum_return ignore_enum71 =null;

        ObjectiveCParser.ignore_typedef_return ignore_typedef72 =null;


        Object class_name_tree=null;
        Object superclass_name_tree=null;
        Object category_name_tree=null;
        Object set56_tree=null;
        Object char_literal58_tree=null;
        Object char_literal59_tree=null;
        Object char_literal60_tree=null;
        Object char_literal61_tree=null;
        Object char_literal62_tree=null;
        Object char_literal64_tree=null;
        Object string_literal66_tree=null;
        Object string_literal67_tree=null;
        Object string_literal73_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:97:23: ( ( '@interface' | '@protocol' ) ( identifier_list ';' |class_name= Identifier ( ':' superclass_name= Identifier )? ( '(' category_name= Identifier ')' )? ( '<' identifier_list '>' )? ( ignore_braces )? ( '@optional' | '@required' | class_method_declaration | instance_method_declaration | ignore_property | ignore_enum | ignore_typedef )* '@end' ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:98:2: ( '@interface' | '@protocol' ) ( identifier_list ';' |class_name= Identifier ( ':' superclass_name= Identifier )? ( '(' category_name= Identifier ')' )? ( '<' identifier_list '>' )? ( ignore_braces )? ( '@optional' | '@required' | class_method_declaration | instance_method_declaration | ignore_property | ignore_enum | ignore_typedef )* '@end' )
            {
            root_0 = (Object)adaptor.nil();


            set56=(Token)input.LT(1);

            if ( input.LA(1)==39||input.LA(1)==44 ) {
                input.consume();
                adaptor.addChild(root_0, 
                (Object)adaptor.create(set56)
                );
                state.errorRecovery=false;
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:102:2: ( identifier_list ';' |class_name= Identifier ( ':' superclass_name= Identifier )? ( '(' category_name= Identifier ')' )? ( '<' identifier_list '>' )? ( ignore_braces )? ( '@optional' | '@required' | class_method_declaration | instance_method_declaration | ignore_property | ignore_enum | ignore_typedef )* '@end' )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==Identifier) ) {
                int LA13_1 = input.LA(2);

                if ( (LA13_1==29||LA13_1==33) ) {
                    alt13=1;
                }
                else if ( (LA13_1==25||LA13_1==28||LA13_1==30||LA13_1==32||LA13_1==34||LA13_1==38||LA13_1==40||LA13_1==42||LA13_1==46||LA13_1==50||(LA13_1 >= 52 && LA13_1 <= 53)) ) {
                    alt13=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;

                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;

            }
            switch (alt13) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:103:2: identifier_list ';'
                    {
                    pushFollow(FOLLOW_identifier_list_in_interface_declaration388);
                    identifier_list57=identifier_list();

                    state._fsp--;

                    adaptor.addChild(root_0, identifier_list57.getTree());

                    char_literal58=(Token)match(input,33,FOLLOW_33_in_interface_declaration390); 
                    char_literal58_tree = 
                    (Object)adaptor.create(char_literal58)
                    ;
                    adaptor.addChild(root_0, char_literal58_tree);


                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:104:4: class_name= Identifier ( ':' superclass_name= Identifier )? ( '(' category_name= Identifier ')' )? ( '<' identifier_list '>' )? ( ignore_braces )? ( '@optional' | '@required' | class_method_declaration | instance_method_declaration | ignore_property | ignore_enum | ignore_typedef )* '@end'
                    {
                    class_name=(Token)match(input,Identifier,FOLLOW_Identifier_in_interface_declaration399); 
                    class_name_tree = 
                    (Object)adaptor.create(class_name)
                    ;
                    adaptor.addChild(root_0, class_name_tree);


                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:104:28: ( ':' superclass_name= Identifier )?
                    int alt8=2;
                    int LA8_0 = input.LA(1);

                    if ( (LA8_0==32) ) {
                        alt8=1;
                    }
                    switch (alt8) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:104:29: ':' superclass_name= Identifier
                            {
                            char_literal59=(Token)match(input,32,FOLLOW_32_in_interface_declaration402); 
                            char_literal59_tree = 
                            (Object)adaptor.create(char_literal59)
                            ;
                            adaptor.addChild(root_0, char_literal59_tree);


                            superclass_name=(Token)match(input,Identifier,FOLLOW_Identifier_in_interface_declaration408); 
                            superclass_name_tree = 
                            (Object)adaptor.create(superclass_name)
                            ;
                            adaptor.addChild(root_0, superclass_name_tree);


                            }
                            break;

                    }


                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:104:64: ( '(' category_name= Identifier ')' )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==25) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:104:65: '(' category_name= Identifier ')'
                            {
                            char_literal60=(Token)match(input,25,FOLLOW_25_in_interface_declaration413); 
                            char_literal60_tree = 
                            (Object)adaptor.create(char_literal60)
                            ;
                            adaptor.addChild(root_0, char_literal60_tree);


                            category_name=(Token)match(input,Identifier,FOLLOW_Identifier_in_interface_declaration419); 
                            category_name_tree = 
                            (Object)adaptor.create(category_name)
                            ;
                            adaptor.addChild(root_0, category_name_tree);


                            char_literal61=(Token)match(input,26,FOLLOW_26_in_interface_declaration421); 
                            char_literal61_tree = 
                            (Object)adaptor.create(char_literal61)
                            ;
                            adaptor.addChild(root_0, char_literal61_tree);


                            }
                            break;

                    }


                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:104:102: ( '<' identifier_list '>' )?
                    int alt10=2;
                    int LA10_0 = input.LA(1);

                    if ( (LA10_0==34) ) {
                        alt10=1;
                    }
                    switch (alt10) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:104:103: '<' identifier_list '>'
                            {
                            char_literal62=(Token)match(input,34,FOLLOW_34_in_interface_declaration426); 
                            char_literal62_tree = 
                            (Object)adaptor.create(char_literal62)
                            ;
                            adaptor.addChild(root_0, char_literal62_tree);


                            pushFollow(FOLLOW_identifier_list_in_interface_declaration428);
                            identifier_list63=identifier_list();

                            state._fsp--;

                            adaptor.addChild(root_0, identifier_list63.getTree());

                            char_literal64=(Token)match(input,36,FOLLOW_36_in_interface_declaration430); 
                            char_literal64_tree = 
                            (Object)adaptor.create(char_literal64)
                            ;
                            adaptor.addChild(root_0, char_literal64_tree);


                            }
                            break;

                    }


                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:104:129: ( ignore_braces )?
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==53) ) {
                        alt11=1;
                    }
                    switch (alt11) {
                        case 1 :
                            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:104:129: ignore_braces
                            {
                            pushFollow(FOLLOW_ignore_braces_in_interface_declaration434);
                            ignore_braces65=ignore_braces();

                            state._fsp--;

                            adaptor.addChild(root_0, ignore_braces65.getTree());

                            }
                            break;

                    }


                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:105:2: ( '@optional' | '@required' | class_method_declaration | instance_method_declaration | ignore_property | ignore_enum | ignore_typedef )*
                    loop12:
                    do {
                        int alt12=8;
                        switch ( input.LA(1) ) {
                        case 40:
                            {
                            alt12=1;
                            }
                            break;
                        case 46:
                            {
                            alt12=2;
                            }
                            break;
                        case 28:
                            {
                            alt12=3;
                            }
                            break;
                        case 30:
                            {
                            alt12=4;
                            }
                            break;
                        case 42:
                            {
                            alt12=5;
                            }
                            break;
                        case 50:
                            {
                            alt12=6;
                            }
                            break;
                        case 52:
                            {
                            alt12=7;
                            }
                            break;

                        }

                        switch (alt12) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:106:2: '@optional'
                    	    {
                    	    string_literal66=(Token)match(input,40,FOLLOW_40_in_interface_declaration441); 
                    	    string_literal66_tree = 
                    	    (Object)adaptor.create(string_literal66)
                    	    ;
                    	    adaptor.addChild(root_0, string_literal66_tree);


                    	    }
                    	    break;
                    	case 2 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:107:4: '@required'
                    	    {
                    	    string_literal67=(Token)match(input,46,FOLLOW_46_in_interface_declaration446); 
                    	    string_literal67_tree = 
                    	    (Object)adaptor.create(string_literal67)
                    	    ;
                    	    adaptor.addChild(root_0, string_literal67_tree);


                    	    }
                    	    break;
                    	case 3 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:108:4: class_method_declaration
                    	    {
                    	    pushFollow(FOLLOW_class_method_declaration_in_interface_declaration451);
                    	    class_method_declaration68=class_method_declaration();

                    	    state._fsp--;

                    	    adaptor.addChild(root_0, class_method_declaration68.getTree());

                    	    }
                    	    break;
                    	case 4 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:109:4: instance_method_declaration
                    	    {
                    	    pushFollow(FOLLOW_instance_method_declaration_in_interface_declaration456);
                    	    instance_method_declaration69=instance_method_declaration();

                    	    state._fsp--;

                    	    adaptor.addChild(root_0, instance_method_declaration69.getTree());

                    	    }
                    	    break;
                    	case 5 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:110:4: ignore_property
                    	    {
                    	    pushFollow(FOLLOW_ignore_property_in_interface_declaration461);
                    	    ignore_property70=ignore_property();

                    	    state._fsp--;

                    	    adaptor.addChild(root_0, ignore_property70.getTree());

                    	    }
                    	    break;
                    	case 6 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:111:4: ignore_enum
                    	    {
                    	    pushFollow(FOLLOW_ignore_enum_in_interface_declaration466);
                    	    ignore_enum71=ignore_enum();

                    	    state._fsp--;

                    	    adaptor.addChild(root_0, ignore_enum71.getTree());

                    	    }
                    	    break;
                    	case 7 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:112:4: ignore_typedef
                    	    {
                    	    pushFollow(FOLLOW_ignore_typedef_in_interface_declaration471);
                    	    ignore_typedef72=ignore_typedef();

                    	    state._fsp--;

                    	    adaptor.addChild(root_0, ignore_typedef72.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);


                    string_literal73=(Token)match(input,38,FOLLOW_38_in_interface_declaration480); 
                    string_literal73_tree = 
                    (Object)adaptor.create(string_literal73)
                    ;
                    adaptor.addChild(root_0, string_literal73_tree);


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "interface_declaration"


    public static class ignore_property_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "ignore_property"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:119:1: ignore_property : '@property' ( constant | '*' | '(' | ')' | '=' | ',' | '<' | '>' )+ ';' ;
    public final ObjectiveCParser.ignore_property_return ignore_property() throws RecognitionException {
        ObjectiveCParser.ignore_property_return retval = new ObjectiveCParser.ignore_property_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token string_literal74=null;
        Token char_literal76=null;
        Token char_literal77=null;
        Token char_literal78=null;
        Token char_literal79=null;
        Token char_literal80=null;
        Token char_literal81=null;
        Token char_literal82=null;
        Token char_literal83=null;
        ObjectiveCParser.constant_return constant75 =null;


        Object string_literal74_tree=null;
        Object char_literal76_tree=null;
        Object char_literal77_tree=null;
        Object char_literal78_tree=null;
        Object char_literal79_tree=null;
        Object char_literal80_tree=null;
        Object char_literal81_tree=null;
        Object char_literal82_tree=null;
        Object char_literal83_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:119:17: ( '@property' ( constant | '*' | '(' | ')' | '=' | ',' | '<' | '>' )+ ';' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:120:2: '@property' ( constant | '*' | '(' | ')' | '=' | ',' | '<' | '>' )+ ';'
            {
            root_0 = (Object)adaptor.nil();


            string_literal74=(Token)match(input,42,FOLLOW_42_in_ignore_property494); 
            string_literal74_tree = 
            (Object)adaptor.create(string_literal74)
            ;
            adaptor.addChild(root_0, string_literal74_tree);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:121:2: ( constant | '*' | '(' | ')' | '=' | ',' | '<' | '>' )+
            int cnt14=0;
            loop14:
            do {
                int alt14=9;
                switch ( input.LA(1) ) {
                case Hex:
                case Identifier:
                case Integer:
                    {
                    alt14=1;
                    }
                    break;
                case 27:
                    {
                    alt14=2;
                    }
                    break;
                case 25:
                    {
                    alt14=3;
                    }
                    break;
                case 26:
                    {
                    alt14=4;
                    }
                    break;
                case 35:
                    {
                    alt14=5;
                    }
                    break;
                case 29:
                    {
                    alt14=6;
                    }
                    break;
                case 34:
                    {
                    alt14=7;
                    }
                    break;
                case 36:
                    {
                    alt14=8;
                    }
                    break;

                }

                switch (alt14) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:122:2: constant
            	    {
            	    pushFollow(FOLLOW_constant_in_ignore_property500);
            	    constant75=constant();

            	    state._fsp--;

            	    adaptor.addChild(root_0, constant75.getTree());

            	    }
            	    break;
            	case 2 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:123:4: '*'
            	    {
            	    char_literal76=(Token)match(input,27,FOLLOW_27_in_ignore_property505); 
            	    char_literal76_tree = 
            	    (Object)adaptor.create(char_literal76)
            	    ;
            	    adaptor.addChild(root_0, char_literal76_tree);


            	    }
            	    break;
            	case 3 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:124:4: '('
            	    {
            	    char_literal77=(Token)match(input,25,FOLLOW_25_in_ignore_property510); 
            	    char_literal77_tree = 
            	    (Object)adaptor.create(char_literal77)
            	    ;
            	    adaptor.addChild(root_0, char_literal77_tree);


            	    }
            	    break;
            	case 4 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:125:4: ')'
            	    {
            	    char_literal78=(Token)match(input,26,FOLLOW_26_in_ignore_property515); 
            	    char_literal78_tree = 
            	    (Object)adaptor.create(char_literal78)
            	    ;
            	    adaptor.addChild(root_0, char_literal78_tree);


            	    }
            	    break;
            	case 5 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:126:4: '='
            	    {
            	    char_literal79=(Token)match(input,35,FOLLOW_35_in_ignore_property520); 
            	    char_literal79_tree = 
            	    (Object)adaptor.create(char_literal79)
            	    ;
            	    adaptor.addChild(root_0, char_literal79_tree);


            	    }
            	    break;
            	case 6 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:127:4: ','
            	    {
            	    char_literal80=(Token)match(input,29,FOLLOW_29_in_ignore_property525); 
            	    char_literal80_tree = 
            	    (Object)adaptor.create(char_literal80)
            	    ;
            	    adaptor.addChild(root_0, char_literal80_tree);


            	    }
            	    break;
            	case 7 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:128:4: '<'
            	    {
            	    char_literal81=(Token)match(input,34,FOLLOW_34_in_ignore_property530); 
            	    char_literal81_tree = 
            	    (Object)adaptor.create(char_literal81)
            	    ;
            	    adaptor.addChild(root_0, char_literal81_tree);


            	    }
            	    break;
            	case 8 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:129:4: '>'
            	    {
            	    char_literal82=(Token)match(input,36,FOLLOW_36_in_ignore_property535); 
            	    char_literal82_tree = 
            	    (Object)adaptor.create(char_literal82)
            	    ;
            	    adaptor.addChild(root_0, char_literal82_tree);


            	    }
            	    break;

            	default :
            	    if ( cnt14 >= 1 ) break loop14;
                        EarlyExitException eee =
                            new EarlyExitException(14, input);
                        throw eee;
                }
                cnt14++;
            } while (true);


            char_literal83=(Token)match(input,33,FOLLOW_33_in_ignore_property542); 
            char_literal83_tree = 
            (Object)adaptor.create(char_literal83)
            ;
            adaptor.addChild(root_0, char_literal83_tree);


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ignore_property"


    public static class class_method_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "class_method_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:134:1: class_method_declaration : '+' method_declaration ;
    public final ObjectiveCParser.class_method_declaration_return class_method_declaration() throws RecognitionException {
        ObjectiveCParser.class_method_declaration_return retval = new ObjectiveCParser.class_method_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal84=null;
        ObjectiveCParser.method_declaration_return method_declaration85 =null;


        Object char_literal84_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:134:26: ( '+' method_declaration )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:135:2: '+' method_declaration
            {
            root_0 = (Object)adaptor.nil();


            char_literal84=(Token)match(input,28,FOLLOW_28_in_class_method_declaration553); 
            char_literal84_tree = 
            (Object)adaptor.create(char_literal84)
            ;
            adaptor.addChild(root_0, char_literal84_tree);


            pushFollow(FOLLOW_method_declaration_in_class_method_declaration555);
            method_declaration85=method_declaration();

            state._fsp--;

            adaptor.addChild(root_0, method_declaration85.getTree());

            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "class_method_declaration"


    public static class instance_method_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "instance_method_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:138:1: instance_method_declaration : '-' method_declaration ;
    public final ObjectiveCParser.instance_method_declaration_return instance_method_declaration() throws RecognitionException {
        ObjectiveCParser.instance_method_declaration_return retval = new ObjectiveCParser.instance_method_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal86=null;
        ObjectiveCParser.method_declaration_return method_declaration87 =null;


        Object char_literal86_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:138:29: ( '-' method_declaration )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:139:2: '-' method_declaration
            {
            root_0 = (Object)adaptor.nil();


            char_literal86=(Token)match(input,30,FOLLOW_30_in_instance_method_declaration566); 
            char_literal86_tree = 
            (Object)adaptor.create(char_literal86)
            ;
            adaptor.addChild(root_0, char_literal86_tree);


            pushFollow(FOLLOW_method_declaration_in_instance_method_declaration568);
            method_declaration87=method_declaration();

            state._fsp--;

            adaptor.addChild(root_0, method_declaration87.getTree());

            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "instance_method_declaration"


    public static class method_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_declaration"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:142:1: method_declaration : type_name Identifier ( method_argument0 ( method_argumentN )* )? ( ',' '...' )? ( macro_call )? ';' ;
    public final ObjectiveCParser.method_declaration_return method_declaration() throws RecognitionException {
        ObjectiveCParser.method_declaration_return retval = new ObjectiveCParser.method_declaration_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token Identifier89=null;
        Token char_literal92=null;
        Token string_literal93=null;
        Token char_literal95=null;
        ObjectiveCParser.type_name_return type_name88 =null;

        ObjectiveCParser.method_argument0_return method_argument090 =null;

        ObjectiveCParser.method_argumentN_return method_argumentN91 =null;

        ObjectiveCParser.macro_call_return macro_call94 =null;


        Object Identifier89_tree=null;
        Object char_literal92_tree=null;
        Object string_literal93_tree=null;
        Object char_literal95_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:142:20: ( type_name Identifier ( method_argument0 ( method_argumentN )* )? ( ',' '...' )? ( macro_call )? ';' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:143:2: type_name Identifier ( method_argument0 ( method_argumentN )* )? ( ',' '...' )? ( macro_call )? ';'
            {
            root_0 = (Object)adaptor.nil();


            pushFollow(FOLLOW_type_name_in_method_declaration579);
            type_name88=type_name();

            state._fsp--;

            adaptor.addChild(root_0, type_name88.getTree());

            Identifier89=(Token)match(input,Identifier,FOLLOW_Identifier_in_method_declaration581); 
            Identifier89_tree = 
            (Object)adaptor.create(Identifier89)
            ;
            adaptor.addChild(root_0, Identifier89_tree);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:143:23: ( method_argument0 ( method_argumentN )* )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==32) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:143:24: method_argument0 ( method_argumentN )*
                    {
                    pushFollow(FOLLOW_method_argument0_in_method_declaration584);
                    method_argument090=method_argument0();

                    state._fsp--;

                    adaptor.addChild(root_0, method_argument090.getTree());

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:143:41: ( method_argumentN )*
                    loop15:
                    do {
                        int alt15=2;
                        int LA15_0 = input.LA(1);

                        if ( (LA15_0==Identifier) ) {
                            int LA15_2 = input.LA(2);

                            if ( (LA15_2==32) ) {
                                alt15=1;
                            }


                        }


                        switch (alt15) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:143:41: method_argumentN
                    	    {
                    	    pushFollow(FOLLOW_method_argumentN_in_method_declaration586);
                    	    method_argumentN91=method_argumentN();

                    	    state._fsp--;

                    	    adaptor.addChild(root_0, method_argumentN91.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop15;
                        }
                    } while (true);


                    }
                    break;

            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:143:61: ( ',' '...' )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==29) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:143:62: ',' '...'
                    {
                    char_literal92=(Token)match(input,29,FOLLOW_29_in_method_declaration592); 
                    char_literal92_tree = 
                    (Object)adaptor.create(char_literal92)
                    ;
                    adaptor.addChild(root_0, char_literal92_tree);


                    string_literal93=(Token)match(input,31,FOLLOW_31_in_method_declaration594); 
                    string_literal93_tree = 
                    (Object)adaptor.create(string_literal93)
                    ;
                    adaptor.addChild(root_0, string_literal93_tree);


                    }
                    break;

            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:143:74: ( macro_call )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==Identifier) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:143:74: macro_call
                    {
                    pushFollow(FOLLOW_macro_call_in_method_declaration598);
                    macro_call94=macro_call();

                    state._fsp--;

                    adaptor.addChild(root_0, macro_call94.getTree());

                    }
                    break;

            }


            char_literal95=(Token)match(input,33,FOLLOW_33_in_method_declaration601); 
            char_literal95_tree = 
            (Object)adaptor.create(char_literal95)
            ;
            adaptor.addChild(root_0, char_literal95_tree);


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_declaration"


    public static class method_argument0_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_argument0"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:146:1: method_argument0 : ':' ( type_name )? Identifier ;
    public final ObjectiveCParser.method_argument0_return method_argument0() throws RecognitionException {
        ObjectiveCParser.method_argument0_return retval = new ObjectiveCParser.method_argument0_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal96=null;
        Token Identifier98=null;
        ObjectiveCParser.type_name_return type_name97 =null;


        Object char_literal96_tree=null;
        Object Identifier98_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:146:18: ( ':' ( type_name )? Identifier )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:147:2: ':' ( type_name )? Identifier
            {
            root_0 = (Object)adaptor.nil();


            char_literal96=(Token)match(input,32,FOLLOW_32_in_method_argument0612); 
            char_literal96_tree = 
            (Object)adaptor.create(char_literal96)
            ;
            adaptor.addChild(root_0, char_literal96_tree);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:147:6: ( type_name )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==25) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:147:6: type_name
                    {
                    pushFollow(FOLLOW_type_name_in_method_argument0614);
                    type_name97=type_name();

                    state._fsp--;

                    adaptor.addChild(root_0, type_name97.getTree());

                    }
                    break;

            }


            Identifier98=(Token)match(input,Identifier,FOLLOW_Identifier_in_method_argument0617); 
            Identifier98_tree = 
            (Object)adaptor.create(Identifier98)
            ;
            adaptor.addChild(root_0, Identifier98_tree);


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_argument0"


    public static class method_argumentN_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "method_argumentN"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:150:1: method_argumentN : Identifier ':' type_name Identifier ;
    public final ObjectiveCParser.method_argumentN_return method_argumentN() throws RecognitionException {
        ObjectiveCParser.method_argumentN_return retval = new ObjectiveCParser.method_argumentN_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token Identifier99=null;
        Token char_literal100=null;
        Token Identifier102=null;
        ObjectiveCParser.type_name_return type_name101 =null;


        Object Identifier99_tree=null;
        Object char_literal100_tree=null;
        Object Identifier102_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:150:18: ( Identifier ':' type_name Identifier )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:151:2: Identifier ':' type_name Identifier
            {
            root_0 = (Object)adaptor.nil();


            Identifier99=(Token)match(input,Identifier,FOLLOW_Identifier_in_method_argumentN628); 
            Identifier99_tree = 
            (Object)adaptor.create(Identifier99)
            ;
            adaptor.addChild(root_0, Identifier99_tree);


            char_literal100=(Token)match(input,32,FOLLOW_32_in_method_argumentN630); 
            char_literal100_tree = 
            (Object)adaptor.create(char_literal100)
            ;
            adaptor.addChild(root_0, char_literal100_tree);


            pushFollow(FOLLOW_type_name_in_method_argumentN632);
            type_name101=type_name();

            state._fsp--;

            adaptor.addChild(root_0, type_name101.getTree());

            Identifier102=(Token)match(input,Identifier,FOLLOW_Identifier_in_method_argumentN634); 
            Identifier102_tree = 
            (Object)adaptor.create(Identifier102)
            ;
            adaptor.addChild(root_0, Identifier102_tree);


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "method_argumentN"


    public static class type_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "type_name"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:154:1: type_name : '(' ( constant | '*' | '^' | '<' | '>' | '[' | ']' | ',' | type_name )+ ')' ;
    public final ObjectiveCParser.type_name_return type_name() throws RecognitionException {
        ObjectiveCParser.type_name_return retval = new ObjectiveCParser.type_name_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token char_literal103=null;
        Token char_literal105=null;
        Token char_literal106=null;
        Token char_literal107=null;
        Token char_literal108=null;
        Token char_literal109=null;
        Token char_literal110=null;
        Token char_literal111=null;
        Token char_literal113=null;
        ObjectiveCParser.constant_return constant104 =null;

        ObjectiveCParser.type_name_return type_name112 =null;


        Object char_literal103_tree=null;
        Object char_literal105_tree=null;
        Object char_literal106_tree=null;
        Object char_literal107_tree=null;
        Object char_literal108_tree=null;
        Object char_literal109_tree=null;
        Object char_literal110_tree=null;
        Object char_literal111_tree=null;
        Object char_literal113_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:154:11: ( '(' ( constant | '*' | '^' | '<' | '>' | '[' | ']' | ',' | type_name )+ ')' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:155:2: '(' ( constant | '*' | '^' | '<' | '>' | '[' | ']' | ',' | type_name )+ ')'
            {
            root_0 = (Object)adaptor.nil();


            char_literal103=(Token)match(input,25,FOLLOW_25_in_type_name645); 
            char_literal103_tree = 
            (Object)adaptor.create(char_literal103)
            ;
            adaptor.addChild(root_0, char_literal103_tree);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:156:2: ( constant | '*' | '^' | '<' | '>' | '[' | ']' | ',' | type_name )+
            int cnt20=0;
            loop20:
            do {
                int alt20=10;
                switch ( input.LA(1) ) {
                case Hex:
                case Identifier:
                case Integer:
                    {
                    alt20=1;
                    }
                    break;
                case 27:
                    {
                    alt20=2;
                    }
                    break;
                case 49:
                    {
                    alt20=3;
                    }
                    break;
                case 34:
                    {
                    alt20=4;
                    }
                    break;
                case 36:
                    {
                    alt20=5;
                    }
                    break;
                case 47:
                    {
                    alt20=6;
                    }
                    break;
                case 48:
                    {
                    alt20=7;
                    }
                    break;
                case 29:
                    {
                    alt20=8;
                    }
                    break;
                case 25:
                    {
                    alt20=9;
                    }
                    break;

                }

                switch (alt20) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:157:2: constant
            	    {
            	    pushFollow(FOLLOW_constant_in_type_name651);
            	    constant104=constant();

            	    state._fsp--;

            	    adaptor.addChild(root_0, constant104.getTree());

            	    }
            	    break;
            	case 2 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:158:4: '*'
            	    {
            	    char_literal105=(Token)match(input,27,FOLLOW_27_in_type_name656); 
            	    char_literal105_tree = 
            	    (Object)adaptor.create(char_literal105)
            	    ;
            	    adaptor.addChild(root_0, char_literal105_tree);


            	    }
            	    break;
            	case 3 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:159:4: '^'
            	    {
            	    char_literal106=(Token)match(input,49,FOLLOW_49_in_type_name661); 
            	    char_literal106_tree = 
            	    (Object)adaptor.create(char_literal106)
            	    ;
            	    adaptor.addChild(root_0, char_literal106_tree);


            	    }
            	    break;
            	case 4 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:160:4: '<'
            	    {
            	    char_literal107=(Token)match(input,34,FOLLOW_34_in_type_name666); 
            	    char_literal107_tree = 
            	    (Object)adaptor.create(char_literal107)
            	    ;
            	    adaptor.addChild(root_0, char_literal107_tree);


            	    }
            	    break;
            	case 5 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:161:4: '>'
            	    {
            	    char_literal108=(Token)match(input,36,FOLLOW_36_in_type_name671); 
            	    char_literal108_tree = 
            	    (Object)adaptor.create(char_literal108)
            	    ;
            	    adaptor.addChild(root_0, char_literal108_tree);


            	    }
            	    break;
            	case 6 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:162:4: '['
            	    {
            	    char_literal109=(Token)match(input,47,FOLLOW_47_in_type_name676); 
            	    char_literal109_tree = 
            	    (Object)adaptor.create(char_literal109)
            	    ;
            	    adaptor.addChild(root_0, char_literal109_tree);


            	    }
            	    break;
            	case 7 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:163:4: ']'
            	    {
            	    char_literal110=(Token)match(input,48,FOLLOW_48_in_type_name681); 
            	    char_literal110_tree = 
            	    (Object)adaptor.create(char_literal110)
            	    ;
            	    adaptor.addChild(root_0, char_literal110_tree);


            	    }
            	    break;
            	case 8 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:164:4: ','
            	    {
            	    char_literal111=(Token)match(input,29,FOLLOW_29_in_type_name686); 
            	    char_literal111_tree = 
            	    (Object)adaptor.create(char_literal111)
            	    ;
            	    adaptor.addChild(root_0, char_literal111_tree);


            	    }
            	    break;
            	case 9 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:165:4: type_name
            	    {
            	    pushFollow(FOLLOW_type_name_in_type_name691);
            	    type_name112=type_name();

            	    state._fsp--;

            	    adaptor.addChild(root_0, type_name112.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt20 >= 1 ) break loop20;
                        EarlyExitException eee =
                            new EarlyExitException(20, input);
                        throw eee;
                }
                cnt20++;
            } while (true);


            char_literal113=(Token)match(input,26,FOLLOW_26_in_type_name698); 
            char_literal113_tree = 
            (Object)adaptor.create(char_literal113)
            ;
            adaptor.addChild(root_0, char_literal113_tree);


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "type_name"


    public static class macro_call_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "macro_call"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:170:1: macro_call : Identifier '(' constant ( ',' constant )* ')' ;
    public final ObjectiveCParser.macro_call_return macro_call() throws RecognitionException {
        ObjectiveCParser.macro_call_return retval = new ObjectiveCParser.macro_call_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token Identifier114=null;
        Token char_literal115=null;
        Token char_literal117=null;
        Token char_literal119=null;
        ObjectiveCParser.constant_return constant116 =null;

        ObjectiveCParser.constant_return constant118 =null;


        Object Identifier114_tree=null;
        Object char_literal115_tree=null;
        Object char_literal117_tree=null;
        Object char_literal119_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:170:12: ( Identifier '(' constant ( ',' constant )* ')' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:171:2: Identifier '(' constant ( ',' constant )* ')'
            {
            root_0 = (Object)adaptor.nil();


            Identifier114=(Token)match(input,Identifier,FOLLOW_Identifier_in_macro_call709); 
            Identifier114_tree = 
            (Object)adaptor.create(Identifier114)
            ;
            adaptor.addChild(root_0, Identifier114_tree);


            char_literal115=(Token)match(input,25,FOLLOW_25_in_macro_call711); 
            char_literal115_tree = 
            (Object)adaptor.create(char_literal115)
            ;
            adaptor.addChild(root_0, char_literal115_tree);


            pushFollow(FOLLOW_constant_in_macro_call713);
            constant116=constant();

            state._fsp--;

            adaptor.addChild(root_0, constant116.getTree());

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:171:26: ( ',' constant )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==29) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:171:27: ',' constant
            	    {
            	    char_literal117=(Token)match(input,29,FOLLOW_29_in_macro_call716); 
            	    char_literal117_tree = 
            	    (Object)adaptor.create(char_literal117)
            	    ;
            	    adaptor.addChild(root_0, char_literal117_tree);


            	    pushFollow(FOLLOW_constant_in_macro_call718);
            	    constant118=constant();

            	    state._fsp--;

            	    adaptor.addChild(root_0, constant118.getTree());

            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            char_literal119=(Token)match(input,26,FOLLOW_26_in_macro_call722); 
            char_literal119_tree = 
            (Object)adaptor.create(char_literal119)
            ;
            adaptor.addChild(root_0, char_literal119_tree);


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "macro_call"


    public static class identifier_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "identifier_list"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:174:1: identifier_list : Identifier ( ',' Identifier )* ;
    public final ObjectiveCParser.identifier_list_return identifier_list() throws RecognitionException {
        ObjectiveCParser.identifier_list_return retval = new ObjectiveCParser.identifier_list_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token Identifier120=null;
        Token char_literal121=null;
        Token Identifier122=null;

        Object Identifier120_tree=null;
        Object char_literal121_tree=null;
        Object Identifier122_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:174:17: ( Identifier ( ',' Identifier )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:175:2: Identifier ( ',' Identifier )*
            {
            root_0 = (Object)adaptor.nil();


            Identifier120=(Token)match(input,Identifier,FOLLOW_Identifier_in_identifier_list733); 
            Identifier120_tree = 
            (Object)adaptor.create(Identifier120)
            ;
            adaptor.addChild(root_0, Identifier120_tree);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:175:13: ( ',' Identifier )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==29) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:175:14: ',' Identifier
            	    {
            	    char_literal121=(Token)match(input,29,FOLLOW_29_in_identifier_list736); 
            	    char_literal121_tree = 
            	    (Object)adaptor.create(char_literal121)
            	    ;
            	    adaptor.addChild(root_0, char_literal121_tree);


            	    Identifier122=(Token)match(input,Identifier,FOLLOW_Identifier_in_identifier_list738); 
            	    Identifier122_tree = 
            	    (Object)adaptor.create(Identifier122)
            	    ;
            	    adaptor.addChild(root_0, Identifier122_tree);


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "identifier_list"


    public static class constant_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };


    // $ANTLR start "constant"
    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:178:1: constant : ( Identifier | Integer | Hex );
    public final ObjectiveCParser.constant_return constant() throws RecognitionException {
        ObjectiveCParser.constant_return retval = new ObjectiveCParser.constant_return();
        retval.start = input.LT(1);


        Object root_0 = null;

        Token set123=null;

        Object set123_tree=null;

        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:178:10: ( Identifier | Integer | Hex )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
            {
            root_0 = (Object)adaptor.nil();


            set123=(Token)input.LT(1);

            if ( input.LA(1)==Hex||(input.LA(1) >= Identifier && input.LA(1) <= Integer) ) {
                input.consume();
                adaptor.addChild(root_0, 
                (Object)adaptor.create(set123)
                );
                state.errorRecovery=false;
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);


            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "constant"

    // Delegated rules


 

    public static final BitSet FOLLOW_external_declaration_in_translation_unit60 = new BitSet(new long[]{0x001C10A000001000L});
    public static final BitSet FOLLOW_EOF_in_translation_unit63 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ignore_enum_in_external_declaration85 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ignore_struct_in_external_declaration90 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ignore_typedef_in_external_declaration95 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_declaration_in_external_declaration100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_declaration_list_in_external_declaration105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_macro_call_in_external_declaration110 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_33_in_external_declaration112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_ignore_braces124 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_ignore_braces_in_ignore_braces130 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_constant_in_ignore_braces135 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_27_in_ignore_braces140 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_33_in_ignore_braces145 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_47_in_ignore_braces150 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_48_in_ignore_braces155 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_32_in_ignore_braces160 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_35_in_ignore_braces165 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_29_in_ignore_braces170 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_25_in_ignore_braces175 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_26_in_ignore_braces180 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_30_in_ignore_braces185 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_34_in_ignore_braces190 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_36_in_ignore_braces195 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_54_in_ignore_braces200 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_49_in_ignore_braces205 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_41_in_ignore_braces210 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_43_in_ignore_braces215 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_45_in_ignore_braces220 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_50_in_ignore_braces225 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_51_in_ignore_braces230 = new BitSet(new long[]{0x00EFAA1F6E003400L});
    public static final BitSet FOLLOW_55_in_ignore_braces237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_ignore_enum248 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_ignore_braces_in_ignore_enum250 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_ignore_enum252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ignore_struct263 = new BitSet(new long[]{0x0020000200003400L});
    public static final BitSet FOLLOW_constant_in_ignore_struct265 = new BitSet(new long[]{0x0020000200000000L});
    public static final BitSet FOLLOW_ignore_braces_in_ignore_struct268 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_ignore_struct271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_ignore_typedef282 = new BitSet(new long[]{0x002C00146E003400L});
    public static final BitSet FOLLOW_constant_in_ignore_typedef288 = new BitSet(new long[]{0x002C00166E003400L});
    public static final BitSet FOLLOW_27_in_ignore_typedef293 = new BitSet(new long[]{0x002C00166E003400L});
    public static final BitSet FOLLOW_30_in_ignore_typedef298 = new BitSet(new long[]{0x002C00166E003400L});
    public static final BitSet FOLLOW_25_in_ignore_typedef303 = new BitSet(new long[]{0x002C00166E003400L});
    public static final BitSet FOLLOW_26_in_ignore_typedef308 = new BitSet(new long[]{0x002C00166E003400L});
    public static final BitSet FOLLOW_29_in_ignore_typedef313 = new BitSet(new long[]{0x002C00166E003400L});
    public static final BitSet FOLLOW_34_in_ignore_typedef318 = new BitSet(new long[]{0x002C00166E003400L});
    public static final BitSet FOLLOW_36_in_ignore_typedef323 = new BitSet(new long[]{0x002C00166E003400L});
    public static final BitSet FOLLOW_50_in_ignore_typedef328 = new BitSet(new long[]{0x002C00166E003400L});
    public static final BitSet FOLLOW_51_in_ignore_typedef333 = new BitSet(new long[]{0x002C00166E003400L});
    public static final BitSet FOLLOW_ignore_braces_in_ignore_typedef338 = new BitSet(new long[]{0x002C00166E003400L});
    public static final BitSet FOLLOW_33_in_ignore_typedef345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_class_declaration_list356 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_identifier_list_in_class_declaration_list358 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_class_declaration_list360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_interface_declaration371 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_identifier_list_in_interface_declaration388 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_interface_declaration390 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_interface_declaration399 = new BitSet(new long[]{0x0034454552000000L});
    public static final BitSet FOLLOW_32_in_interface_declaration402 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_Identifier_in_interface_declaration408 = new BitSet(new long[]{0x0034454452000000L});
    public static final BitSet FOLLOW_25_in_interface_declaration413 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_Identifier_in_interface_declaration419 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_interface_declaration421 = new BitSet(new long[]{0x0034454450000000L});
    public static final BitSet FOLLOW_34_in_interface_declaration426 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_identifier_list_in_interface_declaration428 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_interface_declaration430 = new BitSet(new long[]{0x0034454050000000L});
    public static final BitSet FOLLOW_ignore_braces_in_interface_declaration434 = new BitSet(new long[]{0x0014454050000000L});
    public static final BitSet FOLLOW_40_in_interface_declaration441 = new BitSet(new long[]{0x0014454050000000L});
    public static final BitSet FOLLOW_46_in_interface_declaration446 = new BitSet(new long[]{0x0014454050000000L});
    public static final BitSet FOLLOW_class_method_declaration_in_interface_declaration451 = new BitSet(new long[]{0x0014454050000000L});
    public static final BitSet FOLLOW_instance_method_declaration_in_interface_declaration456 = new BitSet(new long[]{0x0014454050000000L});
    public static final BitSet FOLLOW_ignore_property_in_interface_declaration461 = new BitSet(new long[]{0x0014454050000000L});
    public static final BitSet FOLLOW_ignore_enum_in_interface_declaration466 = new BitSet(new long[]{0x0014454050000000L});
    public static final BitSet FOLLOW_ignore_typedef_in_interface_declaration471 = new BitSet(new long[]{0x0014454050000000L});
    public static final BitSet FOLLOW_38_in_interface_declaration480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ignore_property494 = new BitSet(new long[]{0x0000001C2E003400L});
    public static final BitSet FOLLOW_constant_in_ignore_property500 = new BitSet(new long[]{0x0000001E2E003400L});
    public static final BitSet FOLLOW_27_in_ignore_property505 = new BitSet(new long[]{0x0000001E2E003400L});
    public static final BitSet FOLLOW_25_in_ignore_property510 = new BitSet(new long[]{0x0000001E2E003400L});
    public static final BitSet FOLLOW_26_in_ignore_property515 = new BitSet(new long[]{0x0000001E2E003400L});
    public static final BitSet FOLLOW_35_in_ignore_property520 = new BitSet(new long[]{0x0000001E2E003400L});
    public static final BitSet FOLLOW_29_in_ignore_property525 = new BitSet(new long[]{0x0000001E2E003400L});
    public static final BitSet FOLLOW_34_in_ignore_property530 = new BitSet(new long[]{0x0000001E2E003400L});
    public static final BitSet FOLLOW_36_in_ignore_property535 = new BitSet(new long[]{0x0000001E2E003400L});
    public static final BitSet FOLLOW_33_in_ignore_property542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_class_method_declaration553 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_method_declaration_in_class_method_declaration555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_instance_method_declaration566 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_method_declaration_in_instance_method_declaration568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_name_in_method_declaration579 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_Identifier_in_method_declaration581 = new BitSet(new long[]{0x0000000320001000L});
    public static final BitSet FOLLOW_method_argument0_in_method_declaration584 = new BitSet(new long[]{0x0000000220001000L});
    public static final BitSet FOLLOW_method_argumentN_in_method_declaration586 = new BitSet(new long[]{0x0000000220001000L});
    public static final BitSet FOLLOW_29_in_method_declaration592 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_31_in_method_declaration594 = new BitSet(new long[]{0x0000000200001000L});
    public static final BitSet FOLLOW_macro_call_in_method_declaration598 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_method_declaration601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_method_argument0612 = new BitSet(new long[]{0x0000000002001000L});
    public static final BitSet FOLLOW_type_name_in_method_argument0614 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_Identifier_in_method_argument0617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_method_argumentN628 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_method_argumentN630 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_type_name_in_method_argumentN632 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_Identifier_in_method_argumentN634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_type_name645 = new BitSet(new long[]{0x000380142A003400L});
    public static final BitSet FOLLOW_constant_in_type_name651 = new BitSet(new long[]{0x000380142E003400L});
    public static final BitSet FOLLOW_27_in_type_name656 = new BitSet(new long[]{0x000380142E003400L});
    public static final BitSet FOLLOW_49_in_type_name661 = new BitSet(new long[]{0x000380142E003400L});
    public static final BitSet FOLLOW_34_in_type_name666 = new BitSet(new long[]{0x000380142E003400L});
    public static final BitSet FOLLOW_36_in_type_name671 = new BitSet(new long[]{0x000380142E003400L});
    public static final BitSet FOLLOW_47_in_type_name676 = new BitSet(new long[]{0x000380142E003400L});
    public static final BitSet FOLLOW_48_in_type_name681 = new BitSet(new long[]{0x000380142E003400L});
    public static final BitSet FOLLOW_29_in_type_name686 = new BitSet(new long[]{0x000380142E003400L});
    public static final BitSet FOLLOW_type_name_in_type_name691 = new BitSet(new long[]{0x000380142E003400L});
    public static final BitSet FOLLOW_26_in_type_name698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_macro_call709 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_macro_call711 = new BitSet(new long[]{0x0000000000003400L});
    public static final BitSet FOLLOW_constant_in_macro_call713 = new BitSet(new long[]{0x0000000024000000L});
    public static final BitSet FOLLOW_29_in_macro_call716 = new BitSet(new long[]{0x0000000000003400L});
    public static final BitSet FOLLOW_constant_in_macro_call718 = new BitSet(new long[]{0x0000000024000000L});
    public static final BitSet FOLLOW_26_in_macro_call722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_identifier_list733 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_29_in_identifier_list736 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_Identifier_in_identifier_list738 = new BitSet(new long[]{0x0000000020000002L});

}