// $ANTLR 3.4 /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g 2012-10-18 19:54:48

// AUTOGENERATED BY ANTLR!!! DO NOT MODIFY!!!

package com.gerixsoft.objc2xml.antlr.my;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class ObjectiveCLexer extends Lexer {
    public static final int EOF=-1;
    public static final int T__25=25;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int Character=4;
    public static final int Comment=5;
    public static final int EscapeSequence=6;
    public static final int Exponent=7;
    public static final int FloatTypeSuffix=8;
    public static final int FloatingPoint=9;
    public static final int Hex=10;
    public static final int HexDigit=11;
    public static final int Identifier=12;
    public static final int Integer=13;
    public static final int IntegerTypeSuffix=14;
    public static final int Letter=15;
    public static final int LineCommand=16;
    public static final int LineComment=17;
    public static final int Octal=18;
    public static final int OctalEscape=19;
    public static final int String=20;
    public static final int UnicodeEscape=21;
    public static final int WS=22;
    public static final int XML_ATTRIBUTE=23;
    public static final int XML_ELEMENT=24;

    // delegates
    // delegators
    public Lexer[] getDelegates() {
        return new Lexer[] {};
    }

    public ObjectiveCLexer() {} 
    public ObjectiveCLexer(CharStream input) {
        this(input, new RecognizerSharedState());
    }
    public ObjectiveCLexer(CharStream input, RecognizerSharedState state) {
        super(input,state);
    }
    public String getGrammarFileName() { return "/home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g"; }

    // $ANTLR start "T__25"
    public final void mT__25() throws RecognitionException {
        try {
            int _type = T__25;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:13:7: ( '(' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:13:9: '('
            {
            match('('); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__25"

    // $ANTLR start "T__26"
    public final void mT__26() throws RecognitionException {
        try {
            int _type = T__26;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:14:7: ( ')' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:14:9: ')'
            {
            match(')'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__26"

    // $ANTLR start "T__27"
    public final void mT__27() throws RecognitionException {
        try {
            int _type = T__27;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:15:7: ( '*' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:15:9: '*'
            {
            match('*'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__27"

    // $ANTLR start "T__28"
    public final void mT__28() throws RecognitionException {
        try {
            int _type = T__28;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:16:7: ( '+' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:16:9: '+'
            {
            match('+'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__28"

    // $ANTLR start "T__29"
    public final void mT__29() throws RecognitionException {
        try {
            int _type = T__29;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:17:7: ( ',' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:17:9: ','
            {
            match(','); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__29"

    // $ANTLR start "T__30"
    public final void mT__30() throws RecognitionException {
        try {
            int _type = T__30;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:18:7: ( '-' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:18:9: '-'
            {
            match('-'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__30"

    // $ANTLR start "T__31"
    public final void mT__31() throws RecognitionException {
        try {
            int _type = T__31;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:19:7: ( '...' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:19:9: '...'
            {
            match("..."); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__31"

    // $ANTLR start "T__32"
    public final void mT__32() throws RecognitionException {
        try {
            int _type = T__32;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:20:7: ( ':' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:20:9: ':'
            {
            match(':'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__32"

    // $ANTLR start "T__33"
    public final void mT__33() throws RecognitionException {
        try {
            int _type = T__33;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:21:7: ( ';' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:21:9: ';'
            {
            match(';'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__33"

    // $ANTLR start "T__34"
    public final void mT__34() throws RecognitionException {
        try {
            int _type = T__34;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:22:7: ( '<' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:22:9: '<'
            {
            match('<'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__34"

    // $ANTLR start "T__35"
    public final void mT__35() throws RecognitionException {
        try {
            int _type = T__35;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:23:7: ( '=' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:23:9: '='
            {
            match('='); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__35"

    // $ANTLR start "T__36"
    public final void mT__36() throws RecognitionException {
        try {
            int _type = T__36;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:24:7: ( '>' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:24:9: '>'
            {
            match('>'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__36"

    // $ANTLR start "T__37"
    public final void mT__37() throws RecognitionException {
        try {
            int _type = T__37;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:25:7: ( '@class' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:25:9: '@class'
            {
            match("@class"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__37"

    // $ANTLR start "T__38"
    public final void mT__38() throws RecognitionException {
        try {
            int _type = T__38;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:26:7: ( '@end' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:26:9: '@end'
            {
            match("@end"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__38"

    // $ANTLR start "T__39"
    public final void mT__39() throws RecognitionException {
        try {
            int _type = T__39;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:27:7: ( '@interface' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:27:9: '@interface'
            {
            match("@interface"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__39"

    // $ANTLR start "T__40"
    public final void mT__40() throws RecognitionException {
        try {
            int _type = T__40;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:28:7: ( '@optional' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:28:9: '@optional'
            {
            match("@optional"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__40"

    // $ANTLR start "T__41"
    public final void mT__41() throws RecognitionException {
        try {
            int _type = T__41;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:29:7: ( '@private' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:29:9: '@private'
            {
            match("@private"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__41"

    // $ANTLR start "T__42"
    public final void mT__42() throws RecognitionException {
        try {
            int _type = T__42;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:30:7: ( '@property' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:30:9: '@property'
            {
            match("@property"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__42"

    // $ANTLR start "T__43"
    public final void mT__43() throws RecognitionException {
        try {
            int _type = T__43;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:31:7: ( '@protected' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:31:9: '@protected'
            {
            match("@protected"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__43"

    // $ANTLR start "T__44"
    public final void mT__44() throws RecognitionException {
        try {
            int _type = T__44;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:32:7: ( '@protocol' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:32:9: '@protocol'
            {
            match("@protocol"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__44"

    // $ANTLR start "T__45"
    public final void mT__45() throws RecognitionException {
        try {
            int _type = T__45;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:33:7: ( '@public' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:33:9: '@public'
            {
            match("@public"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__45"

    // $ANTLR start "T__46"
    public final void mT__46() throws RecognitionException {
        try {
            int _type = T__46;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:34:7: ( '@required' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:34:9: '@required'
            {
            match("@required"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__46"

    // $ANTLR start "T__47"
    public final void mT__47() throws RecognitionException {
        try {
            int _type = T__47;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:35:7: ( '[' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:35:9: '['
            {
            match('['); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__47"

    // $ANTLR start "T__48"
    public final void mT__48() throws RecognitionException {
        try {
            int _type = T__48;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:36:7: ( ']' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:36:9: ']'
            {
            match(']'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__48"

    // $ANTLR start "T__49"
    public final void mT__49() throws RecognitionException {
        try {
            int _type = T__49;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:37:7: ( '^' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:37:9: '^'
            {
            match('^'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__49"

    // $ANTLR start "T__50"
    public final void mT__50() throws RecognitionException {
        try {
            int _type = T__50;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:38:7: ( 'enum' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:38:9: 'enum'
            {
            match("enum"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__50"

    // $ANTLR start "T__51"
    public final void mT__51() throws RecognitionException {
        try {
            int _type = T__51;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:39:7: ( 'struct' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:39:9: 'struct'
            {
            match("struct"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__51"

    // $ANTLR start "T__52"
    public final void mT__52() throws RecognitionException {
        try {
            int _type = T__52;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:40:7: ( 'typedef' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:40:9: 'typedef'
            {
            match("typedef"); 



            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__52"

    // $ANTLR start "T__53"
    public final void mT__53() throws RecognitionException {
        try {
            int _type = T__53;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:41:7: ( '{' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:41:9: '{'
            {
            match('{'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__53"

    // $ANTLR start "T__54"
    public final void mT__54() throws RecognitionException {
        try {
            int _type = T__54;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:42:7: ( '|' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:42:9: '|'
            {
            match('|'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__54"

    // $ANTLR start "T__55"
    public final void mT__55() throws RecognitionException {
        try {
            int _type = T__55;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:43:7: ( '}' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:43:9: '}'
            {
            match('}'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "T__55"

    // $ANTLR start "Identifier"
    public final void mIdentifier() throws RecognitionException {
        try {
            int _type = Identifier;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:184:12: ( Letter ( Letter | '0' .. '9' )* )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:185:2: Letter ( Letter | '0' .. '9' )*
            {
            mLetter(); 


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:186:2: ( Letter | '0' .. '9' )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0=='$'||(LA1_0 >= '0' && LA1_0 <= '9')||(LA1_0 >= 'A' && LA1_0 <= 'Z')||LA1_0=='_'||(LA1_0 >= 'a' && LA1_0 <= 'z')) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
            	    {
            	    if ( input.LA(1)=='$'||(input.LA(1) >= '0' && input.LA(1) <= '9')||(input.LA(1) >= 'A' && input.LA(1) <= 'Z')||input.LA(1)=='_'||(input.LA(1) >= 'a' && input.LA(1) <= 'z') ) {
            	        input.consume();
            	    }
            	    else {
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        recover(mse);
            	        throw mse;
            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "Identifier"

    // $ANTLR start "Letter"
    public final void mLetter() throws RecognitionException {
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:192:17: ( '$' | 'A' .. 'Z' | 'a' .. 'z' | '_' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
            {
            if ( input.LA(1)=='$'||(input.LA(1) >= 'A' && input.LA(1) <= 'Z')||input.LA(1)=='_'||(input.LA(1) >= 'a' && input.LA(1) <= 'z') ) {
                input.consume();
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                recover(mse);
                throw mse;
            }


            }


        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "Letter"

    // $ANTLR start "Character"
    public final void mCharacter() throws RecognitionException {
        try {
            int _type = Character;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:199:11: ( '\\'' ( EscapeSequence |~ ( '\\'' | '\\\\' ) ) '\\'' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:200:2: '\\'' ( EscapeSequence |~ ( '\\'' | '\\\\' ) ) '\\''
            {
            match('\''); 

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:201:2: ( EscapeSequence |~ ( '\\'' | '\\\\' ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0=='\\') ) {
                alt2=1;
            }
            else if ( ((LA2_0 >= '\u0000' && LA2_0 <= '&')||(LA2_0 >= '(' && LA2_0 <= '[')||(LA2_0 >= ']' && LA2_0 <= '\uFFFF')) ) {
                alt2=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;

            }
            switch (alt2) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:202:2: EscapeSequence
                    {
                    mEscapeSequence(); 


                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:204:2: ~ ( '\\'' | '\\\\' )
                    {
                    if ( (input.LA(1) >= '\u0000' && input.LA(1) <= '&')||(input.LA(1) >= '(' && input.LA(1) <= '[')||(input.LA(1) >= ']' && input.LA(1) <= '\uFFFF') ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    }
                    break;

            }


            match('\''); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "Character"

    // $ANTLR start "String"
    public final void mString() throws RecognitionException {
        try {
            int _type = String;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:212:8: ( '\"' ( EscapeSequence |~ ( '\\\\' | '\"' ) )* '\"' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:213:2: '\"' ( EscapeSequence |~ ( '\\\\' | '\"' ) )* '\"'
            {
            match('\"'); 

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:214:2: ( EscapeSequence |~ ( '\\\\' | '\"' ) )*
            loop3:
            do {
                int alt3=3;
                int LA3_0 = input.LA(1);

                if ( (LA3_0=='\\') ) {
                    alt3=1;
                }
                else if ( ((LA3_0 >= '\u0000' && LA3_0 <= '!')||(LA3_0 >= '#' && LA3_0 <= '[')||(LA3_0 >= ']' && LA3_0 <= '\uFFFF')) ) {
                    alt3=2;
                }


                switch (alt3) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:215:2: EscapeSequence
            	    {
            	    mEscapeSequence(); 


            	    }
            	    break;
            	case 2 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:217:2: ~ ( '\\\\' | '\"' )
            	    {
            	    if ( (input.LA(1) >= '\u0000' && input.LA(1) <= '!')||(input.LA(1) >= '#' && input.LA(1) <= '[')||(input.LA(1) >= ']' && input.LA(1) <= '\uFFFF') ) {
            	        input.consume();
            	    }
            	    else {
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        recover(mse);
            	        throw mse;
            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            match('\"'); 

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "String"

    // $ANTLR start "Hex"
    public final void mHex() throws RecognitionException {
        try {
            int _type = Hex;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:225:5: ( '0' ( 'x' | 'X' ) ( HexDigit )+ ( IntegerTypeSuffix )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:226:2: '0' ( 'x' | 'X' ) ( HexDigit )+ ( IntegerTypeSuffix )?
            {
            match('0'); 

            if ( input.LA(1)=='X'||input.LA(1)=='x' ) {
                input.consume();
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                recover(mse);
                throw mse;
            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:231:2: ( HexDigit )+
            int cnt4=0;
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( ((LA4_0 >= '0' && LA4_0 <= '9')||(LA4_0 >= 'A' && LA4_0 <= 'F')||(LA4_0 >= 'a' && LA4_0 <= 'f')) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
            	    {
            	    if ( (input.LA(1) >= '0' && input.LA(1) <= '9')||(input.LA(1) >= 'A' && input.LA(1) <= 'F')||(input.LA(1) >= 'a' && input.LA(1) <= 'f') ) {
            	        input.consume();
            	    }
            	    else {
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        recover(mse);
            	        throw mse;
            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt4 >= 1 ) break loop4;
                        EarlyExitException eee =
                            new EarlyExitException(4, input);
                        throw eee;
                }
                cnt4++;
            } while (true);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:231:12: ( IntegerTypeSuffix )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0=='L'||LA5_0=='U'||LA5_0=='l'||LA5_0=='u') ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
                    {
                    if ( input.LA(1)=='L'||input.LA(1)=='U'||input.LA(1)=='l'||input.LA(1)=='u' ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    }
                    break;

            }


            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "Hex"

    // $ANTLR start "Integer"
    public final void mInteger() throws RecognitionException {
        try {
            int _type = Integer;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:234:9: ( ( '0' | '1' .. '9' ( '0' .. '9' | '_' )* ) ( IntegerTypeSuffix )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:235:2: ( '0' | '1' .. '9' ( '0' .. '9' | '_' )* ) ( IntegerTypeSuffix )?
            {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:235:2: ( '0' | '1' .. '9' ( '0' .. '9' | '_' )* )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0=='0') ) {
                alt7=1;
            }
            else if ( ((LA7_0 >= '1' && LA7_0 <= '9')) ) {
                alt7=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;

            }
            switch (alt7) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:236:2: '0'
                    {
                    match('0'); 

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:237:4: '1' .. '9' ( '0' .. '9' | '_' )*
                    {
                    matchRange('1','9'); 

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:238:2: ( '0' .. '9' | '_' )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( ((LA6_0 >= '0' && LA6_0 <= '9')||LA6_0=='_') ) {
                            alt6=1;
                        }


                        switch (alt6) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
                    	    {
                    	    if ( (input.LA(1) >= '0' && input.LA(1) <= '9')||input.LA(1)=='_' ) {
                    	        input.consume();
                    	    }
                    	    else {
                    	        MismatchedSetException mse = new MismatchedSetException(null,input);
                    	        recover(mse);
                    	        throw mse;
                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);


                    }
                    break;

            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:243:2: ( IntegerTypeSuffix )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0=='L'||LA8_0=='U'||LA8_0=='l'||LA8_0=='u') ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
                    {
                    if ( input.LA(1)=='L'||input.LA(1)=='U'||input.LA(1)=='l'||input.LA(1)=='u' ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    }
                    break;

            }


            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "Integer"

    // $ANTLR start "Octal"
    public final void mOctal() throws RecognitionException {
        try {
            int _type = Octal;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:246:7: ( '0' ( '0' .. '7' )+ ( IntegerTypeSuffix )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:247:2: '0' ( '0' .. '7' )+ ( IntegerTypeSuffix )?
            {
            match('0'); 

            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:247:6: ( '0' .. '7' )+
            int cnt9=0;
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( ((LA9_0 >= '0' && LA9_0 <= '7')) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
            	    {
            	    if ( (input.LA(1) >= '0' && input.LA(1) <= '7') ) {
            	        input.consume();
            	    }
            	    else {
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        recover(mse);
            	        throw mse;
            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt9 >= 1 ) break loop9;
                        EarlyExitException eee =
                            new EarlyExitException(9, input);
                        throw eee;
                }
                cnt9++;
            } while (true);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:247:18: ( IntegerTypeSuffix )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0=='L'||LA10_0=='U'||LA10_0=='l'||LA10_0=='u') ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
                    {
                    if ( input.LA(1)=='L'||input.LA(1)=='U'||input.LA(1)=='l'||input.LA(1)=='u' ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    }
                    break;

            }


            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "Octal"

    // $ANTLR start "HexDigit"
    public final void mHexDigit() throws RecognitionException {
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:250:19: ( ( '0' .. '9' | 'a' .. 'f' | 'A' .. 'F' ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
            {
            if ( (input.LA(1) >= '0' && input.LA(1) <= '9')||(input.LA(1) >= 'A' && input.LA(1) <= 'F')||(input.LA(1) >= 'a' && input.LA(1) <= 'f') ) {
                input.consume();
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                recover(mse);
                throw mse;
            }


            }


        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "HexDigit"

    // $ANTLR start "IntegerTypeSuffix"
    public final void mIntegerTypeSuffix() throws RecognitionException {
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:258:28: ( ( 'u' | 'U' | 'l' | 'L' ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
            {
            if ( input.LA(1)=='L'||input.LA(1)=='U'||input.LA(1)=='l'||input.LA(1)=='u' ) {
                input.consume();
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                recover(mse);
                throw mse;
            }


            }


        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "IntegerTypeSuffix"

    // $ANTLR start "FloatingPoint"
    public final void mFloatingPoint() throws RecognitionException {
        try {
            int _type = FloatingPoint;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:267:15: ( ( '0' .. '9' )+ ( '.' ( '0' .. '9' )* )? ( Exponent )? ( FloatTypeSuffix )? )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:268:2: ( '0' .. '9' )+ ( '.' ( '0' .. '9' )* )? ( Exponent )? ( FloatTypeSuffix )?
            {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:268:2: ( '0' .. '9' )+
            int cnt11=0;
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( ((LA11_0 >= '0' && LA11_0 <= '9')) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
            	    {
            	    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {
            	        input.consume();
            	    }
            	    else {
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        recover(mse);
            	        throw mse;
            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt11 >= 1 ) break loop11;
                        EarlyExitException eee =
                            new EarlyExitException(11, input);
                        throw eee;
                }
                cnt11++;
            } while (true);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:268:14: ( '.' ( '0' .. '9' )* )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0=='.') ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:268:15: '.' ( '0' .. '9' )*
                    {
                    match('.'); 

                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:268:19: ( '0' .. '9' )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( ((LA12_0 >= '0' && LA12_0 <= '9')) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
                    	    {
                    	    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {
                    	        input.consume();
                    	    }
                    	    else {
                    	        MismatchedSetException mse = new MismatchedSetException(null,input);
                    	        recover(mse);
                    	        throw mse;
                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);


                    }
                    break;

            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:268:33: ( Exponent )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0=='E'||LA14_0=='e') ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:268:33: Exponent
                    {
                    mExponent(); 


                    }
                    break;

            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:268:43: ( FloatTypeSuffix )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0=='D'||LA15_0=='F'||LA15_0=='d'||LA15_0=='f') ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
                    {
                    if ( input.LA(1)=='D'||input.LA(1)=='F'||input.LA(1)=='d'||input.LA(1)=='f' ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    }
                    break;

            }


            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "FloatingPoint"

    // $ANTLR start "Exponent"
    public final void mExponent() throws RecognitionException {
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:271:19: ( ( 'e' | 'E' ) ( '+' | '-' )? ( '0' .. '9' )+ )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:272:2: ( 'e' | 'E' ) ( '+' | '-' )? ( '0' .. '9' )+
            {
            if ( input.LA(1)=='E'||input.LA(1)=='e' ) {
                input.consume();
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                recover(mse);
                throw mse;
            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:276:2: ( '+' | '-' )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0=='+'||LA16_0=='-') ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
                    {
                    if ( input.LA(1)=='+'||input.LA(1)=='-' ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    }
                    break;

            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:280:2: ( '0' .. '9' )+
            int cnt17=0;
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( ((LA17_0 >= '0' && LA17_0 <= '9')) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
            	    {
            	    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {
            	        input.consume();
            	    }
            	    else {
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        recover(mse);
            	        throw mse;
            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt17 >= 1 ) break loop17;
                        EarlyExitException eee =
                            new EarlyExitException(17, input);
                        throw eee;
                }
                cnt17++;
            } while (true);


            }


        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "Exponent"

    // $ANTLR start "FloatTypeSuffix"
    public final void mFloatTypeSuffix() throws RecognitionException {
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:283:26: ( ( 'f' | 'F' | 'd' | 'D' ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
            {
            if ( input.LA(1)=='D'||input.LA(1)=='F'||input.LA(1)=='d'||input.LA(1)=='f' ) {
                input.consume();
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                recover(mse);
                throw mse;
            }


            }


        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "FloatTypeSuffix"

    // $ANTLR start "EscapeSequence"
    public final void mEscapeSequence() throws RecognitionException {
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:292:25: ( '\\\\' ( 'b' | 't' | 'n' | 'f' | 'r' | '\\\"' | '\\'' | '\\\\' ) | OctalEscape )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0=='\\') ) {
                int LA18_1 = input.LA(2);

                if ( (LA18_1=='\"'||LA18_1=='\''||LA18_1=='\\'||LA18_1=='b'||LA18_1=='f'||LA18_1=='n'||LA18_1=='r'||LA18_1=='t') ) {
                    alt18=1;
                }
                else if ( ((LA18_1 >= '0' && LA18_1 <= '7')) ) {
                    alt18=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 18, 1, input);

                    throw nvae;

                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;

            }
            switch (alt18) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:293:2: '\\\\' ( 'b' | 't' | 'n' | 'f' | 'r' | '\\\"' | '\\'' | '\\\\' )
                    {
                    match('\\'); 

                    if ( input.LA(1)=='\"'||input.LA(1)=='\''||input.LA(1)=='\\'||input.LA(1)=='b'||input.LA(1)=='f'||input.LA(1)=='n'||input.LA(1)=='r'||input.LA(1)=='t' ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:304:4: OctalEscape
                    {
                    mOctalEscape(); 


                    }
                    break;

            }

        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "EscapeSequence"

    // $ANTLR start "OctalEscape"
    public final void mOctalEscape() throws RecognitionException {
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:307:22: ( '\\\\' ( '0' .. '3' ) ( '0' .. '7' ) ( '0' .. '7' ) | '\\\\' ( '0' .. '7' ) ( '0' .. '7' ) | '\\\\' ( '0' .. '7' ) )
            int alt19=3;
            int LA19_0 = input.LA(1);

            if ( (LA19_0=='\\') ) {
                int LA19_1 = input.LA(2);

                if ( ((LA19_1 >= '0' && LA19_1 <= '3')) ) {
                    int LA19_2 = input.LA(3);

                    if ( ((LA19_2 >= '0' && LA19_2 <= '7')) ) {
                        int LA19_4 = input.LA(4);

                        if ( ((LA19_4 >= '0' && LA19_4 <= '7')) ) {
                            alt19=1;
                        }
                        else {
                            alt19=2;
                        }
                    }
                    else {
                        alt19=3;
                    }
                }
                else if ( ((LA19_1 >= '4' && LA19_1 <= '7')) ) {
                    int LA19_3 = input.LA(3);

                    if ( ((LA19_3 >= '0' && LA19_3 <= '7')) ) {
                        alt19=2;
                    }
                    else {
                        alt19=3;
                    }
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 1, input);

                    throw nvae;

                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;

            }
            switch (alt19) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:308:2: '\\\\' ( '0' .. '3' ) ( '0' .. '7' ) ( '0' .. '7' )
                    {
                    match('\\'); 

                    if ( (input.LA(1) >= '0' && input.LA(1) <= '3') ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    if ( (input.LA(1) >= '0' && input.LA(1) <= '7') ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    if ( (input.LA(1) >= '0' && input.LA(1) <= '7') ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:309:4: '\\\\' ( '0' .. '7' ) ( '0' .. '7' )
                    {
                    match('\\'); 

                    if ( (input.LA(1) >= '0' && input.LA(1) <= '7') ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    if ( (input.LA(1) >= '0' && input.LA(1) <= '7') ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:310:4: '\\\\' ( '0' .. '7' )
                    {
                    match('\\'); 

                    if ( (input.LA(1) >= '0' && input.LA(1) <= '7') ) {
                        input.consume();
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        recover(mse);
                        throw mse;
                    }


                    }
                    break;

            }

        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "OctalEscape"

    // $ANTLR start "UnicodeEscape"
    public final void mUnicodeEscape() throws RecognitionException {
        try {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:313:24: ( '\\\\' 'u' HexDigit HexDigit HexDigit HexDigit )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:314:2: '\\\\' 'u' HexDigit HexDigit HexDigit HexDigit
            {
            match('\\'); 

            match('u'); 

            mHexDigit(); 


            mHexDigit(); 


            mHexDigit(); 


            mHexDigit(); 


            }


        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "UnicodeEscape"

    // $ANTLR start "WS"
    public final void mWS() throws RecognitionException {
        try {
            int _type = WS;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:317:4: ( ( ' ' | '\\r' | '\\t' | '\\u000C' | '\\n' ) )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:318:2: ( ' ' | '\\r' | '\\t' | '\\u000C' | '\\n' )
            {
            if ( (input.LA(1) >= '\t' && input.LA(1) <= '\n')||(input.LA(1) >= '\f' && input.LA(1) <= '\r')||input.LA(1)==' ' ) {
                input.consume();
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                recover(mse);
                throw mse;
            }



              _channel = HIDDEN;
             

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "WS"

    // $ANTLR start "Comment"
    public final void mComment() throws RecognitionException {
        try {
            int _type = Comment;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:331:9: ( '/*' ( options {greedy=false; } : . )* '*/' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:332:2: '/*' ( options {greedy=false; } : . )* '*/'
            {
            match("/*"); 



            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:332:7: ( options {greedy=false; } : . )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0=='*') ) {
                    int LA20_1 = input.LA(2);

                    if ( (LA20_1=='/') ) {
                        alt20=2;
                    }
                    else if ( ((LA20_1 >= '\u0000' && LA20_1 <= '.')||(LA20_1 >= '0' && LA20_1 <= '\uFFFF')) ) {
                        alt20=1;
                    }


                }
                else if ( ((LA20_0 >= '\u0000' && LA20_0 <= ')')||(LA20_0 >= '+' && LA20_0 <= '\uFFFF')) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:332:33: .
            	    {
            	    matchAny(); 

            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);


            match("*/"); 




                                                     _channel = HIDDEN;
                                                    

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "Comment"

    // $ANTLR start "LineComment"
    public final void mLineComment() throws RecognitionException {
        try {
            int _type = LineComment;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:338:13: ( '//' (~ ( '\\n' | '\\r' ) )* ( '\\r' )? '\\n' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:339:2: '//' (~ ( '\\n' | '\\r' ) )* ( '\\r' )? '\\n'
            {
            match("//"); 



            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:340:2: (~ ( '\\n' | '\\r' ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( ((LA21_0 >= '\u0000' && LA21_0 <= '\t')||(LA21_0 >= '\u000B' && LA21_0 <= '\f')||(LA21_0 >= '\u000E' && LA21_0 <= '\uFFFF')) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
            	    {
            	    if ( (input.LA(1) >= '\u0000' && input.LA(1) <= '\t')||(input.LA(1) >= '\u000B' && input.LA(1) <= '\f')||(input.LA(1) >= '\u000E' && input.LA(1) <= '\uFFFF') ) {
            	        input.consume();
            	    }
            	    else {
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        recover(mse);
            	        throw mse;
            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:344:2: ( '\\r' )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0=='\r') ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:344:2: '\\r'
                    {
                    match('\r'); 

                    }
                    break;

            }


            match('\n'); 


                        _channel = HIDDEN;
                       

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "LineComment"

    // $ANTLR start "LineCommand"
    public final void mLineCommand() throws RecognitionException {
        try {
            int _type = LineCommand;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:350:13: ( ( '#' | 'extern' | 'APPKIT_EXTERN' | 'FOUNDATION_EXPORT' ) (~ ( '\\n' | '\\r' ) )* ( '\\r' )? '\\n' )
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:351:2: ( '#' | 'extern' | 'APPKIT_EXTERN' | 'FOUNDATION_EXPORT' ) (~ ( '\\n' | '\\r' ) )* ( '\\r' )? '\\n'
            {
            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:351:2: ( '#' | 'extern' | 'APPKIT_EXTERN' | 'FOUNDATION_EXPORT' )
            int alt23=4;
            switch ( input.LA(1) ) {
            case '#':
                {
                alt23=1;
                }
                break;
            case 'e':
                {
                alt23=2;
                }
                break;
            case 'A':
                {
                alt23=3;
                }
                break;
            case 'F':
                {
                alt23=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;

            }

            switch (alt23) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:352:2: '#'
                    {
                    match('#'); 

                    }
                    break;
                case 2 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:353:4: 'extern'
                    {
                    match("extern"); 



                    }
                    break;
                case 3 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:354:4: 'APPKIT_EXTERN'
                    {
                    match("APPKIT_EXTERN"); 



                    }
                    break;
                case 4 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:355:4: 'FOUNDATION_EXPORT'
                    {
                    match("FOUNDATION_EXPORT"); 



                    }
                    break;

            }


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:357:2: (~ ( '\\n' | '\\r' ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( ((LA24_0 >= '\u0000' && LA24_0 <= '\t')||(LA24_0 >= '\u000B' && LA24_0 <= '\f')||(LA24_0 >= '\u000E' && LA24_0 <= '\uFFFF')) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:
            	    {
            	    if ( (input.LA(1) >= '\u0000' && input.LA(1) <= '\t')||(input.LA(1) >= '\u000B' && input.LA(1) <= '\f')||(input.LA(1) >= '\u000E' && input.LA(1) <= '\uFFFF') ) {
            	        input.consume();
            	    }
            	    else {
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        recover(mse);
            	        throw mse;
            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);


            // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:361:2: ( '\\r' )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0=='\r') ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:361:2: '\\r'
                    {
                    match('\r'); 

                    }
                    break;

            }


            match('\n'); 


                        _channel = HIDDEN;
                       

            }

            state.type = _type;
            state.channel = _channel;
        }
        finally {
        	// do for sure before leaving
        }
    }
    // $ANTLR end "LineCommand"

    public void mTokens() throws RecognitionException {
        // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:8: ( T__25 | T__26 | T__27 | T__28 | T__29 | T__30 | T__31 | T__32 | T__33 | T__34 | T__35 | T__36 | T__37 | T__38 | T__39 | T__40 | T__41 | T__42 | T__43 | T__44 | T__45 | T__46 | T__47 | T__48 | T__49 | T__50 | T__51 | T__52 | T__53 | T__54 | T__55 | Identifier | Character | String | Hex | Integer | Octal | FloatingPoint | WS | Comment | LineComment | LineCommand )
        int alt26=42;
        alt26 = dfa26.predict(input);
        switch (alt26) {
            case 1 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:10: T__25
                {
                mT__25(); 


                }
                break;
            case 2 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:16: T__26
                {
                mT__26(); 


                }
                break;
            case 3 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:22: T__27
                {
                mT__27(); 


                }
                break;
            case 4 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:28: T__28
                {
                mT__28(); 


                }
                break;
            case 5 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:34: T__29
                {
                mT__29(); 


                }
                break;
            case 6 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:40: T__30
                {
                mT__30(); 


                }
                break;
            case 7 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:46: T__31
                {
                mT__31(); 


                }
                break;
            case 8 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:52: T__32
                {
                mT__32(); 


                }
                break;
            case 9 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:58: T__33
                {
                mT__33(); 


                }
                break;
            case 10 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:64: T__34
                {
                mT__34(); 


                }
                break;
            case 11 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:70: T__35
                {
                mT__35(); 


                }
                break;
            case 12 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:76: T__36
                {
                mT__36(); 


                }
                break;
            case 13 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:82: T__37
                {
                mT__37(); 


                }
                break;
            case 14 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:88: T__38
                {
                mT__38(); 


                }
                break;
            case 15 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:94: T__39
                {
                mT__39(); 


                }
                break;
            case 16 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:100: T__40
                {
                mT__40(); 


                }
                break;
            case 17 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:106: T__41
                {
                mT__41(); 


                }
                break;
            case 18 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:112: T__42
                {
                mT__42(); 


                }
                break;
            case 19 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:118: T__43
                {
                mT__43(); 


                }
                break;
            case 20 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:124: T__44
                {
                mT__44(); 


                }
                break;
            case 21 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:130: T__45
                {
                mT__45(); 


                }
                break;
            case 22 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:136: T__46
                {
                mT__46(); 


                }
                break;
            case 23 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:142: T__47
                {
                mT__47(); 


                }
                break;
            case 24 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:148: T__48
                {
                mT__48(); 


                }
                break;
            case 25 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:154: T__49
                {
                mT__49(); 


                }
                break;
            case 26 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:160: T__50
                {
                mT__50(); 


                }
                break;
            case 27 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:166: T__51
                {
                mT__51(); 


                }
                break;
            case 28 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:172: T__52
                {
                mT__52(); 


                }
                break;
            case 29 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:178: T__53
                {
                mT__53(); 


                }
                break;
            case 30 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:184: T__54
                {
                mT__54(); 


                }
                break;
            case 31 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:190: T__55
                {
                mT__55(); 


                }
                break;
            case 32 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:196: Identifier
                {
                mIdentifier(); 


                }
                break;
            case 33 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:207: Character
                {
                mCharacter(); 


                }
                break;
            case 34 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:217: String
                {
                mString(); 


                }
                break;
            case 35 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:224: Hex
                {
                mHex(); 


                }
                break;
            case 36 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:228: Integer
                {
                mInteger(); 


                }
                break;
            case 37 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:236: Octal
                {
                mOctal(); 


                }
                break;
            case 38 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:242: FloatingPoint
                {
                mFloatingPoint(); 


                }
                break;
            case 39 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:256: WS
                {
                mWS(); 


                }
                break;
            case 40 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:259: Comment
                {
                mComment(); 


                }
                break;
            case 41 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:267: LineComment
                {
                mLineComment(); 


                }
                break;
            case 42 :
                // /home/andriy/Projects.git/objc2xml/src/com/gerixsoft/objc2xml/antlr/my/ObjectiveC.g:1:279: LineCommand
                {
                mLineCommand(); 


                }
                break;

        }

    }


    protected DFA26 dfa26 = new DFA26(this);
    static final String DFA26_eotS =
        "\21\uffff\3\40\3\uffff\1\40\2\uffff\2\55\3\uffff\1\40\7\uffff\5"+
        "\40\2\uffff\1\73\1\uffff\1\55\2\uffff\1\40\2\uffff\5\40\1\uffff"+
        "\1\40\2\uffff\1\107\5\40\3\uffff\5\40\2\uffff\1\40\1\125\4\40\1"+
        "\uffff\1\131\2\40\1\uffff\20\40";
    static final String DFA26_eofS =
        "\152\uffff";
    static final String DFA26_minS =
        "\1\11\14\uffff\1\143\3\uffff\1\156\1\164\1\171\3\uffff\1\120\2\uffff"+
        "\2\56\1\uffff\1\52\1\uffff\1\117\5\uffff\1\162\1\uffff\1\165\1\164"+
        "\1\162\1\160\1\120\2\uffff\1\56\1\uffff\1\56\2\uffff\1\125\1\151"+
        "\1\uffff\1\155\1\145\1\165\1\145\1\113\1\uffff\1\116\1\uffff\1\160"+
        "\1\44\1\162\1\143\1\144\1\111\1\104\1\uffff\1\145\1\uffff\1\156"+
        "\1\164\1\145\1\124\1\101\2\uffff\1\0\1\44\1\146\1\137\1\124\1\0"+
        "\1\uffff\1\44\1\105\1\111\1\uffff\1\130\1\117\1\124\1\116\1\105"+
        "\1\137\1\122\1\105\1\116\1\130\1\0\1\120\1\117\1\122\1\124\1\0";
    static final String DFA26_maxS =
        "\1\175\14\uffff\1\162\3\uffff\1\170\1\164\1\171\3\uffff\1\120\2"+
        "\uffff\1\170\1\146\1\uffff\1\57\1\uffff\1\117\5\uffff\1\165\1\uffff"+
        "\1\165\1\164\1\162\1\160\1\120\2\uffff\1\146\1\uffff\1\146\2\uffff"+
        "\1\125\1\157\1\uffff\1\155\1\145\1\165\1\145\1\113\1\uffff\1\116"+
        "\1\uffff\1\164\1\172\1\162\1\143\1\144\1\111\1\104\1\uffff\1\157"+
        "\1\uffff\1\156\1\164\1\145\1\124\1\101\2\uffff\1\uffff\1\172\1\146"+
        "\1\137\1\124\1\uffff\1\uffff\1\172\1\105\1\111\1\uffff\1\130\1\117"+
        "\1\124\1\116\1\105\1\137\1\122\1\105\1\116\1\130\1\uffff\1\120\1"+
        "\117\1\122\1\124\1\uffff";
    static final String DFA26_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1"+
        "\uffff\1\27\1\30\1\31\3\uffff\1\35\1\36\1\37\1\uffff\1\41\1\42\2"+
        "\uffff\1\47\1\uffff\1\52\1\uffff\1\40\1\15\1\16\1\17\1\20\1\uffff"+
        "\1\26\5\uffff\1\43\1\44\1\uffff\1\46\1\uffff\1\50\1\51\2\uffff\1"+
        "\25\5\uffff\1\45\1\uffff\1\21\7\uffff\1\22\1\uffff\1\32\5\uffff"+
        "\1\23\1\24\6\uffff\1\33\3\uffff\1\34\20\uffff";
    static final String DFA26_specialS =
        "\117\uffff\1\2\4\uffff\1\0\17\uffff\1\1\4\uffff\1\3}>";
    static final String[] DFA26_transitionS = {
            "\2\34\1\uffff\2\34\22\uffff\1\34\1\uffff\1\31\1\36\1\40\2\uffff"+
            "\1\30\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\35\1\32\11\33\1\10\1\11"+
            "\1\12\1\13\1\14\1\uffff\1\15\1\27\4\40\1\37\24\40\1\16\1\uffff"+
            "\1\17\1\20\1\40\1\uffff\4\40\1\21\15\40\1\22\1\23\6\40\1\24"+
            "\1\25\1\26",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\41\1\uffff\1\42\3\uffff\1\43\5\uffff\1\44\1\45\1\uffff\1"+
            "\46",
            "",
            "",
            "",
            "\1\47\11\uffff\1\50",
            "\1\51",
            "\1\52",
            "",
            "",
            "",
            "\1\53",
            "",
            "",
            "\1\57\1\uffff\10\56\2\57\12\uffff\3\57\21\uffff\1\54\13\uffff"+
            "\3\57\21\uffff\1\54",
            "\1\57\1\uffff\12\60\12\uffff\3\57\35\uffff\3\57",
            "",
            "\1\61\4\uffff\1\62",
            "",
            "\1\63",
            "",
            "",
            "",
            "",
            "",
            "\1\64\2\uffff\1\65",
            "",
            "\1\66",
            "\1\67",
            "\1\70",
            "\1\71",
            "\1\72",
            "",
            "",
            "\1\57\1\uffff\10\56\2\57\12\uffff\3\57\35\uffff\3\57",
            "",
            "\1\57\1\uffff\12\60\12\uffff\3\57\35\uffff\3\57",
            "",
            "",
            "\1\74",
            "\1\75\5\uffff\1\76",
            "",
            "\1\77",
            "\1\100",
            "\1\101",
            "\1\102",
            "\1\103",
            "",
            "\1\104",
            "",
            "\1\105\3\uffff\1\106",
            "\1\40\13\uffff\12\40\7\uffff\32\40\4\uffff\1\40\1\uffff\32"+
            "\40",
            "\1\110",
            "\1\111",
            "\1\112",
            "\1\113",
            "\1\114",
            "",
            "\1\115\11\uffff\1\116",
            "",
            "\1\117",
            "\1\120",
            "\1\121",
            "\1\122",
            "\1\123",
            "",
            "",
            "\44\36\1\124\13\36\12\124\7\36\32\124\4\36\1\124\1\36\32\124"+
            "\uff85\36",
            "\1\40\13\uffff\12\40\7\uffff\32\40\4\uffff\1\40\1\uffff\32"+
            "\40",
            "\1\126",
            "\1\127",
            "\1\130",
            "\44\36\1\124\13\36\12\124\7\36\32\124\4\36\1\124\1\36\32\124"+
            "\uff85\36",
            "",
            "\1\40\13\uffff\12\40\7\uffff\32\40\4\uffff\1\40\1\uffff\32"+
            "\40",
            "\1\132",
            "\1\133",
            "",
            "\1\134",
            "\1\135",
            "\1\136",
            "\1\137",
            "\1\140",
            "\1\141",
            "\1\142",
            "\1\143",
            "\1\144",
            "\1\145",
            "\44\36\1\124\13\36\12\124\7\36\32\124\4\36\1\124\1\36\32\124"+
            "\uff85\36",
            "\1\146",
            "\1\147",
            "\1\150",
            "\1\151",
            "\44\36\1\124\13\36\12\124\7\36\32\124\4\36\1\124\1\36\32\124"+
            "\uff85\36"
    };

    static final short[] DFA26_eot = DFA.unpackEncodedString(DFA26_eotS);
    static final short[] DFA26_eof = DFA.unpackEncodedString(DFA26_eofS);
    static final char[] DFA26_min = DFA.unpackEncodedStringToUnsignedChars(DFA26_minS);
    static final char[] DFA26_max = DFA.unpackEncodedStringToUnsignedChars(DFA26_maxS);
    static final short[] DFA26_accept = DFA.unpackEncodedString(DFA26_acceptS);
    static final short[] DFA26_special = DFA.unpackEncodedString(DFA26_specialS);
    static final short[][] DFA26_transition;

    static {
        int numStates = DFA26_transitionS.length;
        DFA26_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA26_transition[i] = DFA.unpackEncodedString(DFA26_transitionS[i]);
        }
    }

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = DFA26_eot;
            this.eof = DFA26_eof;
            this.min = DFA26_min;
            this.max = DFA26_max;
            this.accept = DFA26_accept;
            this.special = DFA26_special;
            this.transition = DFA26_transition;
        }
        public String getDescription() {
            return "1:1: Tokens : ( T__25 | T__26 | T__27 | T__28 | T__29 | T__30 | T__31 | T__32 | T__33 | T__34 | T__35 | T__36 | T__37 | T__38 | T__39 | T__40 | T__41 | T__42 | T__43 | T__44 | T__45 | T__46 | T__47 | T__48 | T__49 | T__50 | T__51 | T__52 | T__53 | T__54 | T__55 | Identifier | Character | String | Hex | Integer | Octal | FloatingPoint | WS | Comment | LineComment | LineCommand );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            IntStream input = _input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_84 = input.LA(1);

                        s = -1;
                        if ( ((LA26_84 >= '\u0000' && LA26_84 <= '#')||(LA26_84 >= '%' && LA26_84 <= '/')||(LA26_84 >= ':' && LA26_84 <= '@')||(LA26_84 >= '[' && LA26_84 <= '^')||LA26_84=='`'||(LA26_84 >= '{' && LA26_84 <= '\uFFFF')) ) {s = 30;}

                        else if ( (LA26_84=='$'||(LA26_84 >= '0' && LA26_84 <= '9')||(LA26_84 >= 'A' && LA26_84 <= 'Z')||LA26_84=='_'||(LA26_84 >= 'a' && LA26_84 <= 'z')) ) {s = 84;}

                        else s = 32;

                        if ( s>=0 ) return s;
                        break;

                    case 1 : 
                        int LA26_100 = input.LA(1);

                        s = -1;
                        if ( (LA26_100=='$'||(LA26_100 >= '0' && LA26_100 <= '9')||(LA26_100 >= 'A' && LA26_100 <= 'Z')||LA26_100=='_'||(LA26_100 >= 'a' && LA26_100 <= 'z')) ) {s = 84;}

                        else if ( ((LA26_100 >= '\u0000' && LA26_100 <= '#')||(LA26_100 >= '%' && LA26_100 <= '/')||(LA26_100 >= ':' && LA26_100 <= '@')||(LA26_100 >= '[' && LA26_100 <= '^')||LA26_100=='`'||(LA26_100 >= '{' && LA26_100 <= '\uFFFF')) ) {s = 30;}

                        else s = 32;

                        if ( s>=0 ) return s;
                        break;

                    case 2 : 
                        int LA26_79 = input.LA(1);

                        s = -1;
                        if ( (LA26_79=='$'||(LA26_79 >= '0' && LA26_79 <= '9')||(LA26_79 >= 'A' && LA26_79 <= 'Z')||LA26_79=='_'||(LA26_79 >= 'a' && LA26_79 <= 'z')) ) {s = 84;}

                        else if ( ((LA26_79 >= '\u0000' && LA26_79 <= '#')||(LA26_79 >= '%' && LA26_79 <= '/')||(LA26_79 >= ':' && LA26_79 <= '@')||(LA26_79 >= '[' && LA26_79 <= '^')||LA26_79=='`'||(LA26_79 >= '{' && LA26_79 <= '\uFFFF')) ) {s = 30;}

                        else s = 32;

                        if ( s>=0 ) return s;
                        break;

                    case 3 : 
                        int LA26_105 = input.LA(1);

                        s = -1;
                        if ( (LA26_105=='$'||(LA26_105 >= '0' && LA26_105 <= '9')||(LA26_105 >= 'A' && LA26_105 <= 'Z')||LA26_105=='_'||(LA26_105 >= 'a' && LA26_105 <= 'z')) ) {s = 84;}

                        else if ( ((LA26_105 >= '\u0000' && LA26_105 <= '#')||(LA26_105 >= '%' && LA26_105 <= '/')||(LA26_105 >= ':' && LA26_105 <= '@')||(LA26_105 >= '[' && LA26_105 <= '^')||LA26_105=='`'||(LA26_105 >= '{' && LA26_105 <= '\uFFFF')) ) {s = 30;}

                        else s = 32;

                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }

    }
 

}